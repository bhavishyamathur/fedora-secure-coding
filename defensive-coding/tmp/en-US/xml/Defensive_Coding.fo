<?xml version="1.0"?>
<fo:root xmlns:fo="http://www.w3.org/1999/XSL/Format" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" font-size="10pt" text-align="left" line-height="1.3" font-selection-strategy="character-by-character" line-height-shift-adjustment="disregard-shifts" writing-mode="lr-tb" language="en"><fo:layout-master-set><fo:simple-page-master master-name="blank" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body display-align="center" margin-bottom="8mm" margin-top="11mm" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-blank" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-blank" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-blank" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-blank" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-first" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-odd" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-even" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="lot-first" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="lot-odd" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="lot-even" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="front-first" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="front-odd" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="front-even" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="body-first" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="body-odd" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="body-even" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="back-first" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="back-odd" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="back-even" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="index-first" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="2" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="index-odd" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="2" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="index-even" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="2" margin-left="0in" margin-right="0in"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="blank-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-blank" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-blank" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-blank" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-blank" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-first-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-odd-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="titlepage-even-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="lot-first-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="lot-odd-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="lot-even-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="front-first-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="front-odd-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="front-even-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="body-first-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="body-odd-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="body-even-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="back-first-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="back-odd-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="back-even-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="1" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="index-first-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="2" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-first" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-first" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-first" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-first" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="index-odd-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="31mm" margin-right="19mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="2" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-odd" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-odd" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-odd" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-odd" precedence="false" extent="0in"/></fo:simple-page-master><fo:simple-page-master master-name="index-even-draft" page-width="210mm" page-height="297mm" margin-top="15mm" margin-bottom="15mm" margin-left="19mm" margin-right="31mm"><fo:region-body margin-bottom="8mm" margin-top="11mm" column-gap="12pt" column-count="2" margin-left="0in" margin-right="0in" background-image="url(Common_Content/images/watermark-draft.png)" background-attachment="fixed" background-repeat="no-repeat" background-position-horizontal="center" background-position-vertical="center"/><fo:region-before region-name="xsl-region-before-even" extent="9mm" precedence="true" display-align="before"/><fo:region-after region-name="xsl-region-after-even" extent="5mm" precedence="true" display-align="after"/><fo:region-start border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-outer-even" precedence="false" extent="0in"/><fo:region-end border-width="0" padding="0" reference-orientation="90" region-name="xsl-region-inner-even" precedence="false" extent="0in"/></fo:simple-page-master><fo:page-sequence-master master-name="titlepage"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="titlepage-first" page-position="first"/><fo:conditional-page-master-reference master-reference="titlepage-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="titlepage-even"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="lot"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="lot-first" page-position="first"/><fo:conditional-page-master-reference master-reference="lot-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="lot-even"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="front"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="front-first" page-position="first"/><fo:conditional-page-master-reference master-reference="front-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="front-even"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="body"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="body-first" page-position="first"/><fo:conditional-page-master-reference master-reference="body-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="body-even"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="back"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="back-first" page-position="first"/><fo:conditional-page-master-reference master-reference="back-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="back-even"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="index"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="index-first" page-position="first"/><fo:conditional-page-master-reference master-reference="index-odd" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="index-even"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="titlepage-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank-draft" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="titlepage-first-draft" page-position="first"/><fo:conditional-page-master-reference master-reference="titlepage-odd-draft" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="titlepage-even-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="lot-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank-draft" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="lot-first-draft" page-position="first"/><fo:conditional-page-master-reference master-reference="lot-odd-draft" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="lot-even-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="front-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank-draft" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="front-first-draft" page-position="first"/><fo:conditional-page-master-reference master-reference="front-odd-draft" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="front-even-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="body-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank-draft" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="body-first-draft" page-position="first"/><fo:conditional-page-master-reference master-reference="body-odd-draft" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="body-even-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="back-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank-draft" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="back-first-draft" page-position="first"/><fo:conditional-page-master-reference master-reference="back-odd-draft" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="back-even-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master><fo:page-sequence-master master-name="index-draft"><fo:repeatable-page-master-alternatives><fo:conditional-page-master-reference master-reference="blank-draft" blank-or-not-blank="blank"/><fo:conditional-page-master-reference master-reference="index-first-draft" page-position="first"/><fo:conditional-page-master-reference master-reference="index-odd-draft" odd-or-even="odd"/><fo:conditional-page-master-reference odd-or-even="even" master-reference="index-even-draft"/></fo:repeatable-page-master-alternatives></fo:page-sequence-master></fo:layout-master-set><fo:declarations xmlns:fox="http://xmlgraphics.apache.org/fop/extensions"><x:xmpmeta xmlns:x="adobe:ns:meta/"><rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"><rdf:Description xmlns:dc="http://purl.org/dc/elements/1.1/" rdf:about=""><dc:title>Defensive Coding - A Guide to Improving Software Security</dc:title><dc:creator/></rdf:Description><rdf:Description xmlns:pdf="http://ns.adobe.com/pdf/1.3/" rdf:about=""/><rdf:Description xmlns:xmp="http://ns.adobe.com/xap/1.0/" rdf:about=""><xmp:CreatorTool>DocBook XSL Stylesheets with Apache FOP</xmp:CreatorTool></rdf:Description></rdf:RDF></x:xmpmeta></fo:declarations><fo:bookmark-tree><fo:bookmark internal-destination="idm7442128" starting-state="hide"><fo:bookmark-title>Defensive Coding</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="toc...idm7442128"><fo:bookmark-title>Table of Contents</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm7438560" starting-state="hide"><fo:bookmark-title>Part I. Programming Languages</fo:bookmark-title><fo:bookmark internal-destination="chap-Defensive_Coding-C" starting-state="hide"><fo:bookmark-title>Chapter 1. The C Programming Language</fo:bookmark-title><fo:bookmark internal-destination="sect-Defensive_Coding-C-Language" starting-state="hide"><fo:bookmark-title>1.1. The core language</fo:bookmark-title><fo:bookmark internal-destination="sect-Defensive_Coding-C-Undefined" starting-state="hide"><fo:bookmark-title>1.1.1. Undefined behavior</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-C-Pointers" starting-state="hide"><fo:bookmark-title>1.1.2. Recommendations for pointers and array handling</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-C-Arithmetic" starting-state="hide"><fo:bookmark-title>1.1.3. Recommendations for integer arithmetic</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-C-Libc" starting-state="hide"><fo:bookmark-title>1.2. The C standard library</fo:bookmark-title><fo:bookmark internal-destination="sect-Defensive_Coding-C-Absolutely-Banned" starting-state="hide"><fo:bookmark-title>1.2.1. Absolutely banned interfaces</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-C-Avoid" starting-state="hide"><fo:bookmark-title>1.2.2. Functions to avoid</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-C-String-Functions-Length" starting-state="hide"><fo:bookmark-title>1.2.3. String Functions With Explicit Length Arguments</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-C-Allocators" starting-state="hide"><fo:bookmark-title>1.3. Memory allocators</fo:bookmark-title><fo:bookmark internal-destination="idp29030176" starting-state="hide"><fo:bookmark-title>1.3.1. malloc and related functions</fo:bookmark-title><fo:bookmark internal-destination="idp28884832" starting-state="hide"><fo:bookmark-title>1.3.1.1. Use-after-free errors</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idp38250608" starting-state="hide"><fo:bookmark-title>1.3.1.2. Handling memory allocation errors</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-C-Allocators-alloca" starting-state="hide"><fo:bookmark-title>1.3.2. alloca and other forms of stack-based allocation</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-C-Allocators-Arrays" starting-state="hide"><fo:bookmark-title>1.3.3. Array allocation</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idp14710720" starting-state="hide"><fo:bookmark-title>1.3.4. Custom memory allocators</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idp14811872" starting-state="hide"><fo:bookmark-title>1.3.5. Conservative garbage collection</fo:bookmark-title></fo:bookmark></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="chap-Defensive_Coding-CXX" starting-state="hide"><fo:bookmark-title>Chapter 2. The C++ Programming Language</fo:bookmark-title><fo:bookmark internal-destination="sect-Defensive_Coding-CXX-Language" starting-state="hide"><fo:bookmark-title>2.1. The core language</fo:bookmark-title><fo:bookmark internal-destination="idp28160176" starting-state="hide"><fo:bookmark-title>2.1.1. Array allocation with operator new[]</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idp30005424" starting-state="hide"><fo:bookmark-title>2.1.2. Overloading</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idp23839088" starting-state="hide"><fo:bookmark-title>2.1.3. ABI compatibility and preparing for security updates</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-CXX-Language-CXX11" starting-state="hide"><fo:bookmark-title>2.1.4. C++0X and C++11 support</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-CXX-Std" starting-state="hide"><fo:bookmark-title>2.2. The C++ standard library</fo:bookmark-title><fo:bookmark internal-destination="idp18422032" starting-state="hide"><fo:bookmark-title>2.2.1. Containers and operator[]</fo:bookmark-title></fo:bookmark></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="chap-Defensive_Coding-Python" starting-state="hide"><fo:bookmark-title>Chapter 3. The Python Programming Language</fo:bookmark-title><fo:bookmark internal-destination="idp28890528" starting-state="hide"><fo:bookmark-title>3.1. Dangerous standard library features</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idp30098896" starting-state="hide"><fo:bookmark-title>3.2. Run-time compilation and code generation</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm11398720" starting-state="hide"><fo:bookmark-title>3.3. Sandboxing</fo:bookmark-title></fo:bookmark></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="idm7435600" starting-state="hide"><fo:bookmark-title>Part II. Specific Programming Tasks</fo:bookmark-title><fo:bookmark internal-destination="chap-Defensive_Coding-Tasks-Library_Design" starting-state="hide"><fo:bookmark-title>Chapter 4. Library Design</fo:bookmark-title><fo:bookmark internal-destination="idp25996096" starting-state="hide"><fo:bookmark-title>4.1. State management</fo:bookmark-title><fo:bookmark internal-destination="idp22529488" starting-state="hide"><fo:bookmark-title>4.1.1. Global state</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idp26805456" starting-state="hide"><fo:bookmark-title>4.1.2. Handles</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="idp13411568" starting-state="hide"><fo:bookmark-title>4.2. Object orientation</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Library_Design-Callbacks" starting-state="hide"><fo:bookmark-title>4.3. Callbacks</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idp29930800" starting-state="hide"><fo:bookmark-title>4.4. Process attributes</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Descriptors" starting-state="hide"><fo:bookmark-title>Chapter 5. File Descriptor Management</fo:bookmark-title><fo:bookmark internal-destination="idp17285664" starting-state="hide"><fo:bookmark-title>5.1. Closing descriptors</fo:bookmark-title><fo:bookmark internal-destination="idp19761760" starting-state="hide"><fo:bookmark-title>5.1.1. Error handling during descriptor close</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idp19750592" starting-state="hide"><fo:bookmark-title>5.1.2. Closing descriptors and race conditions</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idp19158016" starting-state="hide"><fo:bookmark-title>5.1.3. Lingering state after close</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Descriptors-Child_Processes" starting-state="hide"><fo:bookmark-title>5.2. Preventing file descriptor leaks to child processes</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Descriptors-Limit" starting-state="hide"><fo:bookmark-title>5.3. Dealing with the select limit</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="chap-Defensive_Coding-Tasks-File_System" starting-state="hide"><fo:bookmark-title>Chapter 6. File system manipulation</fo:bookmark-title><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-File_System-Unowned" starting-state="hide"><fo:bookmark-title>6.1. Working with files and directories owned by other users</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-File_System-Foreign" starting-state="hide"><fo:bookmark-title>6.2. Accessing the file system as a different user</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-File_System-Limits" starting-state="hide"><fo:bookmark-title>6.3. File system limits</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-File_System-Features" starting-state="hide"><fo:bookmark-title>6.4. File system features</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-File_System-Free_Space" starting-state="hide"><fo:bookmark-title>6.5. Checking free space</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="chap-Defensive_Coding-Tasks-Temporary_Files" starting-state="hide"><fo:bookmark-title>Chapter 7. Temporary files</fo:bookmark-title><fo:bookmark internal-destination="chap-Defensive_Coding-Tasks-Temporary_Files-Location" starting-state="hide"><fo:bookmark-title>7.1. Obtaining the location of temporary directory</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idp24251408" starting-state="hide"><fo:bookmark-title>7.2. Named temporary files</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idp18102560" starting-state="hide"><fo:bookmark-title>7.3. Temporary files without names</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="chap-Defensive_Coding-Tasks-Temporary_Directory" starting-state="hide"><fo:bookmark-title>7.4. Temporary directories</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idm5554976" starting-state="hide"><fo:bookmark-title>7.5. Compensating for unsafe file creation</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Processes" starting-state="hide"><fo:bookmark-title>Chapter 8. Processes</fo:bookmark-title><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Processes-Creation" starting-state="hide"><fo:bookmark-title>8.1. Safe process creation</fo:bookmark-title><fo:bookmark internal-destination="idp21791008" starting-state="hide"><fo:bookmark-title>8.1.1. Obtaining the program path and the command line template</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Processes-execve" starting-state="hide"><fo:bookmark-title>8.1.2. Bypassing the shell</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Processes-environ" starting-state="hide"><fo:bookmark-title>8.1.3. Specifying the process environment</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idp33850288" starting-state="hide"><fo:bookmark-title>8.1.4. Robust argument list processing</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Processes-Command_Line_Visibility" starting-state="hide"><fo:bookmark-title>8.1.5. Passing secrets to subprocesses</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="idp33863024" starting-state="hide"><fo:bookmark-title>8.2. Handling child process termination</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idp19348544" starting-state="hide"><fo:bookmark-title>8.3. SUID/SGID processes</fo:bookmark-title><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-secure_getenv" starting-state="hide"><fo:bookmark-title>8.3.1. Accessing environment variables</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Processes-Daemons" starting-state="hide"><fo:bookmark-title>8.4. Daemons</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idp14551248" starting-state="hide"><fo:bookmark-title>8.5. Semantics of command line arguments</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Processes-Fork-Parallel" starting-state="hide"><fo:bookmark-title>8.6. fork as a primitive for parallelism</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="chap-Defensive_Coding-Tasks-Serialization" starting-state="hide"><fo:bookmark-title>Chapter 9. Serialization and Deserialization</fo:bookmark-title><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Serialization-Decoders" starting-state="hide"><fo:bookmark-title>9.1. Recommendations for manually written decoders</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idp22532960" starting-state="hide"><fo:bookmark-title>9.2. Protocol design</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idp18687152" starting-state="hide"><fo:bookmark-title>9.3. Library support for deserialization</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML" starting-state="hide"><fo:bookmark-title>9.4. XML serialization</fo:bookmark-title><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-External" starting-state="hide"><fo:bookmark-title>9.4.1. External references</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-Entities" starting-state="hide"><fo:bookmark-title>9.4.2. Entity expansion</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-XInclude" starting-state="hide"><fo:bookmark-title>9.4.3. XInclude processing</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-Validation" starting-state="hide"><fo:bookmark-title>9.4.4. Algorithmic complexity of XML validation</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-Expat" starting-state="hide"><fo:bookmark-title>9.4.5. Using Expat for XML parsing</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse" starting-state="hide"><fo:bookmark-title>9.4.6. Using OpenJDK for XML parsing and validation</fo:bookmark-title><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse-DOM" starting-state="hide"><fo:bookmark-title>9.4.6.1. DOM-based XML parsing and DTD validation in OpenJDK</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse-SAX" starting-state="hide"><fo:bookmark-title>9.4.6.2. XML Schema validation in OpenJDK</fo:bookmark-title></fo:bookmark></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="idp15314448" starting-state="hide"><fo:bookmark-title>9.5. Protocol Encoders</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="chap-Defensive_Coding-Tasks-Cryptography" starting-state="hide"><fo:bookmark-title>Chapter 10. Cryptography</fo:bookmark-title><fo:bookmark internal-destination="idp29121120" starting-state="hide"><fo:bookmark-title>10.1. Primitives</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="idp24346144" starting-state="hide"><fo:bookmark-title>10.2. Randomness</fo:bookmark-title></fo:bookmark></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="idm5995376" starting-state="hide"><fo:bookmark-title>Part III. Implementing Security Features</fo:bookmark-title><fo:bookmark internal-destination="chap-Defensive_Coding-Authentication" starting-state="hide"><fo:bookmark-title>Chapter 11. Authentication and Authorization</fo:bookmark-title><fo:bookmark internal-destination="sect-Defensive_Coding-Authentication-Server" starting-state="hide"><fo:bookmark-title>11.1. Authenticating servers</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Authentication-Host_based" starting-state="hide"><fo:bookmark-title>11.2. Host-based authentication</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Authentication-UNIX_Domain" starting-state="hide"><fo:bookmark-title>11.3. UNIX domain socket authentication</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-Authentication-Netlink" starting-state="hide"><fo:bookmark-title>11.4. AF_NETLINK authentication of origin</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="chap-Defensive_Coding-TLS" starting-state="hide"><fo:bookmark-title>Chapter 12. Transport Layer Security</fo:bookmark-title><fo:bookmark internal-destination="sect-Defensive_Coding-TLS-Pitfalls" starting-state="hide"><fo:bookmark-title>12.1. Common Pitfalls</fo:bookmark-title><fo:bookmark internal-destination="sect-Defensive_Coding-TLS-OpenSSL" starting-state="hide"><fo:bookmark-title>12.1.1. OpenSSL Pitfalls</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-TLS-Pitfalls-GNUTLS" starting-state="hide"><fo:bookmark-title>12.1.2. GNUTLS Pitfalls</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-TLS-Pitfalls-OpenJDK" starting-state="hide"><fo:bookmark-title>12.1.3. OpenJDK Pitfalls</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-TLS-Pitfalls-NSS" starting-state="hide"><fo:bookmark-title>12.1.4. NSS Pitfalls</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-TLS-Client" starting-state="hide"><fo:bookmark-title>12.2. TLS Clients</fo:bookmark-title><fo:bookmark internal-destination="idp26942720" starting-state="hide"><fo:bookmark-title>12.2.1. Implementation TLS Clients With OpenSSL</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-TLS-Client-GNUTLS" starting-state="hide"><fo:bookmark-title>12.2.2. Implementation TLS Clients With GNUTLS</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-TLS-Client-OpenJDK" starting-state="hide"><fo:bookmark-title>12.2.3. Implementing TLS Clients With OpenJDK</fo:bookmark-title><fo:bookmark internal-destination="idp14191104" starting-state="hide"><fo:bookmark-title>12.2.3.1. Overriding server certificate validation with OpenJDK 6</fo:bookmark-title></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-TLS-Client-NSS" starting-state="hide"><fo:bookmark-title>12.2.4. Implementing TLS Clients With NSS</fo:bookmark-title></fo:bookmark><fo:bookmark internal-destination="sect-Defensive_Coding-TLS-Client-Python" starting-state="hide"><fo:bookmark-title>12.2.5. Implementing TLS Clients With Python</fo:bookmark-title></fo:bookmark></fo:bookmark></fo:bookmark></fo:bookmark><fo:bookmark internal-destination="appe-UEFI_Secure_Boot_Guide-Revision_History" starting-state="hide"><fo:bookmark-title>Appendix A. Revision History</fo:bookmark-title></fo:bookmark></fo:bookmark-tree><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm7442128"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm7438560"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="chap-Defensive_Coding-C"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-C-Language"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-C-Undefined"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-C-Pointers"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-C-Arithmetic"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-C-Libc"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-C-Absolutely-Banned"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-C-Avoid"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-C-String-Functions-Length"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-C-Allocators"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp29030176"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp28884832"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp38250608"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-C-Allocators-alloca"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-C-Allocators-Arrays"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp14710720"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp14811872"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="chap-Defensive_Coding-CXX"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-CXX-Language"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp28160176"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp30005424"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp23839088"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-CXX-Language-CXX11"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-CXX-Std"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp18422032"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="chap-Defensive_Coding-Python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp28890528"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp30098896"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm11398720"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm7435600"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="chap-Defensive_Coding-Tasks-Library_Design"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp25996096"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp22529488"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp26805456"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp13411568"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Library_Design-Callbacks"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp29930800"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Descriptors"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp17285664"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp19761760"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp19750592"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp19158016"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Descriptors-Child_Processes"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Descriptors-Limit"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="chap-Defensive_Coding-Tasks-File_System"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-File_System-Unowned"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-File_System-Foreign"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-File_System-Limits"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-File_System-Features"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-File_System-Free_Space"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="chap-Defensive_Coding-Tasks-Temporary_Files"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="chap-Defensive_Coding-Tasks-Temporary_Files-Location"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp24251408"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp18102560"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="chap-Defensive_Coding-Tasks-Temporary_Directory"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm5554976"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Processes"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Processes-Creation"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp21791008"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Processes-execve"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Processes-environ"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp33850288"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Processes-Command_Line_Visibility"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp33863024"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp19348544"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-secure_getenv"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Processes-Daemons"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp14551248"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Processes-Fork-Parallel"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="chap-Defensive_Coding-Tasks-Serialization"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Serialization-Decoders"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp22532960"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp18687152"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-External"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-Entities"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-XInclude"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-Validation"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-Expat"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse-DOM"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse-SAX"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp15314448"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="chap-Defensive_Coding-Tasks-Cryptography"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp29121120"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp24346144"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idm5995376"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="chap-Defensive_Coding-Authentication"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Authentication-Server"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Authentication-Host_based"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Authentication-UNIX_Domain"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-Authentication-Netlink"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="chap-Defensive_Coding-TLS"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-TLS-Pitfalls"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-TLS-OpenSSL"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-TLS-Pitfalls-GNUTLS"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-TLS-Pitfalls-OpenJDK"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-TLS-Pitfalls-NSS"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-TLS-Client"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp26942720"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-TLS-Client-GNUTLS"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-TLS-Client-OpenJDK"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="idp14191104"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-TLS-Client-NSS"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="sect-Defensive_Coding-TLS-Client-Python"/><fox:destination xmlns:fox="http://xmlgraphics.apache.org/fop/extensions" internal-destination="appe-UEFI_Secure_Boot_Guide-Revision_History"/><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="titlepage" language="en" format="i" initial-page-number="1" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"/></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Defensive Coding</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"/></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="idm7442128"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions"><fo:block><fo:block text-align="center" font-size="34pt" space-before="18.6624pt" font-weight="bold" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" color="#3c6eb4"> </fo:block><fo:block text-align="center" font-size="34pt" space-before="18.6624pt" font-weight="bold" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" color="#3c6eb4"><fo:block keep-with-next.within-column="always" hyphenate="false">Defensive Coding</fo:block></fo:block><fo:block text-align="center" font-size="14pt" space-before="30pt" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" color="#3c6eb4" font-weight="bold">A Guide to Improving Software Security</fo:block><fo:block font-size="17.28pt" keep-with-next.within-column="always" space-before="2in" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" color="#3c6eb4" font-weight="bold" text-align="center"><fo:block>
		<fo:external-graphic src="url(Common_Content/images/redhat-logo.svg)" width="auto" height="auto" content-width="auto" content-height="auto" content-type="content-type:image/svg+xml"/>

	</fo:block></fo:block><fo:block font-size="14pt" space-before="15.552pt" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" color="#3c6eb4" font-weight="bold" text-align="center">Florian Weimer</fo:block><fo:block color="black" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" font-weight="bold" font-size="12pt" text-align="center"/></fo:block><fo:block break-after="page"/><fo:block><fo:block font-size="14.4pt" font-weight="bold" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats">  Defensive Coding<fo:block padding-bottom="24pt">A Guide to Improving Software Security<fo:block>Edition 1.0</fo:block></fo:block></fo:block><fo:block font-size="10pt"><fo:table table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row><fo:table-cell><fo:block>Author</fo:block></fo:table-cell><fo:table-cell><fo:block>Florian Weimer</fo:block></fo:table-cell><fo:table-cell><fo:block><fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:fweimer@redhat.com" font-style="italic" color="#0066cc">fweimer@redhat.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block><fo:block padding-top="12pt" padding-bottom="24pt" font-size="10pt"><fo:block id="idp29545648"><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Copyright <fo:inline font-family="serif">©</fo:inline> 2012 Red Hat, Inc.
	</fo:block><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		The text of and illustrations in this document are licensed by Red Hat under a Creative Commons Attribution–Share Alike 3.0 Unported license ("CC-BY-SA"). An explanation of CC-BY-SA is available at <fo:basic-link external-destination="url(http://creativecommons.org/licenses/by-sa/3.0/)" font-style="italic" color="#0066cc"><fo:inline hyphenate="false">http://creativecommons.org/licenses/by-sa/3.0/</fo:inline></fo:basic-link>. The original authors of this document, and Red Hat, designate the Fedora Project as the "Attribution Party" for purposes of CC-BY-SA. In accordance with CC-BY-SA, if you distribute this document or an adaptation of it, you must provide the URL for the original version.
	</fo:block><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Red Hat, as the licensor of this document, waives the right to enforce, and agrees not to assert, Section 4d of CC-BY-SA to the fullest extent permitted by applicable law.
	</fo:block><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Red Hat, Red Hat Enterprise Linux, the Shadowman logo, JBoss, MetaMatrix, Fedora, the Infinity Logo, and RHCE are trademarks of Red Hat, Inc., registered in the United States and other countries.
	</fo:block><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		For guidelines on the permitted uses of the Fedora trademarks, refer to <fo:basic-link external-destination="url(https://fedoraproject.org/wiki/Legal:Trademark_guidelines)" font-style="italic" color="#0066cc"><fo:inline hyphenate="false">https://fedoraproject.org/wiki/Legal:Trademark_guidelines</fo:inline></fo:basic-link>.
	</fo:block><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Linux<fo:inline font-family="serif">®</fo:inline> is the registered trademark of Linus Torvalds in the United States and other countries.
	</fo:block><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Java<fo:inline font-family="serif">®</fo:inline> is a registered trademark of Oracle and/or its affiliates.
	</fo:block><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		XFS<fo:inline font-family="serif">®</fo:inline> is a trademark of Silicon Graphics International Corp. or its subsidiaries in the United States and/or other countries.
	</fo:block><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		MySQL<fo:inline font-family="serif">®</fo:inline> is a registered trademark of MySQL AB in the United States, the European Union and other countries.
	</fo:block><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		All other trademarks are the property of their respective owners.
	</fo:block></fo:block></fo:block></fo:block><fo:block><fo:block start-indent="0.0in" end-indent="0.0in"><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This document provides guidelines for improving software security through secure coding. It covers common programming languages and libraries, and focuses on concrete recommendations.
		</fo:block></fo:block></fo:block><fo:block break-after="page"/></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="lot" language="en" format="i" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Defensive Coding</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="toc...idm7442128" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="18pt" space-before.optimum="18pt" space-before.maximum="24pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm7438560">I. Programming Languages</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="idm7438560" text-align="right"><fo:page-number-citation ref-id="idm7438560"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.idm7438560" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="chap-Defensive_Coding-C">1. The C Programming Language</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="chap-Defensive_Coding-C" text-align="right"><fo:page-number-citation ref-id="chap-Defensive_Coding-C"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.chap-Defensive_Coding-C" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-C-Language">1.1. The core language</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-C-Language" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-C-Language"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.sect-Defensive_Coding-C-Language" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-C-Undefined">1.1.1. Undefined behavior</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-C-Undefined" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-C-Undefined"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-C-Pointers">1.1.2. Recommendations for pointers and array handling</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-C-Pointers" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-C-Pointers"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-C-Arithmetic">1.1.3. Recommendations for integer arithmetic</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-C-Arithmetic" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-C-Arithmetic"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-C-Libc">1.2. The C standard library</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-C-Libc" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-C-Libc"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.sect-Defensive_Coding-C-Libc" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-C-Absolutely-Banned">1.2.1. Absolutely banned interfaces</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-C-Absolutely-Banned" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-C-Absolutely-Banned"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-C-Avoid">1.2.2. Functions to avoid</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-C-Avoid" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-C-Avoid"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-C-String-Functions-Length">1.2.3. String Functions With Explicit Length Arguments</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-C-String-Functions-Length" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-C-String-Functions-Length"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-C-Allocators">1.3. Memory allocators</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-C-Allocators" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-C-Allocators"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.sect-Defensive_Coding-C-Allocators" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp29030176">1.3.1. <fo:inline font-family="Liberation Mono,monospace">malloc</fo:inline> and related functions</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp29030176" text-align="right"><fo:page-number-citation ref-id="idp29030176"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-C-Allocators-alloca">1.3.2. <fo:inline font-family="Liberation Mono,monospace">alloca</fo:inline> and other forms of stack-based allocation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-C-Allocators-alloca" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-C-Allocators-alloca"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-C-Allocators-Arrays">1.3.3. Array allocation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-C-Allocators-Arrays" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-C-Allocators-Arrays"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp14710720">1.3.4. Custom memory allocators</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp14710720" text-align="right"><fo:page-number-citation ref-id="idp14710720"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp14811872">1.3.5. Conservative garbage collection</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp14811872" text-align="right"><fo:page-number-citation ref-id="idp14811872"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="chap-Defensive_Coding-CXX">2. The C++ Programming Language</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="chap-Defensive_Coding-CXX" text-align="right"><fo:page-number-citation ref-id="chap-Defensive_Coding-CXX"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.chap-Defensive_Coding-CXX" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-CXX-Language">2.1. The core language</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-CXX-Language" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-CXX-Language"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.sect-Defensive_Coding-CXX-Language" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp28160176">2.1.1. Array allocation with <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">operator new[]</fo:inline></fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp28160176" text-align="right"><fo:page-number-citation ref-id="idp28160176"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp30005424">2.1.2. Overloading</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp30005424" text-align="right"><fo:page-number-citation ref-id="idp30005424"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp23839088">2.1.3. ABI compatibility and preparing for security updates</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp23839088" text-align="right"><fo:page-number-citation ref-id="idp23839088"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-CXX-Language-CXX11">2.1.4. C++0X and C++11 support</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-CXX-Language-CXX11" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-CXX-Language-CXX11"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-CXX-Std">2.2. The C++ standard library</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-CXX-Std" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-CXX-Std"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.sect-Defensive_Coding-CXX-Std" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp18422032">2.2.1. Containers and <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">operator[]</fo:inline></fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp18422032" text-align="right"><fo:page-number-citation ref-id="idp18422032"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="chap-Defensive_Coding-Python">3. The Python Programming Language</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="chap-Defensive_Coding-Python" text-align="right"><fo:page-number-citation ref-id="chap-Defensive_Coding-Python"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.chap-Defensive_Coding-Python" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp28890528">3.1. Dangerous standard library features</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp28890528" text-align="right"><fo:page-number-citation ref-id="idp28890528"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp30098896">3.2. Run-time compilation and code generation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp30098896" text-align="right"><fo:page-number-citation ref-id="idp30098896"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm11398720">3.3. Sandboxing</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm11398720" text-align="right"><fo:page-number-citation ref-id="idm11398720"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="18pt" space-before.optimum="18pt" space-before.maximum="24pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm7435600">II. Specific Programming Tasks</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="idm7435600" text-align="right"><fo:page-number-citation ref-id="idm7435600"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.idm7435600" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Library_Design">4. Library Design</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Library_Design" text-align="right"><fo:page-number-citation ref-id="chap-Defensive_Coding-Tasks-Library_Design"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.chap-Defensive_Coding-Tasks-Library_Design" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp25996096">4.1. State management</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp25996096" text-align="right"><fo:page-number-citation ref-id="idp25996096"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.idp25996096" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp22529488">4.1.1. Global state</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp22529488" text-align="right"><fo:page-number-citation ref-id="idp22529488"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp26805456">4.1.2. Handles</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp26805456" text-align="right"><fo:page-number-citation ref-id="idp26805456"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp13411568">4.2. Object orientation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp13411568" text-align="right"><fo:page-number-citation ref-id="idp13411568"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Library_Design-Callbacks">4.3. Callbacks</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Library_Design-Callbacks" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Library_Design-Callbacks"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp29930800">4.4. Process attributes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp29930800" text-align="right"><fo:page-number-citation ref-id="idp29930800"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Descriptors">5. File Descriptor Management</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Descriptors" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Descriptors"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.sect-Defensive_Coding-Tasks-Descriptors" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp17285664">5.1. Closing descriptors</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp17285664" text-align="right"><fo:page-number-citation ref-id="idp17285664"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.idp17285664" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp19761760">5.1.1. Error handling during descriptor close</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp19761760" text-align="right"><fo:page-number-citation ref-id="idp19761760"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp19750592">5.1.2. Closing descriptors and race conditions</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp19750592" text-align="right"><fo:page-number-citation ref-id="idp19750592"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp19158016">5.1.3. Lingering state after close</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp19158016" text-align="right"><fo:page-number-citation ref-id="idp19158016"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Descriptors-Child_Processes">5.2. Preventing file descriptor leaks to child processes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Descriptors-Child_Processes" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Descriptors-Child_Processes"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Descriptors-Limit">5.3. Dealing with the <fo:inline font-family="Liberation Mono,monospace">select</fo:inline> limit</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Descriptors-Limit" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Descriptors-Limit"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-File_System">6. File system manipulation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-File_System" text-align="right"><fo:page-number-citation ref-id="chap-Defensive_Coding-Tasks-File_System"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.chap-Defensive_Coding-Tasks-File_System" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-File_System-Unowned">6.1. Working with files and directories owned by other users</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-File_System-Unowned" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-File_System-Unowned"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-File_System-Foreign">6.2. Accessing the file system as a different user</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-File_System-Foreign" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-File_System-Foreign"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-File_System-Limits">6.3. File system limits</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-File_System-Limits" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-File_System-Limits"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-File_System-Features">6.4. File system features</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-File_System-Features" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-File_System-Features"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-File_System-Free_Space">6.5. Checking free space</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-File_System-Free_Space" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-File_System-Free_Space"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Temporary_Files">7. Temporary files</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Temporary_Files" text-align="right"><fo:page-number-citation ref-id="chap-Defensive_Coding-Tasks-Temporary_Files"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.chap-Defensive_Coding-Tasks-Temporary_Files" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Temporary_Files-Location">7.1. Obtaining the location of temporary directory</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Temporary_Files-Location" text-align="right"><fo:page-number-citation ref-id="chap-Defensive_Coding-Tasks-Temporary_Files-Location"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp24251408">7.2. Named temporary files</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp24251408" text-align="right"><fo:page-number-citation ref-id="idp24251408"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp18102560">7.3. Temporary files without names</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp18102560" text-align="right"><fo:page-number-citation ref-id="idp18102560"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Temporary_Directory">7.4. Temporary directories</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Temporary_Directory" text-align="right"><fo:page-number-citation ref-id="chap-Defensive_Coding-Tasks-Temporary_Directory"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm5554976">7.5. Compensating for unsafe file creation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idm5554976" text-align="right"><fo:page-number-citation ref-id="idm5554976"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes">8. Processes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Processes"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.sect-Defensive_Coding-Tasks-Processes" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-Creation">8.1. Safe process creation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-Creation" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Processes-Creation"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.sect-Defensive_Coding-Tasks-Processes-Creation" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp21791008">8.1.1. Obtaining the program path and the command line template</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp21791008" text-align="right"><fo:page-number-citation ref-id="idp21791008"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-execve">8.1.2. Bypassing the shell</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-execve" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Processes-execve"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-environ">8.1.3. Specifying the process environment</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-environ" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Processes-environ"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp33850288">8.1.4. Robust argument list processing</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp33850288" text-align="right"><fo:page-number-citation ref-id="idp33850288"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-Command_Line_Visibility">8.1.5. Passing secrets to subprocesses</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-Command_Line_Visibility" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Processes-Command_Line_Visibility"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp33863024">8.2. Handling child process termination</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp33863024" text-align="right"><fo:page-number-citation ref-id="idp33863024"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp19348544">8.3. <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SUID</fo:inline>/<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SGID</fo:inline> processes</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp19348544" text-align="right"><fo:page-number-citation ref-id="idp19348544"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.idp19348544" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-secure_getenv">8.3.1. Accessing environment variables</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-secure_getenv" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-secure_getenv"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-Daemons">8.4. Daemons</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-Daemons" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Processes-Daemons"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp14551248">8.5. Semantics of command line arguments</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp14551248" text-align="right"><fo:page-number-citation ref-id="idp14551248"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-Fork-Parallel">8.6. <fo:inline font-family="Liberation Mono,monospace">fork</fo:inline> as a primitive for parallelism</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-Fork-Parallel" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Processes-Fork-Parallel"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Serialization">9. Serialization and Deserialization</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Serialization" text-align="right"><fo:page-number-citation ref-id="chap-Defensive_Coding-Tasks-Serialization"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.chap-Defensive_Coding-Tasks-Serialization" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-Decoders">9.1. Recommendations for manually written decoders</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-Decoders" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Serialization-Decoders"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp22532960">9.2. Protocol design</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp22532960" text-align="right"><fo:page-number-citation ref-id="idp22532960"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp18687152">9.3. Library support for deserialization</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp18687152" text-align="right"><fo:page-number-citation ref-id="idp18687152"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML">9.4. XML serialization</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Serialization-XML"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.sect-Defensive_Coding-Tasks-Serialization-XML" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-External">9.4.1. External references</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-External" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Serialization-XML-External"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-Entities">9.4.2. Entity expansion</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-Entities" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Serialization-XML-Entities"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-XInclude">9.4.3. XInclude processing</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-XInclude" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Serialization-XML-XInclude"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-Validation">9.4.4. Algorithmic complexity of XML validation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-Validation" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Serialization-XML-Validation"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-Expat">9.4.5. Using Expat for XML parsing</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-Expat" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Serialization-XML-Expat"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse">9.4.6. Using OpenJDK for XML parsing and validation</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp15314448">9.5. Protocol Encoders</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp15314448" text-align="right"><fo:page-number-citation ref-id="idp15314448"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Cryptography">10. Cryptography</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Cryptography" text-align="right"><fo:page-number-citation ref-id="chap-Defensive_Coding-Tasks-Cryptography"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.chap-Defensive_Coding-Tasks-Cryptography" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp29121120">10.1. Primitives</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp29121120" text-align="right"><fo:page-number-citation ref-id="idp29121120"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp24346144">10.2. Randomness</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp24346144" text-align="right"><fo:page-number-citation ref-id="idp24346144"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="18pt" space-before.optimum="18pt" space-before.maximum="24pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idm5995376">III. Implementing Security Features</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="idm5995376" text-align="right"><fo:page-number-citation ref-id="idm5995376"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.idm5995376" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="chap-Defensive_Coding-Authentication">11. Authentication and Authorization</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="chap-Defensive_Coding-Authentication" text-align="right"><fo:page-number-citation ref-id="chap-Defensive_Coding-Authentication"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.chap-Defensive_Coding-Authentication" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Authentication-Server">11.1. Authenticating servers</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Authentication-Server" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Authentication-Server"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Authentication-Host_based">11.2. Host-based authentication</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Authentication-Host_based" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Authentication-Host_based"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Authentication-UNIX_Domain">11.3. UNIX domain socket authentication</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Authentication-UNIX_Domain" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Authentication-UNIX_Domain"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-Authentication-Netlink">11.4. <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">AF_NETLINK</fo:inline> authentication of origin</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-Authentication-Netlink" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-Authentication-Netlink"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="chap-Defensive_Coding-TLS">12. Transport Layer Security</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="chap-Defensive_Coding-TLS" text-align="right"><fo:page-number-citation ref-id="chap-Defensive_Coding-TLS"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.chap-Defensive_Coding-TLS" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Pitfalls">12.1. Common Pitfalls</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Pitfalls" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-TLS-Pitfalls"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.sect-Defensive_Coding-TLS-Pitfalls" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-TLS-OpenSSL">12.1.1. OpenSSL Pitfalls</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-TLS-OpenSSL" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-TLS-OpenSSL"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Pitfalls-GNUTLS">12.1.2. GNUTLS Pitfalls</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Pitfalls-GNUTLS" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-TLS-Pitfalls-GNUTLS"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Pitfalls-OpenJDK">12.1.3. OpenJDK Pitfalls</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Pitfalls-OpenJDK" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-TLS-Pitfalls-OpenJDK"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Pitfalls-NSS">12.1.4. NSS Pitfalls</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Pitfalls-NSS" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-TLS-Pitfalls-NSS"/></fo:basic-link></fo:inline></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Client">12.2. TLS Clients</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Client" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-TLS-Client"/></fo:basic-link></fo:inline></fo:block><fo:block id="toc.idm7442128.sect-Defensive_Coding-TLS-Client" margin-left="24pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="idp26942720">12.2.1. Implementation TLS Clients With OpenSSL</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="idp26942720" text-align="right"><fo:page-number-citation ref-id="idp26942720"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Client-GNUTLS">12.2.2. Implementation TLS Clients With GNUTLS</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Client-GNUTLS" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-TLS-Client-GNUTLS"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Client-OpenJDK">12.2.3. Implementing TLS Clients With OpenJDK</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Client-OpenJDK" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-TLS-Client-OpenJDK"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Client-NSS">12.2.4. Implementing TLS Clients With NSS</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Client-NSS" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-TLS-Client-NSS"/></fo:basic-link></fo:inline></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="start"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Client-Python">12.2.5. Implementing TLS Clients With Python</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="dots" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always"/> <fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Client-Python" text-align="right"><fo:page-number-citation ref-id="sect-Defensive_Coding-TLS-Client-Python"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" end-indent="24pt" last-line-end-indent="-24pt" text-align-last="justify" text-align="left" space-before.minimum="6pt" space-before.optimum="6pt" space-before.maximum="8pt" font-weight="bold"><fo:inline keep-with-next.within-line="always"><fo:basic-link internal-destination="appe-UEFI_Secure_Boot_Guide-Revision_History">A. Revision History</fo:basic-link></fo:inline><fo:inline keep-together.within-line="always"> <fo:leader leader-pattern="use-content" leader-pattern-width="3pt" leader-alignment="reference-area" keep-with-next.within-line="always" white-space-collapse="false"> </fo:leader> <fo:basic-link internal-destination="appe-UEFI_Secure_Boot_Guide-Revision_History" text-align="right"><fo:page-number-citation ref-id="appe-UEFI_Secure_Boot_Guide-Revision_History"/></fo:basic-link></fo:inline></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="titlepage" language="en" format="1" initial-page-number="1" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Part I. Programming Languages</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="idm7438560"><fo:block><fo:block><fo:block text-align="center" font-size="24.8832pt" space-before="18.6624pt" font-weight="bold" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" color="#3c6eb4"><fo:block keep-with-next.within-column="always" hyphenate="false">Part I. Programming Languages</fo:block></fo:block></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 1.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 1. The C Programming Language</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="chap-Defensive_Coding-C"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#3c6eb4" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">The C Programming Language</fo:block></fo:block></fo:block></fo:block><fo:block id="sect-Defensive_Coding-C-Language"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">The core language</fo:marker><fo:block color="#3c6eb4" font-size="16pt">1.1. The core language</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		C provides no memory safety. Most recommendations in this section deal with this aspect of the language.
	</fo:block><fo:block id="sect-Defensive_Coding-C-Undefined"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Undefined behavior</fo:marker><fo:block color="#3c6eb4" font-size="14pt">1.1.1. Undefined behavior</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Some C constructs are defined to be undefined by the C standard. This does not only mean that the standard does not describe what happens when the construct is executed. It also allows optimizing compilers such as GCC to assume that this particular construct is never reached. In some cases, this has caused GCC to optimize security checks away. (This is not a flaw in GCC or the C language. But C certainly has some areas which are more difficult to use than others.)
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Common sources of undefined behavior are:
		</fo:block><fo:list-block id="idp15227440" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp15227280" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					out-of-bounds array accesses
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp15226096" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					null pointer dereferences
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp15224976" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					overflow in signed integer arithmetic
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block id="sect-Defensive_Coding-C-Pointers"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Recommendations for pointers and array handling</fo:marker><fo:block color="#3c6eb4" font-size="14pt">1.1.2. Recommendations for pointers and array handling</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Always keep track of the size of the array you are working with. Often, code is more obviously correct when you keep a pointer past the last element of the array, and calculate the number of remaining elements by substracting the current position from that pointer. The alternative, updating a separate variable every time when the position is advanced, is usually less obviously correct.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			<fo:basic-link internal-destination="ex-Defensive_Coding-C-Pointers-remaining"><fo:inline font-style="italic" color="#0066cc">Example 1.1, “Array processing in C”</fo:inline></fo:basic-link> shows how to extract Pascal-style strings from a character buffer. The two pointers kept for length checks are <fo:inline font-family="Liberation Mono,monospace">inend</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">outend</fo:inline>. <fo:inline font-family="Liberation Mono,monospace">inp</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">outp</fo:inline> are the respective positions. The number of input bytes is checked using the expression <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">len &gt; (size_t)(inend - inp)</fo:inline>. The cast silences a compiler warning; <fo:inline font-family="Liberation Mono,monospace">inend</fo:inline> is always larger than <fo:inline font-family="Liberation Mono,monospace">inp</fo:inline>.
		</fo:block><fo:block><fo:block id="ex-Defensive_Coding-C-Pointers-remaining" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 1.1. Array processing in C</fo:block><fo:block id="idp29377248" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
ssize_t
extract_strings(<fo:inline color="#0000ff">const</fo:inline> <fo:inline color="#0000ff">char</fo:inline> *in, size_t inlen, <fo:inline color="#0000ff">char</fo:inline> **out, size_t outlen)
{
  <fo:inline color="#0000ff">const</fo:inline> <fo:inline color="#0000ff">char</fo:inline> *inp = in;
  <fo:inline color="#0000ff">const</fo:inline> <fo:inline color="#0000ff">char</fo:inline> *inend = in + inlen;
  <fo:inline color="#0000ff">char</fo:inline> **outp = out;
  <fo:inline color="#0000ff">char</fo:inline> **outend = out + outlen;

  <fo:inline color="#002F5D">while</fo:inline> (inp != inend) {
    size_t len;
    <fo:inline color="#0000ff">char</fo:inline> *s;
    <fo:inline color="#002F5D">if</fo:inline> (outp == outend) {
      errno = ENOSPC;
      <fo:inline color="#002F5D">goto</fo:inline> err;
    }
    len = (<fo:inline color="#0000ff">unsigned</fo:inline> <fo:inline color="#0000ff">char</fo:inline>)*inp;
    ++inp;
    <fo:inline color="#002F5D">if</fo:inline> (len &gt; (size_t)(inend - inp)) {
      errno = EINVAL;
      <fo:inline color="#002F5D">goto</fo:inline> err;
    }
    s = malloc(len + <fo:inline color="#00007f">1</fo:inline>);
    <fo:inline color="#002F5D">if</fo:inline> (s == NULL) {
      <fo:inline color="#002F5D">goto</fo:inline> err;
    }
    memcpy(s, inp, len);
    inp += len;
    s[len] = '\0';
    *outp = s;
    ++outp;
  }
  <fo:inline color="#002F5D">return</fo:inline> outp - out;
err:
  {
    <fo:inline color="#0000ff">int</fo:inline> errno_old = errno;
    <fo:inline color="#002F5D">while</fo:inline> (out != outp) {
      free(*out);
      ++out;
    }
    errno = errno_old;
  }
  <fo:inline color="#002F5D">return</fo:inline> <fo:inline color="#00007f">-1</fo:inline>;
}
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			It is important that the length checks always have the form <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">len &gt; (size_t)(inend - inp)</fo:inline>, where <fo:inline font-family="Liberation Mono,monospace">len</fo:inline> is a variable of type size_t which denotes the <fo:inline font-style="italic">total</fo:inline> number of bytes which are about to be read or written next. In general, it is not safe to fold multiple such checks into one, as in <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">len1 + len2 &gt; (size_t)(inend - inp)</fo:inline>, because the expression on the left can overflow or wrap around (see <fo:basic-link internal-destination="sect-Defensive_Coding-C-Arithmetic"><fo:inline font-style="italic" color="#0066cc">Section 1.1.3, “Recommendations for integer arithmetic”</fo:inline></fo:basic-link>), and it no longer reflects the number of bytes to be processed.
		</fo:block></fo:block><fo:block id="sect-Defensive_Coding-C-Arithmetic"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Recommendations for integer arithmetic</fo:marker><fo:block color="#3c6eb4" font-size="14pt">1.1.3. Recommendations for integer arithmetic</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Overflow in signed integer arithmetic is undefined. This means that it is not possible to check for overflow after it happened, see <fo:basic-link internal-destination="ex-Defensive_Coding-C-Arithmetic-bad"><fo:inline font-style="italic" color="#0066cc">Example 1.2, “Incorrect overflow detection in C”</fo:inline></fo:basic-link>.
		</fo:block><fo:block><fo:block id="ex-Defensive_Coding-C-Arithmetic-bad" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 1.2. Incorrect overflow detection in C</fo:block><fo:block id="idp29378320" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#0000ff">void</fo:inline> report_overflow(<fo:inline color="#0000ff">void</fo:inline>);

<fo:inline color="#0000ff">int</fo:inline>
add(<fo:inline color="#0000ff">int</fo:inline> a, <fo:inline color="#0000ff">int</fo:inline> b)
{
  <fo:inline color="#0000ff">int</fo:inline> result = a + b;
  <fo:inline color="#002F5D">if</fo:inline> (a &lt; 0 || b &lt; 0) {
    <fo:inline color="#002F5D">return</fo:inline> <fo:inline color="#00007f">-1</fo:inline>;
  }
  <fo:inline color="#FF00FF">// The compiler can optimize away the following if statement.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>  <fo:inline color="#002F5D">if</fo:inline> (result &lt; 0) {
    report_overflow();
  }
  <fo:inline color="#002F5D">return</fo:inline> result;
}
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The following approaches can be used to check for overflow, without actually causing it.
		</fo:block><fo:list-block id="idp26636000" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp26635024" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Use a wider type to perform the calculation, check that the result is within bounds, and convert the result to the original type. All intermediate results must be checked in this way.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp29093600" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Perform the calculation in the corresponding unsigned type and use bit fiddling to detect the overflow.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp29091616" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Compute bounds for acceptable input values which are known to avoid overflow, and reject other values. This is the preferred way for overflow checking on multiplications, see <fo:basic-link internal-destination="ex-Defensive_Coding-C-Arithmetic-mult"><fo:inline font-style="italic" color="#0066cc">Example 1.3, “Overflow checking for unsigned multiplication”</fo:inline></fo:basic-link>. 
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block><fo:block id="ex-Defensive_Coding-C-Arithmetic-mult" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 1.3. Overflow checking for unsigned multiplication</fo:block><fo:block id="idp29089120" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#0000ff">unsigned</fo:inline>
mul(<fo:inline color="#0000ff">unsigned</fo:inline> a, <fo:inline color="#0000ff">unsigned</fo:inline> b)
{
  <fo:inline color="#002F5D">if</fo:inline> (b &amp;&amp; a &gt; ((<fo:inline color="#0000ff">unsigned</fo:inline>)<fo:inline color="#00007f">-1</fo:inline>) / b) {
    report_overflow();
  }
  <fo:inline color="#002F5D">return</fo:inline> a * b;
}
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Basic arithmetic operations a commutative, so for bounds checks, there are two different but mathematically equivalent expressions. Sometimes, one of the expressions results in better code because parts of it can be reduced to a constant. This applies to overflow checks for multiplication <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">a * b</fo:inline> involving a constant <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">a</fo:inline>, where the expression is reduced to <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">b &gt; C</fo:inline> for some constant <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">C</fo:inline> determined at compile time. The other expression, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">b &amp;&amp; a &gt; ((unsigned)-1) / b</fo:inline>, is more difficult to optimize at compile time.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			When a value is converted to a signed integer, GCC always chooses the result based on 2's complement arithmetic. This GCC extension (which is also implemented by other compilers) helps a lot when implementing overflow checks.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Legacy code should be compiled with the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-fwrapv</fo:inline> GCC option. As a result, GCC will provide 2's complement semantics for integer arithmetic, including defined behavior on integer overflow.
		</fo:block></fo:block></fo:block><fo:block id="sect-Defensive_Coding-C-Libc"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">The C standard library</fo:marker><fo:block color="#3c6eb4" font-size="16pt">1.2. The C standard library</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Parts of the C standard library (and the UNIX and GNU extensions) are difficult to use, so you shoud avoid them.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Please check the applicable documentation before using the recommended replacements. Many of these functions allocate buffers using <fo:inline font-family="Liberation Mono,monospace">malloc</fo:inline> which your code must deallocate explicitly using <fo:inline font-family="Liberation Mono,monospace">free</fo:inline>.
	</fo:block><fo:block id="sect-Defensive_Coding-C-Absolutely-Banned"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Absolutely banned interfaces</fo:marker><fo:block color="#3c6eb4" font-size="14pt">1.2.1. Absolutely banned interfaces</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The functions listed below must not be used because they are almost always unsafe. Use the indicated replacements instead.
		</fo:block><fo:list-block id="idp35948432" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp15225424" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">gets</fo:inline> ⟶ <fo:inline font-family="Liberation Mono,monospace">fgets</fo:inline>
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp29378896" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">getwd</fo:inline> ⟶ <fo:inline font-family="Liberation Mono,monospace">getcwd</fo:inline> or <fo:inline font-family="Liberation Mono,monospace">get_current_dir_name</fo:inline>
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp19496640" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">readdir_r</fo:inline> ⟶ <fo:inline font-family="Liberation Mono,monospace">readdir</fo:inline>  
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp18648176" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">realpath</fo:inline> (with a non-NULL second parameter) ⟶ <fo:inline font-family="Liberation Mono,monospace">realpath</fo:inline> with NULL as the second parameter, or <fo:inline font-family="Liberation Mono,monospace">canonicalize_file_name</fo:inline>  
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The constants listed below must not be used, either. Instead, code must allocate memory dynamically and use interfaces with length checking.
		</fo:block><fo:list-block id="idp18973664" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp21543104" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">NAME_MAX</fo:inline> (limit not actually enforced by the kernel)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp24070080" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">PATH_MAX</fo:inline> (limit not actually enforced by the kernel)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp21453040" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">_PC_NAME_MAX</fo:inline> (This limit, returned by the <fo:inline font-family="Liberation Mono,monospace">pathconf</fo:inline> function, is not enforced by the kernel.)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp15516928" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">_PC_PATH_MAX</fo:inline> (This limit, returned by the <fo:inline font-family="Liberation Mono,monospace">pathconf</fo:inline> function, is not enforced by the kernel.)
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The following structure members must not be used.
		</fo:block><fo:list-block id="idp25149920" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp27162560" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">f_namemax</fo:inline> in <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">struct statvfs</fo:inline> (limit not actually enforced by the kernel, see <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">_PC_NAME_MAX</fo:inline> above)
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block id="sect-Defensive_Coding-C-Avoid"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Functions to avoid</fo:marker><fo:block color="#3c6eb4" font-size="14pt">1.2.2. Functions to avoid</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The following string manipulation functions can be used securely in principle, but their use should be avoided because they are difficult to use correctly. Calls to these functions can be replaced with <fo:inline font-family="Liberation Mono,monospace">asprintf</fo:inline> or <fo:inline font-family="Liberation Mono,monospace">vasprintf</fo:inline>. (For non-GNU targets, these functions are available from Gnulib.) In some cases, the <fo:inline font-family="Liberation Mono,monospace">snprintf</fo:inline> function might be a suitable replacement, see <fo:basic-link internal-destination="sect-Defensive_Coding-C-String-Functions-Length"><fo:inline font-style="italic" color="#0066cc">Section 1.2.3, “String Functions With Explicit Length Arguments”</fo:inline></fo:basic-link>.
		</fo:block><fo:list-block id="idp24740944" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp14506736" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">sprintf</fo:inline>
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp28873104" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">strcat</fo:inline>
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp28887136" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">strcpy</fo:inline>
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp14979632" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">vsprintf</fo:inline>
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Use the indicated replacements for the functions below.
		</fo:block><fo:list-block id="idp20311456" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp20311776" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">alloca</fo:inline> ⟶ <fo:inline font-family="Liberation Mono,monospace">malloc</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">free</fo:inline> (see <fo:basic-link internal-destination="sect-Defensive_Coding-C-Allocators-alloca"><fo:inline font-style="italic" color="#0066cc">Section 1.3.2, “<fo:inline font-family="Liberation Mono,monospace">alloca</fo:inline> and other forms of stack-based allocation”</fo:inline></fo:basic-link>)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp13625344" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">putenv</fo:inline> ⟶ explicit <fo:inline font-family="Liberation Mono,monospace">envp</fo:inline> argument in process creation (see <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-environ"><fo:inline font-style="italic" color="#0066cc">Section 8.1.3, “Specifying the process environment”</fo:inline></fo:basic-link>)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp21801104" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">setenv</fo:inline> ⟶ explicit <fo:inline font-family="Liberation Mono,monospace">envp</fo:inline> argument in process creation (see <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-environ"><fo:inline font-style="italic" color="#0066cc">Section 8.1.3, “Specifying the process environment”</fo:inline></fo:basic-link>)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp27109904" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">strdupa</fo:inline> ⟶ <fo:inline font-family="Liberation Mono,monospace">strdup</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">free</fo:inline> (see <fo:basic-link internal-destination="sect-Defensive_Coding-C-Allocators-alloca"><fo:inline font-style="italic" color="#0066cc">Section 1.3.2, “<fo:inline font-family="Liberation Mono,monospace">alloca</fo:inline> and other forms of stack-based allocation”</fo:inline></fo:basic-link>)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp28254784" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">strndupa</fo:inline> ⟶ <fo:inline font-family="Liberation Mono,monospace">strndup</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">free</fo:inline> (see <fo:basic-link internal-destination="sect-Defensive_Coding-C-Allocators-alloca"><fo:inline font-style="italic" color="#0066cc">Section 1.3.2, “<fo:inline font-family="Liberation Mono,monospace">alloca</fo:inline> and other forms of stack-based allocation”</fo:inline></fo:basic-link>)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp28754688" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">system</fo:inline> ⟶ <fo:inline font-family="Liberation Mono,monospace">posix_spawn</fo:inline> or <fo:inline font-family="Liberation Mono,monospace">fork</fo:inline>/<fo:inline font-family="Liberation Mono,monospace">execve</fo:inline>/ (see <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-execve"><fo:inline font-style="italic" color="#0066cc">Section 8.1.2, “Bypassing the shell”</fo:inline></fo:basic-link>)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp18568352" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">unsetenv</fo:inline> ⟶ explicit <fo:inline font-family="Liberation Mono,monospace">envp</fo:inline> argument in process creation (see <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-environ"><fo:inline font-style="italic" color="#0066cc">Section 8.1.3, “Specifying the process environment”</fo:inline></fo:basic-link>)
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block id="sect-Defensive_Coding-C-String-Functions-Length"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">String Functions With Explicit Length Arguments</fo:marker><fo:block color="#3c6eb4" font-size="14pt">1.2.3. String Functions With Explicit Length Arguments</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The <fo:inline font-family="Liberation Mono,monospace">snprintf</fo:inline> function provides a way to construct a string in a statically-sized buffer. (If the buffer size is dynamic, use <fo:inline font-family="Liberation Mono,monospace">asprintf</fo:inline> instead.)
		</fo:block><fo:block id="idp38134720" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block id="idp38135232" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#0000ff">char</fo:inline> fraction[<fo:inline color="#00007f">30</fo:inline>];
snprintf(fraction, <fo:inline color="#002F5D">sizeof</fo:inline>(fraction), <fo:inline color="#5C3566">"%d/%d"</fo:inline>, numerator, denominator);
</fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The second argument to the <fo:inline font-family="Liberation Mono,monospace">snprintf</fo:inline> should always be the size of the buffer in the first argument (which should be a character array). Complex pointer and length arithmetic can introduce errors and nullify the security benefits of <fo:inline font-family="Liberation Mono,monospace">snprintf</fo:inline>. If you need to construct a string iteratively, by repeatedly appending fragments, consider constructing the string on the heap, increasing the buffer with <fo:inline font-family="Liberation Mono,monospace">realloc</fo:inline> as needed. (<fo:inline font-family="Liberation Mono,monospace">snprintf</fo:inline> does not support overlapping the result buffer with argument strings.)
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If you use <fo:inline font-family="Liberation Mono,monospace">vsnprintf</fo:inline> (or <fo:inline font-family="Liberation Mono,monospace">snprintf</fo:inline>) with a format string which is not a constant, but a function argument, it is important to annotate the function with a <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">format</fo:inline> function attribute, so that GCC can warn about misuse of your function (see <fo:basic-link internal-destination="ex-Defensive_Coding-C-String-Functions-format-Attribute"><fo:inline font-style="italic" color="#0066cc">Example 1.4, “The <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">format</fo:inline> function attribute”</fo:inline></fo:basic-link>).
		</fo:block><fo:block><fo:block id="ex-Defensive_Coding-C-String-Functions-format-Attribute" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 1.4. The <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">format</fo:inline> function attribute</fo:block><fo:block id="idp38448720" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#0000ff">void</fo:inline> log_format(<fo:inline color="#0000ff">const</fo:inline> <fo:inline color="#0000ff">char</fo:inline> *format, ...) __attribute__((format(printf, <fo:inline color="#00007f">1</fo:inline>, <fo:inline color="#00007f">2</fo:inline>)));

<fo:inline color="#0000ff">void</fo:inline>
log_format(<fo:inline color="#0000ff">const</fo:inline> <fo:inline color="#0000ff">char</fo:inline> *format, ...)
{
  <fo:inline color="#0000ff">char</fo:inline> buf[<fo:inline color="#00007f">1000</fo:inline>];
  va_list ap;
  va_start(ap, format);
  vsnprintf(buf, <fo:inline color="#002F5D">sizeof</fo:inline>(buf), format, ap);
  va_end(ap);
  log_string(buf);
}
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			There are other functions which operator on NUL-terminated strings and take a length argument which affects the number of bytes written to the destination: <fo:inline font-family="Liberation Mono,monospace">strncpy</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">strncat</fo:inline>, and <fo:inline font-family="Liberation Mono,monospace">stpncpy</fo:inline>. These functions do not ensure that the result string is NUL-terminated. For <fo:inline font-family="Liberation Mono,monospace">strncpy</fo:inline>, NUL termination can be added this way:
		</fo:block><fo:block id="idp18061696" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block id="idp18062208" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#0000ff">char</fo:inline> buf[<fo:inline color="#00007f">10</fo:inline>];
strncpy(buf, data, <fo:inline color="#002F5D">sizeof</fo:inline>(buf));
buf[<fo:inline color="#002F5D">sizeof</fo:inline>(buf) - <fo:inline color="#00007f">1</fo:inline>] = '\0';
</fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Some systems support <fo:inline font-family="Liberation Mono,monospace">strlcpy</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">strlcat</fo:inline> functions which behave this way, but these functions are not part of GNU libc. Using <fo:inline font-family="Liberation Mono,monospace">snprintf</fo:inline> with a suitable format string is a simple (albeit slightly slower) replacement.
		</fo:block></fo:block></fo:block><fo:block id="sect-Defensive_Coding-C-Allocators"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Memory allocators</fo:marker><fo:block color="#3c6eb4" font-size="16pt">1.3. Memory allocators</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="idp29030176"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker"><fo:inline font-family="Liberation Mono,monospace">malloc</fo:inline> and related functions</fo:marker><fo:block color="#3c6eb4" font-size="14pt">1.3.1. <fo:inline font-family="Liberation Mono,monospace">malloc</fo:inline> and related functions</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The C library interfaces for memory allocation are provided by <fo:inline font-family="Liberation Mono,monospace">malloc</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">free</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">realloc</fo:inline>, and the <fo:inline font-family="Liberation Mono,monospace">calloc</fo:inline> function. In addition to these generic functions, there are derived functions such as <fo:inline font-family="Liberation Mono,monospace">strdup</fo:inline> which perform allocation using <fo:inline font-family="Liberation Mono,monospace">malloc</fo:inline> internally, but do not return untyped heap memory (which could be used for any object).
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The C compiler knows about these functions and can use their expected behavior for optimizations. For instance, the compiler assumes that an existing pointer (or a pointer derived from an existing pointer by arithmetic) will not point into the memory area returned by <fo:inline font-family="Liberation Mono,monospace">malloc</fo:inline>.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If the allocation fails, <fo:inline font-family="Liberation Mono,monospace">realloc</fo:inline> does not free the old pointer. Therefore, the idiom <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">ptr = realloc(ptr, size);</fo:inline> is wrong because the memory pointed to by <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">ptr</fo:inline> leaks in case of an error.
		</fo:block><fo:block id="idp28884832"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:block color="#3c6eb4" font-size="13pt">1.3.1.1. Use-after-free errors</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				After <fo:inline font-family="Liberation Mono,monospace">free</fo:inline>, the pointer is invalid. Further pointer dereferences are not allowed (and are usually detected by <fo:inline font-weight="bold">valgrind</fo:inline>). Less obvious is that any <fo:inline font-style="italic">use</fo:inline> of the old pointer value is not allowed, either. In particular, comparisons with any other pointer (or the null pointer) are undefined according to the C standard.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The same rules apply to <fo:inline font-family="Liberation Mono,monospace">realloc</fo:inline> if the memory area cannot be enlarged in-place. For instance, the compiler may assume that a comparison between the old and new pointer will always return false, so it is impossible to detect movement this way.
			</fo:block></fo:block><fo:block id="idp38250608"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:block color="#3c6eb4" font-size="13pt">1.3.1.2. Handling memory allocation errors</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Recovering from out-of-memory errors is often difficult or even impossible. In these cases, <fo:inline font-family="Liberation Mono,monospace">malloc</fo:inline> and other allocation functions return a null pointer. Dereferencing this pointer lead to a crash. Such dereferences can even be exploitable for code execution if the dereference is combined with an array subscript.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				In general, if you cannot check all allocation calls and handle failure, you should abort the program on allocation failure, and not rely on the null pointer dereference to terminate the process. See <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-Decoders"><fo:inline font-style="italic" color="#0066cc">Section 9.1, “Recommendations for manually written decoders”</fo:inline></fo:basic-link> for related memory allocation concerns.
			</fo:block></fo:block></fo:block><fo:block id="sect-Defensive_Coding-C-Allocators-alloca"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker"><fo:inline font-family="Liberation Mono,monospace">alloca</fo:inline> and other forms of stack-based allocation</fo:marker><fo:block color="#3c6eb4" font-size="14pt">1.3.2. <fo:inline font-family="Liberation Mono,monospace">alloca</fo:inline> and other forms of stack-based allocation</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Allocation on the stack is risky because stack overflow checking is implicit. There is a guard page at the end of the memory area reserved for the stack. If the program attempts to read from or write to this guard page, a <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SIGSEGV</fo:inline> signal is generated and the program typically terminates.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This is sufficient for detecting typical stack overflow situations such as unbounded recursion, but it fails when the stack grows in increments larger than the size of the guard page. In this case, it is possible that the stack pointer ends up pointing into a memory area which has been allocated for a different purposes. Such misbehavior can be exploitable.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			A common source for large stack growth are calls to <fo:inline font-family="Liberation Mono,monospace">alloca</fo:inline> and related functions such as <fo:inline font-family="Liberation Mono,monospace">strdupa</fo:inline>. These functions should be avoided because of the lack of error checking. (They can be used safely if the allocated size is less than the page size (typically, 4096 bytes), but this case is relatively rare.) Additionally, relying on <fo:inline font-family="Liberation Mono,monospace">alloca</fo:inline> makes it more difficult to reorgnize the code because it is not allowed to use the pointer after the function calling <fo:inline font-family="Liberation Mono,monospace">alloca</fo:inline> has returned, even if this function has been inlined into its caller.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Similar concerns apply to <fo:inline font-style="italic">variable-length arrays</fo:inline> (VLAs), a feature of the C99 standard which started as a GNU extension. For large objects exceeding the page size, there is no error checking, either.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			In both cases, negative or very large sizes can trigger a stack-pointer wraparound, and the stack pointer and end up pointing into caller stack frames, which is fatal and can be exploitable.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If you want to use <fo:inline font-family="Liberation Mono,monospace">alloca</fo:inline> or VLAs for performance reasons, consider using a small on-stack array (less than the page size, large enough to fulfill most requests). If the requested size is small enough, use the on-stack array. Otherwise, call <fo:inline font-family="Liberation Mono,monospace">malloc</fo:inline>. When exiting the function, check if <fo:inline font-family="Liberation Mono,monospace">malloc</fo:inline> had been called, and free the buffer as needed.
		</fo:block></fo:block><fo:block id="sect-Defensive_Coding-C-Allocators-Arrays"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Array allocation</fo:marker><fo:block color="#3c6eb4" font-size="14pt">1.3.3. Array allocation</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			When allocating arrays, it is important to check for overflows. The <fo:inline font-family="Liberation Mono,monospace">calloc</fo:inline> function performs such checks.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If <fo:inline font-family="Liberation Mono,monospace">malloc</fo:inline> or <fo:inline font-family="Liberation Mono,monospace">realloc</fo:inline> is used, the size check must be written manually. For instance, to allocate an array of <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">n</fo:inline> elements of type <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">T</fo:inline>, check that the requested size is not greater than <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">n / sizeof(T)</fo:inline>.
		</fo:block></fo:block><fo:block id="idp14710720"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Custom memory allocators</fo:marker><fo:block color="#3c6eb4" font-size="14pt">1.3.4. Custom memory allocators</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Custom memory allocates come in two forms: replacements for <fo:inline font-family="Liberation Mono,monospace">malloc</fo:inline>, and completely different interfaces for memory management. Both approaches can reduce the effectiveness of <fo:inline font-weight="bold">valgrind</fo:inline> and similar tools, and the heap corruption detection provided by GNU libc, so they should be avoided.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Memory allocators are difficult to write and contain many performance and security pitfalls.
		</fo:block><fo:list-block id="idp20347136" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp12873664" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					When computing array sizes or rounding up allocation requests (to the next allocation granularity, or for alignment purposes), checks for arithmetic overflow are required.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp12874784" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Size computations for array allocations need overflow checking. See <fo:basic-link internal-destination="sect-Defensive_Coding-C-Allocators-Arrays"><fo:inline font-style="italic" color="#0066cc">Section 1.3.3, “Array allocation”</fo:inline></fo:basic-link>.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp14810352" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					It can be difficult to beat well-tuned general-purpose allocators. In micro-benchmarks, pool allocators can show huge wins, and size-specific pools can reduce internal fragmentation. But often, utilization of individual pools is poor, and
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block id="idp14811872"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Conservative garbage collection</fo:marker><fo:block color="#3c6eb4" font-size="14pt">1.3.5. Conservative garbage collection</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Garbage collection can be an alternative to explicit memory management using <fo:inline font-family="Liberation Mono,monospace">malloc</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">free</fo:inline>. The Boehm-Dehmers-Weiser allocator can be used from C programs, with minimal type annotations. Performance is competitive with <fo:inline font-family="Liberation Mono,monospace">malloc</fo:inline> on 64-bit architectures, especially for multi-threaded programs. The stop-the-world pauses may be problematic for some real-time applications, though.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			However, using a conservative garbage collector may reduce opertunities for code reduce because once one library in a program uses garbage collection, the whole process memory needs to be subject to it, so that no pointers are missed. The Boehm-Dehmers-Weiser collector also reserves certain signals for internal use, so it is not fully transparent to the rest of the program.
		</fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 2.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 2. The C++ Programming Language</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="chap-Defensive_Coding-CXX"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#3c6eb4" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">The C++ Programming Language</fo:block></fo:block></fo:block></fo:block><fo:block id="sect-Defensive_Coding-CXX-Language"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">The core language</fo:marker><fo:block color="#3c6eb4" font-size="16pt">2.1. The core language</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		C++ includes a large subset of the C language. As far as the C subset is used, the recommendations in <fo:basic-link internal-destination="chap-Defensive_Coding-C"><fo:inline font-style="italic" color="#0066cc">Chapter 1, <fo:inline font-style="italic">The C Programming Language</fo:inline></fo:inline></fo:basic-link> apply.
	</fo:block><fo:block id="idp28160176"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Array allocation with <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">operator new[]</fo:inline></fo:marker><fo:block color="#3c6eb4" font-size="14pt">2.1.1. Array allocation with <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">operator new[]</fo:inline></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			For very large values of <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">n</fo:inline>, an expression like <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">new T[n]</fo:inline> can return a pointer to a heap region which is too small. In other words, not all array elements are actually backed with heap memory reserved to the array. Current GCC versions generate code that performs a computation of the form <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">sizeof(T) * size_t(n) + cookie_size</fo:inline>, where <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">cookie_size</fo:inline> is currently at most 8. This computation can overflow, and GCC-generated code does not detect this.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">std::vector</fo:inline> template can be used instead an explicit array allocation. (The GCC implementation detects overflow internally.)
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If there is no alternative to <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">operator new[]</fo:inline>, code which allocates arrays with a variable length must check for overflow manually. For the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">new T[n]</fo:inline> example, the size check could be <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">n || (n &gt; 0 &amp;&amp; n &gt; (size_t(-1) - 8) / sizeof(T))</fo:inline>. (See <fo:basic-link internal-destination="sect-Defensive_Coding-C-Arithmetic"><fo:inline font-style="italic" color="#0066cc">Section 1.1.3, “Recommendations for integer arithmetic”</fo:inline></fo:basic-link>.) If there are additional dimensions (which must be constants according to the C++ standard), these should be included as factors in the divisor.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			These countermeasures prevent out-of-bounds writes and potential code execution. Very large memory allocations can still lead to a denial of service. <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-Decoders"><fo:inline font-style="italic" color="#0066cc">Section 9.1, “Recommendations for manually written decoders”</fo:inline></fo:basic-link> contains suggestions for mitigating this problem when processing untrusted data.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			See <fo:basic-link internal-destination="sect-Defensive_Coding-C-Allocators-Arrays"><fo:inline font-style="italic" color="#0066cc">Section 1.3.3, “Array allocation”</fo:inline></fo:basic-link> for array allocation advice for C-style memory allocation.
		</fo:block></fo:block><fo:block id="idp30005424"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Overloading</fo:marker><fo:block color="#3c6eb4" font-size="14pt">2.1.2. Overloading</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Do not overload functions with versions that have different security characteristics. For instance, do not implement a function <fo:inline font-family="Liberation Mono,monospace">strcat</fo:inline> which works on std::string arguments. Similarly, do not name methods after such functions.
		</fo:block></fo:block><fo:block id="idp23839088"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">ABI compatibility and preparing for security updates</fo:marker><fo:block color="#3c6eb4" font-size="14pt">2.1.3. ABI compatibility and preparing for security updates</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			A stable binary interface (ABI) is vastly preferred for security updates. Without a stable ABI, all reverse dependencies need recompiling, which can be a lot of work and could even be impossible in some cases. Ideally, a security update only updates a single dynamic shared object, and is picked up automatically after restarting affected processes.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Outside of extremely performance-critical code, you should ensure that a wide range of changes is possible without breaking ABI. Some very basic guidelines are:
		</fo:block><fo:list-block id="idp24342032" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp30500928" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Avoid inline functions.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp17199936" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Use the pointer-to-implementation idiom.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp24993072" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Try to avoid templates. Use them if the increased type safety provides a benefit to the programmer.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp21671056" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Move security-critical code out of templated code, so that it can be patched in a central place if necessary.
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The KDE project publishes a document with more extensive guidelines on ABI-preserving changes to C++ code, <fo:basic-link external-destination="url(http://techbase.kde.org/Policies/Binary_Compatibility_Issues_With_C++)" font-style="italic" color="#0066cc">Policies/Binary Compatibility Issues With C++</fo:basic-link><fo:footnote><fo:inline font-size="66.66%" font-weight="normal" font-style="normal" margin-left="0.25em" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" baseline-shift="super">1</fo:inline><fo:footnote-body padding-top="48pt" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" font-size="8pt" color="black" font-weight="normal" font-style="normal" text-align="left" start-indent="0pt" text-indent="0pt" hyphenate="true" wrap-option="wrap" linefeed-treatment="treat-as-space"><fo:block><fo:inline font-size="66.66%" font-weight="normal" font-style="normal" margin-left="0.25em" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" baseline-shift="super">1</fo:inline> <fo:basic-link external-destination="url(http://techbase.kde.org/Policies/Binary_Compatibility_Issues_With_C++)">http://techbase.kde.org/Policies/Binary_Compatibility_Issues_With_C++</fo:basic-link></fo:block></fo:footnote-body></fo:footnote> (<fo:inline font-style="italic">d-pointer</fo:inline> refers to the pointer-to-implementation idiom).
		</fo:block></fo:block><fo:block id="sect-Defensive_Coding-CXX-Language-CXX11"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">C++0X and C++11 support</fo:marker><fo:block color="#3c6eb4" font-size="14pt">2.1.4. C++0X and C++11 support</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			GCC offers different language compatibility modes:
		</fo:block><fo:list-block id="idp28156944" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp28152848" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-std=c++98</fo:inline> for the original 1998 C++ standard
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm4943296" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-std=c++03</fo:inline> for the 1998 standard with the changes from the TR1 technical report
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp12978944" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-std=c++11</fo:inline> for the 2011 C++ standard. This option should not be used.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp17448624" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-std=c++0x</fo:inline> for several different versions of C++11 support in development, depending on the GCC version. This option should not be used. 
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			For each of these flags, there are variants which also enable GNU extensions (mostly language features also found in C99 or C11): <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-std=gnu++98</fo:inline>, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-std=gnu++03</fo:inline>, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-std=gnu++11</fo:inline>. Again, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-std=gnu++11</fo:inline> should not be used.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If you enable C++11 support, the ABI of the standard C++ library <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">libstdc++</fo:inline> will change in subtle ways. Currently, no C++ libraries are compiled in C++11 mode, so if you compile your code in C++11 mode, it will be incompatible with the rest of the system. Unfortunately, this is also the case if you do not use any C++11 features. Currently, there is no safe way to enable C++11 mode (except for freestanding applications).
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The meaning of C++0X mode changed from GCC release to GCC release. Earlier versions were still ABI-compatible with C++98 mode, but in the most recent versions, switching to C++0X mode activates C++11 support, with its compatibility problems.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Some C++11 features (or approximations thereof) are available with TR1 support, that is, with <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-std=c++03</fo:inline> or <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-std=gnu++03</fo:inline> and in the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">&lt;tr1/*&gt;</fo:inline> header files. This includes <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">std::tr1::shared_ptr</fo:inline> (from <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">&lt;tr1/memory&gt;</fo:inline>) and <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">std::tr1::function</fo:inline> (from <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">&lt;tr1/functional&gt;</fo:inline>). For other C++11 features, the Boost C++ library contains replacements.
		</fo:block></fo:block></fo:block><fo:block id="sect-Defensive_Coding-CXX-Std"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">The C++ standard library</fo:marker><fo:block color="#3c6eb4" font-size="16pt">2.2. The C++ standard library</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		The C++ standard library includes most of its C counterpart by reference, see <fo:basic-link internal-destination="sect-Defensive_Coding-C-Libc"><fo:inline font-style="italic" color="#0066cc">Section 1.2, “The C standard library”</fo:inline></fo:basic-link>.
	</fo:block><fo:block id="idp18422032"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Containers and <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">operator[]</fo:inline></fo:marker><fo:block color="#3c6eb4" font-size="14pt">2.2.1. Containers and <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">operator[]</fo:inline></fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Many containers similar to <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">std::vector</fo:inline> provide both <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">operator[](size_type)</fo:inline> and a member function <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">at(size_type)</fo:inline>. This applies to <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">std::vector</fo:inline> itself, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">std::array</fo:inline>, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">std::string</fo:inline> and other instances of <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">std::basic_string</fo:inline>.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">operator[](size_type)</fo:inline> is not required by the standard to perform bounds checking (and the implementation in GCC does not). In contrast, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">at(size_type)</fo:inline> must perform such a check. Therefore, in code which is not performance-critical, you should prefer <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">at(size_type)</fo:inline> over <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">operator[](size_type)</fo:inline>, even though it is slightly more verbose.
		</fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 3.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 3. The Python Programming Language</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="chap-Defensive_Coding-Python"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#3c6eb4" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">The Python Programming Language</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Python provides memory safety by default, so low-level security vulnerabilities are rare and typically needs fixing the Python interpreter or standard library itself.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Other sections with Python-specific advice include:
	</fo:block><fo:list-block id="idp29535968" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp24487712" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				<fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Temporary_Files"><fo:inline font-style="italic" color="#0066cc">Chapter 7, <fo:inline font-style="italic">Temporary files</fo:inline></fo:inline></fo:basic-link>
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp26616896" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				<fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-Creation"><fo:inline font-style="italic" color="#0066cc">Section 8.1, “Safe process creation”</fo:inline></fo:basic-link>
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp18132480" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				<fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Serialization"><fo:inline font-style="italic" color="#0066cc">Chapter 9, <fo:inline font-style="italic">Serialization and Deserialization</fo:inline></fo:inline></fo:basic-link>, in particular <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-Library"><fo:inline font-style="italic" color="#0066cc">Section 9.3, “Library support for deserialization”</fo:inline></fo:basic-link>
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp26628672" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				<fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Cryptography-Randomness"><fo:inline font-style="italic" color="#0066cc">Section 10.2, “Randomness”</fo:inline></fo:basic-link>
			</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block id="idp28890528"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Dangerous standard library features</fo:marker><fo:block color="#3c6eb4" font-size="16pt">3.1. Dangerous standard library features</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Some areas of the standard library, notably the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">ctypes</fo:inline> module, do not provide memory safety guarantees comparable to the rest of Python. If such functionality is used, the advice in <fo:basic-link internal-destination="sect-Defensive_Coding-C-Language"><fo:inline font-style="italic" color="#0066cc">Section 1.1, “The core language”</fo:inline></fo:basic-link> should be followed.
		</fo:block></fo:block><fo:block id="idp30098896"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Run-time compilation and code generation</fo:marker><fo:block color="#3c6eb4" font-size="16pt">3.2. Run-time compilation and code generation</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The following Python functions and statements related to code execution should be avoided:
		</fo:block><fo:list-block id="idp17276320" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp29385936" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">compile</fo:inline>
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp24198624" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">eval</fo:inline>
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp18575152" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">exec</fo:inline>
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp19028240" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">execfile</fo:inline>
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If you need to parse integers or floating point values, use the <fo:inline font-family="Liberation Mono,monospace">int</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">float</fo:inline> functions instead of <fo:inline font-family="Liberation Mono,monospace">eval</fo:inline>. Sandboxing untrusted Python code does not work reliably.
		</fo:block></fo:block><fo:block id="idm11398720"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Sandboxing</fo:marker><fo:block color="#3c6eb4" font-size="16pt">3.3. Sandboxing</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">rexec</fo:inline> Python module cannot safely sandbox untrusted code and should not be used. The standard CPython implementation is not suitable for sandboxing.
		</fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="titlepage" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Part II. Specific Programming Tasks</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="idm7435600"><fo:block><fo:block><fo:block text-align="center" font-size="24.8832pt" space-before="18.6624pt" font-weight="bold" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" color="#3c6eb4"><fo:block keep-with-next.within-column="always" hyphenate="false">Part II. Specific Programming Tasks</fo:block></fo:block></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 4.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 4. Library Design</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="chap-Defensive_Coding-Tasks-Library_Design"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#3c6eb4" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Library Design</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Throught this section, the term <fo:inline font-style="italic">client code</fo:inline> refers to applications and other libraries using the library.
	</fo:block><fo:block id="idp25996096"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">State management</fo:marker><fo:block color="#3c6eb4" font-size="16pt">4.1. State management</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">

		</fo:block><fo:block id="idp22529488"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Global state</fo:marker><fo:block color="#3c6eb4" font-size="14pt">4.1.1. Global state</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Global state should be avoided.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				If this is impossible, the global state must be protected with a lock. For C/C++, you can use the <fo:inline font-family="Liberation Mono,monospace">pthread_mutex_lock</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">pthread_mutex_unlock</fo:inline> functions without linking against <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-lpthread</fo:inline> because the system provides stubs for non-threaded processes.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				For compatibility with <fo:inline font-family="Liberation Mono,monospace">fork</fo:inline>, these locks should be acquired and released in helpers registered with <fo:inline font-family="Liberation Mono,monospace">pthread_atfork</fo:inline>. This function is not available without <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-lpthread</fo:inline>, so you need to use <fo:inline font-family="Liberation Mono,monospace">dlsym</fo:inline> or a weak symbol to obtain its address.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				If you need <fo:inline font-family="Liberation Mono,monospace">fork</fo:inline> protection for other reasons, you should store the process ID and compare it to the value returned by <fo:inline font-family="Liberation Mono,monospace">getpid</fo:inline> each time you access the global state. (<fo:inline font-family="Liberation Mono,monospace">getpid</fo:inline> is not implemented as a system call and is fast.) If the value changes, you know that you have to re-create the state object. (This needs to be combined with locking, of course.)
			</fo:block></fo:block><fo:block id="idp26805456"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Handles</fo:marker><fo:block color="#3c6eb4" font-size="14pt">4.1.2. Handles</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Library state should be kept behind a curtain. Client code should receive only a handle. In C, the handle can be a pointer to an incomplete <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">struct</fo:inline>. In C++, the handle can be a pointer to an abstract base class, or it can be hidden using the pointer-to-implementation idiom.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The library should provide functions for creating and destroying handles. (In C++, it is possible to use virtual destructors for the latter.) Consistency between creation and destruction of handles is strongly recommended: If the client code created a handle, it is the responsibility of the client code to destroy it. (This is not always possible or convenient, so sometimes, a transfer of ownership has to happen.)
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Using handles ensures that it is possible to change the way the library represents state in a way that is transparent to client code. This is important to facilitate security updates and many other code changes.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				It is not always necessary to protect state behind a handle with a lock. This depends on the level of thread safety the library provides.
			</fo:block></fo:block></fo:block><fo:block id="idp13411568"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Object orientation</fo:marker><fo:block color="#3c6eb4" font-size="16pt">4.2. Object orientation</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Classes should be either designed as base classes, or it should be impossible to use them as base classes (like <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">final</fo:inline> classes in Java). Classes which are not designed for inheritance and are used as base classes nevertheless create potential maintenance hazards because it is difficult to predict how client code will react when calls to virtual methods are added, reordered or removed.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Virtual member functions can be used as callbacks. See <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Library_Design-Callbacks"><fo:inline font-style="italic" color="#0066cc">Section 4.3, “Callbacks”</fo:inline></fo:basic-link> for some of the challenges involved.
		</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-Library_Design-Callbacks"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Callbacks</fo:marker><fo:block color="#3c6eb4" font-size="16pt">4.3. Callbacks</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Higher-order code is difficult to analyze for humans and computers alike, so it should be avoided. Often, an iterator-based interface (a library function which is called repeatedly by client code and returns a stream of events) leads to a better design which is easier to document and use.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If callbacks are unavoidable, some guidelines for them follow.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			In modern C++ code, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">std::function</fo:inline> objects should be used for callbacks.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			In older C++ code and in C code, all callbacks must have an additional closure parameter of type <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">void *</fo:inline>, the value of which can be specified by client code. If possible, the value of the closure parameter should be provided by client code at the same time a specific callback is registered (or specified as a function argument). If a single closure parameter is shared by multiple callbacks, flexibility is greatly reduced, and conflicts between different pieces of client code using the same library object could be unresolvable. In some cases, it makes sense to provide a de-registration callback which can be used to destroy the closure parameter when the callback is no longer used.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Callbacks can throw exceptions or call <fo:inline font-family="Liberation Mono,monospace">longjmp</fo:inline>. If possible, all library objects should remain in a valid state. (All further operations on them can fail, but it should be possible to deallocate them without causing resource leaks.)
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The presence of callbacks raises the question if functions provided by the library are <fo:inline font-style="italic">reentrant</fo:inline>. Unless a library was designed for such use, bad things will happen if a callback function uses functions in the same library (particularly if they are invoked on the same objects and manipulate the same state). When the callback is invoked, the library can be in an inconsistent state. Reentrant functions are more difficult to write than thread-safe functions (by definition, simple locking would immediately lead to deadlocks). It is also difficult to decide what to do when destruction of an object which is currently processing a callback is requested.
		</fo:block></fo:block><fo:block id="idp29930800"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Process attributes</fo:marker><fo:block color="#3c6eb4" font-size="16pt">4.4. Process attributes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Several attributes are global and affect all code in the process, not just the library that manipulates them.
		</fo:block><fo:list-block id="idp29932176" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp23778656" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					environment variables (see <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-secure_getenv"><fo:inline font-style="italic" color="#0066cc">Section 8.3.1, “Accessing environment variables”</fo:inline></fo:basic-link>)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp23780064" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					umask
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp23781024" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					user IDs, group IDs and capabilities
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp23781952" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					current working directory
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp23782880" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					signal handlers, signal masks and signal delivery
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp23783808" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					file locks (especially <fo:inline font-family="Liberation Mono,monospace">fcntl</fo:inline> locks behave in surprising ways, not just in a multi-threaded environment)
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Library code should avoid manipulating these global process attributes. It should not rely on environment variables, umask, the current working directory and signal masks because these attributes can be inherted from an untrusted source.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			In addition, there are obvious process-wide aspects such as the virtual memory layout, the set of open files and dynamic shared objects, but with the exception of shared objects, these can be manipulated in a relatively isolated way.
		</fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 5.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 5. File Descriptor Management</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="sect-Defensive_Coding-Tasks-Descriptors"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#3c6eb4" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">File Descriptor Management</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		File descriptors underlie all input/output mechanisms offered by the system. They are used to implementation the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">FILE *</fo:inline>-based functions found in <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">&lt;stdio.h&gt;</fo:inline>, and all the file and network communication facilities provided by the Python and Java environments are eventually implemented in them.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		File descriptors are small, non-negative integers in userspace, and are backed on the kernel side with complicated data structures which can sometimes grow very large.
	</fo:block><fo:block id="idp17285664"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Closing descriptors</fo:marker><fo:block color="#3c6eb4" font-size="16pt">5.1. Closing descriptors</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If a descriptor is no longer used by a program and is not closed explicitly, its number cannot be reused (which is problematic in itself, see <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Descriptors-Limit"><fo:inline font-style="italic" color="#0066cc">Section 5.3, “Dealing with the <fo:inline font-family="Liberation Mono,monospace">select</fo:inline> limit”</fo:inline></fo:basic-link>), and the kernel resources are not freed. Therefore, it is important to close all descriptors at the earlierst point in time possible, but not earlier.
		</fo:block><fo:block id="idp19761760"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Error handling during descriptor close</fo:marker><fo:block color="#3c6eb4" font-size="14pt">5.1.1. Error handling during descriptor close</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The <fo:inline font-family="Liberation Mono,monospace">close</fo:inline> system call is always successful in the sense that the passed file descriptor is never valid after the function has been called. However, <fo:inline font-family="Liberation Mono,monospace">close</fo:inline> still can return an error, for example if there was a file system failure. But this error is not very useful because the absence of an error does not mean that all caches have been emptied and previous writes have been made durable. Programs which need such guarantees must open files with <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">O_SYNC</fo:inline> or use <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fsync</fo:inline> or <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fdatasync</fo:inline>, and may also have to <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fsync</fo:inline> the directory containing the file.
			</fo:block></fo:block><fo:block id="idp19750592"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Closing descriptors and race conditions</fo:marker><fo:block color="#3c6eb4" font-size="14pt">5.1.2. Closing descriptors and race conditions</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Unlike process IDs, which are recycle only gradually, the kernel always allocates the lowest unused file descriptor when a new descriptor is created. This means that in a multi-threaded program which constantly opens and closes file descriptors, descriptors are reused very quickly. Unless descriptor closing and other operations on the same file descriptor are synchronized (typically, using a mutex), there will be race coniditons and I/O operations will be applied to the wrong file descriptor.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Sometimes, it is necessary to close a file descriptor concurrently, while another thread might be about to use it in a system call. In order to support this, a program needs to create a single special file descriptor, one on which all I/O operations fail. One way to achieve this is to use <fo:inline font-family="Liberation Mono,monospace">socketpair</fo:inline>, close one of the descriptors, and call <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">shutdown(fd, SHUTRDWR)</fo:inline> on the other.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				When a descriptor is closed concurrently, the program does not call <fo:inline font-family="Liberation Mono,monospace">close</fo:inline> on the descriptor. Instead it program uses <fo:inline font-family="Liberation Mono,monospace">dup2</fo:inline> to replace the descriptor to be closed with the dummy descriptor created earlier. This way, the kernel will not reuse the descriptor, but it will carry out all other steps associated with calling a descriptor (for instance, if the descriptor refers to a stream socket, the peer will be notified).
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				This is just a sketch, and many details are missing. Additional data structures are needed to determine when it is safe to really close the descriptor, and proper locking is required for that.
			</fo:block></fo:block><fo:block id="idp19158016"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Lingering state after close</fo:marker><fo:block color="#3c6eb4" font-size="14pt">5.1.3. Lingering state after close</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				By default, closing a stream socket returns immediately, and the kernel will try to send the data in the background. This means that it is impossible to implement accurate accounting of network-related resource utilization from userspace.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SO_LINGER</fo:inline> socket option alters the behavior of <fo:inline font-family="Liberation Mono,monospace">close</fo:inline>, so that it will return only after the lingering data has been processed, either by sending it to the peer successfully, or by discarding it after the configured timeout. However, there is no interface which could perform this operation in the background, so a separate userspace thread is needed for each <fo:inline font-family="Liberation Mono,monospace">close</fo:inline> call, causing scalability issues.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Currently, there is no application-level countermeasure which applies universally. Mitigation is possible with <fo:inline font-weight="bold">iptables</fo:inline> (the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">connlimit</fo:inline> match type in particular) and specialized filtering devices for denial-of-service network traffic.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				These problems are not related to the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">TIME_WAIT</fo:inline> state commonly seen in <fo:inline font-weight="bold">netstat</fo:inline> output. The kernel automatically expires such sockets if necessary.
			</fo:block></fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-Descriptors-Child_Processes"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Preventing file descriptor leaks to child processes</fo:marker><fo:block color="#3c6eb4" font-size="16pt">5.2. Preventing file descriptor leaks to child processes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Child processes created with <fo:inline font-family="Liberation Mono,monospace">fork</fo:inline> share the initial set of file descriptors with their parent process. By default, file descriptors are also preserved if a new process image is created with <fo:inline font-family="Liberation Mono,monospace">execve</fo:inline> (or any of the other functions such as <fo:inline font-family="Liberation Mono,monospace">system</fo:inline> or <fo:inline font-family="Liberation Mono,monospace">posix_spawn</fo:inline>).
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Usually, this behavior is not desirable. There are two ways to turn it off, that is, to prevent new process images from inheriting the file descriptors in the parent process:
		</fo:block><fo:list-block id="idp26583856" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp26584176" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Set the close-on-exec flag on all newly created file descriptors. Traditionally, this flag is controlled by the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">FD_CLOEXEC</fo:inline> flag, using <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">F_GETFD</fo:inline> and <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">F_SETFD</fo:inline> operations of the <fo:inline font-family="Liberation Mono,monospace">fcntl</fo:inline> function.
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					However, in a multi-threaded process, there is a race condition: a subprocess could have been created between the time the descriptor was created and the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">FD_CLOEXEC</fo:inline> was set. Therefore, many system calls which create descriptors (such as <fo:inline font-family="Liberation Mono,monospace">open</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">openat</fo:inline>) now accept the <fo:inline font-family="Liberation Mono,monospace">O_CLOEXEC</fo:inline> flag (<fo:inline font-family="Liberation Mono,monospace">SOCK_CLOEXEC</fo:inline> for <fo:inline font-family="Liberation Mono,monospace">socket</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">socketpair</fo:inline>), which cause the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">FD_CLOEXEC</fo:inline> flag to be set for the file descriptor in an atomic fashion. In addition, a few new systems calls were introduced, such as <fo:inline font-family="Liberation Mono,monospace">pipe2</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">dup3</fo:inline>.
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					The downside of this approach is that every descriptor needs to receive special treatment at the time of creation, otherwise it is not completely effective.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm11383616" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					After calling <fo:inline font-family="Liberation Mono,monospace">fork</fo:inline>, but before creating a new process image with <fo:inline font-family="Liberation Mono,monospace">execve</fo:inline>, all file descriptors which the child process will not need are closed.
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					Traditionally, this was implemented as a loop over file descriptors ranging from <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">3</fo:inline> to <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">255</fo:inline> and later <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">1023</fo:inline>. But this is only an approximatio because it is possible to create file descriptors outside this range easily (see <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Descriptors-Limit"><fo:inline font-style="italic" color="#0066cc">Section 5.3, “Dealing with the <fo:inline font-family="Liberation Mono,monospace">select</fo:inline> limit”</fo:inline></fo:basic-link>). Another approach reads <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">/proc/self/fd</fo:inline> and closes the unexpected descriptors listed there, but this approach is much slower.
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			At present, environments which care about file descriptor leakage implement the second approach. OpenJDK 6 and 7 are among them.
		</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-Descriptors-Limit"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Dealing with the <fo:inline font-family="Liberation Mono,monospace">select</fo:inline> limit</fo:marker><fo:block color="#3c6eb4" font-size="16pt">5.3. Dealing with the <fo:inline font-family="Liberation Mono,monospace">select</fo:inline> limit</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			By default, a user is allowed to open only 1024 files in a single process, but the system administrator can easily change this limit (which is necessary for busy network servers). However, there is another restriction which is more difficult to overcome.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The <fo:inline font-family="Liberation Mono,monospace">select</fo:inline> function only supports a maximum of <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">FD_SETSIZE</fo:inline> file descriptors (that is, the maximum permitted value for a file descriptor is <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">FD_SETSIZE - 1</fo:inline>, usually 1023.) If a process opens many files, descriptors may exceed such limits. It is impossible to query such descriptors using <fo:inline font-family="Liberation Mono,monospace">select</fo:inline>.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If a library which creates many file descriptors is used in the same process as a library which uses <fo:inline font-family="Liberation Mono,monospace">select</fo:inline>, at least one of them needs to be changed.  Calls to <fo:inline font-family="Liberation Mono,monospace">select</fo:inline> can be replaced with calls to <fo:inline font-family="Liberation Mono,monospace">poll</fo:inline> or another event handling mechanism.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Alternatively, the library with high descriptor usage can relocate descriptors above the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">FD_SETSIZE</fo:inline> limit using the following procedure.
		</fo:block><fo:list-block id="idm387904" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm387584" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Create the file descriptor <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fd</fo:inline> as usual, preferably with the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">O_CLOEXEC</fo:inline> flag.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm385728" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Before doing anything else with the descriptor <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fd</fo:inline>, invoke:
				</fo:block><fo:block id="idm384480" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
	  <fo:inline color="#0000ff">int</fo:inline> newfd = fcntl(fd, F_DUPFD_CLOEXEC, (<fo:inline color="#0000ff">long</fo:inline>)FD_SETSIZE);
</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm383680" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Check that <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">newfd</fo:inline> result is non-negative, otherwise close <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fd</fo:inline> and report an error, and return.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm381824" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Close <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fd</fo:inline> and continue to use <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">newfd</fo:inline>.
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The new descriptor has been allocated above the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">FD_SETSIZE</fo:inline>. Even though this algorithm is racy in the sense that the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">FD_SETSIZE</fo:inline> first descriptors could fill up, a very high degree of physical parallelism is required before this becomes a problem.
		</fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 6.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 6. File system manipulation</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="chap-Defensive_Coding-Tasks-File_System"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#3c6eb4" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">File system manipulation</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		In this chapter, we discuss general file system manipulation, with a focus on access files and directories to which an other, potentially untrusted user has write access.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Temporary files are covered in their own chapter, <fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Temporary_Files"><fo:inline font-style="italic" color="#0066cc">Chapter 7, <fo:inline font-style="italic">Temporary files</fo:inline></fo:inline></fo:basic-link>.
	</fo:block><fo:block id="sect-Defensive_Coding-Tasks-File_System-Unowned"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Working with files and directories owned by other users</fo:marker><fo:block color="#3c6eb4" font-size="16pt">6.1. Working with files and directories owned by other users</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Sometimes, it is necessary to operate on files and directories owned by other (potentially untrusted) users. For example, a system administrator could remove the home directory of a user, or a package manager could update a file in a directory which is owned by an application-specific user. This differs from accessing the file system as a specific user; see <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-File_System-Foreign"><fo:inline font-style="italic" color="#0066cc">Section 6.2, “Accessing the file system as a different user”</fo:inline></fo:basic-link>.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Accessing files across trust boundaries faces several challenges, particularly if an entire directory tree is being traversed:
		</fo:block><fo:list-block id="idp21481840" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-distance-between-starts="1.2em" provisional-label-separation="0.2em"><fo:list-item id="idp29610720" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>1.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block margin-left="6pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Another user might add file names to a writable directory at any time. This can interfere with file creation and the order of names returned by <fo:inline font-family="Liberation Mono,monospace">readdir</fo:inline>.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp24189552" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>2.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block margin-left="6pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Merely opening and closing a file can have side effects. For instance, an automounter can be triggered, or a tape device rewound. Opening a file on a local file system can block indefinitely, due to mandatory file locking, unless the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">O_NONBLOCK</fo:inline> flag is specified.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp18161488" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>3.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block margin-left="6pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Hard links and symbolic links can redirect the effect of file system operations in unexpected ways. The <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">O_NOFOLLOW</fo:inline> and <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">AT_SYMLINK_NOFOLLOW</fo:inline> variants of system calls only affected final path name component.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp19997712" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>4.</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block margin-left="6pt"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					The structure of a directory tree can change. For example, the parent directory of what used to be a subdirectory within the directory tree being processed could suddenly point outside that directory tree.
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Files should always be created with the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">O_CREAT</fo:inline> and <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">O_EXCL</fo:inline> flags, so that creating the file will fail if it already exists. This guards against the unexpected appearance of file names, either due to creation of a new file, or hard-linking of an existing file. In multi-threaded programs, rather than manipulating the umask, create the files with mode <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">000</fo:inline> if possible, and adjust it afterwards with <fo:inline font-family="Liberation Mono,monospace">fchmod</fo:inline>.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			To avoid issues related to symbolic links and directory tree restructuring, the “<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">at</fo:inline>” variants of system calls have to be used (that is, functions like <fo:inline font-family="Liberation Mono,monospace">openat</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">fchownat</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">fchmodat</fo:inline>, and <fo:inline font-family="Liberation Mono,monospace">unlinkat</fo:inline>, together with <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">O_NOFOLLOW</fo:inline> or <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">AT_SYMLINK_NOFOLLOW</fo:inline>). Path names passed to these functions must have just a single component (that is, without a slash). When descending, the descriptors of parent directories must be kept open. The missing <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">opendirat</fo:inline> function can be emulated with <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">openat</fo:inline> (with an <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">O_DIRECTORY</fo:inline> flag, to avoid opening special files with side effects), followed by <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">fdopendir</fo:inline>.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If the “<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">at</fo:inline>” functions are not available, it is possible to emulate them by changing the current directory. (Obviously, this only works if the process is not multi-threaded.) <fo:inline font-family="Liberation Mono,monospace">fchdir</fo:inline> has to be used to change the current directory, and the descriptors of the parent directories have to be kept open, just as with the “<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">at</fo:inline>”-based approach. <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">chdir("...")</fo:inline> is unsafe because it might ascend outside the intended directory tree.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This “<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">at</fo:inline>” function emulation is currently required when manipulating extended attributes. In this case, the <fo:inline font-family="Liberation Mono,monospace">lsetxattr</fo:inline> function can be used, with a relative path name consisting of a single component. This also applies to SELinux contexts and the <fo:inline font-family="Liberation Mono,monospace">lsetfilecon</fo:inline> function.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Currently, it is not possible to avoid opening special files <fo:inline font-style="italic">and</fo:inline> changes to files with hard links if the directory containing them is owned by an untrusted user. (Device nodes can be hard-linked, just as regular files.) <fo:inline font-family="Liberation Mono,monospace">fchmodat</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">fchownat</fo:inline> affect files whose link count is greater than one. But opening the files, checking that the link count is one with <fo:inline font-family="Liberation Mono,monospace">fstat</fo:inline>, and using <fo:inline font-family="Liberation Mono,monospace">fchmod</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">fchown</fo:inline> on the file descriptor may have unwanted side effects, due to item 2 above. When creating directories, it is therefore important to change the ownership and permissions only after it has been fully created. Until that point, file names are stable, and no files with unexpected hard links can be introduced.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Similarly, when just reading a directory owned by an untrusted user, it is currently impossible to reliably avoid opening special files.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			There is no workaround against the instability of the file list returned by <fo:inline font-family="Liberation Mono,monospace">readdir</fo:inline>. Concurrent modification of the directory can result in a list of files being returned which never actually existed on disk.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Hard links and symbolic links can be safely deleted using <fo:inline font-family="Liberation Mono,monospace">unlinkat</fo:inline> without further checks because deletion only affects the name within the directory tree being processed.
		</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-File_System-Foreign"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Accessing the file system as a different user</fo:marker><fo:block color="#3c6eb4" font-size="16pt">6.2. Accessing the file system as a different user</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This section deals with access to the file system as a specific user. This is different from accessing files and directories owned by a different, potentially untrusted user; see <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-File_System-Foreign"><fo:inline font-style="italic" color="#0066cc">Section 6.2, “Accessing the file system as a different user”</fo:inline></fo:basic-link>.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			One approach is to spawn a child process which runs under the target user and group IDs (both effective and real IDs). Note that this child process can block indefinitely, even when processing regular files only. For example, a special FUSE file system could cause the process to hang in uninterruptible sleep inside a <fo:inline font-family="Liberation Mono,monospace">stat</fo:inline> system call.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			An existing process could change its user and group ID using <fo:inline font-family="Liberation Mono,monospace">setfsuid</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">setfsgid</fo:inline>. (These functions are preferred over <fo:inline font-family="Liberation Mono,monospace">seteuid</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">setegid</fo:inline> because they do not allow the impersonated user to send signals to the process.) These functions are not thread safe. In multi-threaded processes, these operations need to be performed in a single-threaded child process. Unexpected blocking may occur as well.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			It is not recommended to try to reimplement the kernel permission checks in user space because the required checks are complex. It is also very difficult to avoid race conditions during path name resolution.
		</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-File_System-Limits"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">File system limits</fo:marker><fo:block color="#3c6eb4" font-size="16pt">6.3. File system limits</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			For historical reasons, there are preprocessor constants such as <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">PATH_MAX</fo:inline>, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">NAME_MAX</fo:inline>. However, on most systems, the length of canonical path names (absolute path names with all symbolic links resolved, as returned by <fo:inline font-family="Liberation Mono,monospace">realpath</fo:inline> or <fo:inline font-family="Liberation Mono,monospace">canonicalize_file_name</fo:inline>) can exceed <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">PATH_MAX</fo:inline> bytes, and individual file name components can be longer than <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">NAME_MAX</fo:inline>. This is also true of the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">_PC_PATH_MAX</fo:inline> and <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">_PC_NAME_MAX</fo:inline> values returned by <fo:inline font-family="Liberation Mono,monospace">pathconf</fo:inline>, and the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">f_namemax</fo:inline> member of <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">struct statvfs</fo:inline>. Therefore, these constants should not be used. This is also reason why the <fo:inline font-family="Liberation Mono,monospace">readdir_r</fo:inline> should never be used (instead, use <fo:inline font-family="Liberation Mono,monospace">readdir</fo:inline>).
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			You should not write code in a way that assumes that there is an upper limit on the number of subdirectories of a directory, the number of regular files in a directory, or the link count of an inode.
		</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-File_System-Features"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">File system features</fo:marker><fo:block color="#3c6eb4" font-size="16pt">6.4. File system features</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Not all file systems support all features. This makes it very difficult to write general-purpose tools for copying files. For example, a copy operation intending to preserve file permissions will generally fail when copying to a FAT file system.
		</fo:block><fo:list-block id="idp24768032" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp24768352" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Some file systems are case-insensitive. Most should be case-preserving, though.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp24769280" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Name length limits vary greatly, from eight to thousands of bytes. Path length limits differ as well. Most systems impose an upper bound on path names passed to the kernel, but using relative path names, it is possible to create and access files whose absolute path name is essentially of unbounded length.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp24770544" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Some file systems do not store names as fairly unrestricted byte sequences, as it has been traditionally the case on GNU systems. This means that some byte sequences (outside the POSIX safe character set) are not valid names. Conversely, names of existing files may not be representable as byte sequences, and the files are thus inaccessible on GNU systems. Some file systems perform Unicode canonicalization on file names. These file systems preserve case, but reading the name of a just-created file using <fo:inline font-family="Liberation Mono,monospace">readdir</fo:inline> might still result in a different byte sequence.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp24772448" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Permissions and owners are not universally supported (and SUID/SGID bits may not be available). For example, FAT file systems assign ownership based on a mount option, and generally mark all files as executable. Any attempt to change permissions would result in an error.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp24773680" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Non-regular files (device nodes, FIFOs) are not generally available.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp24774608" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Only on some file systems, files can have holes, that is, not all of their contents is backed by disk storage.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp24775680" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">ioctl</fo:inline> support (even fairly generic functionality such as <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">FIEMAP</fo:inline> for discovering physical file layout and holes) is file-system-specific.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp24777536" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Not all file systems support extended attributes, ACLs and SELinux metadata. Size and naming restriction on extended attributes vary.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp24778624" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Hard links may not be supported at all (FAT) or only within the same directory (AFS). Symbolic links may not be available, either. Reflinks (hard links with copy-on-write semantics) are still very rare. Recent systems restrict creation of hard links to users which own the target file or have read/write access to it, but older systems do not.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp24779920" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Renaming (or moving) files using <fo:inline font-family="Liberation Mono,monospace">rename</fo:inline> can fail (even when <fo:inline font-family="Liberation Mono,monospace">stat</fo:inline> indicates that the source and target directories are located on the same file system). This system call should work if the old and new paths are located in the same directory, though.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm6947408" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Locking semantics vary among file systems. This affects advisory and mandatory locks. For example, some network file systems do not allow deleting files which are opened by any process.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm6946272" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Resolution of time stamps varies from two seconds to nanoseconds. Not all time stamps are available on all file systems. File creation time (<fo:inline font-style="italic">birth time</fo:inline>) is not exposed over the <fo:inline font-family="Liberation Mono,monospace">stat</fo:inline>/<fo:inline font-family="Liberation Mono,monospace">fstat</fo:inline> interface, even if stored by the file system.
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-File_System-Free_Space"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Checking free space</fo:marker><fo:block color="#3c6eb4" font-size="16pt">6.5. Checking free space</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The <fo:inline font-family="Liberation Mono,monospace">statvfs</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">fstatvfs</fo:inline> functions allow programs to examine the number of available blocks and inodes, through the members <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">f_bfree</fo:inline>, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">f_bavail</fo:inline>, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">f_ffree</fo:inline>, and <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">f_favail</fo:inline> of <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">struct statvfs</fo:inline>. Some file systems return fictional values in the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">f_ffree</fo:inline> and <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">f_favail</fo:inline> fields, so the only reliable way to discover if the file system still has space for a file is to try to create it. The <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">f_bfree</fo:inline> field should be reasonably accurate, though.
		</fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 7.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 7. Temporary files</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="chap-Defensive_Coding-Tasks-Temporary_Files"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#3c6eb4" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Temporary files</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		In this chapter, we describe how to create temporary files and directories, how to remove them, and how to work with programs which do not create files in ways that a safe with a shared directory for temporary files. General file system manipulation is treated in a separate chapter, <fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-File_System"><fo:inline font-style="italic" color="#0066cc">Chapter 6, <fo:inline font-style="italic">File system manipulation</fo:inline></fo:inline></fo:basic-link>.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Secure creation of temporary files has four different aspects.
	</fo:block><fo:list-block id="idp30631408" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp18299904" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				The location of the directory for temporary files must be obtained in a secure manner (that is, untrusted environment variables must be ignored, see <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-secure_getenv"><fo:inline font-style="italic" color="#0066cc">Section 8.3.1, “Accessing environment variables”</fo:inline></fo:basic-link>).
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp24829696" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				A new file must be created. Reusing an existing file must be avoided (the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">/tmp</fo:inline> race condition). This is tricky because traditionally, system-wide temporary directories shared by all users are used.
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp18635504" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				The file must be created in a way that makes it impossible for other users to open it.
			</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp29096272" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
				The descriptor for the temporary file should not leak to subprocesses.
			</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		All functions mentioned below will take care of these aspects.
	</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Traditionally, temporary files are often used to reduce memory usage of programs. More and more systems use RAM-based file systems such as <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">tmpfs</fo:inline> for storing temporary files, to increase performance and decrease wear on Flash storage. As a result, spooling data to temporary files does not result in any memory savings, and the related complexity can be avoided if the data is kept in process memory.
	</fo:block><fo:block id="chap-Defensive_Coding-Tasks-Temporary_Files-Location"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining the location of temporary directory</fo:marker><fo:block color="#3c6eb4" font-size="16pt">7.1. Obtaining the location of temporary directory</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Some functions below need the location of a directory which stores temporary files. For C/C++ programs, use the following steps to obtain that directory:
		</fo:block><fo:list-block id="idp19003296" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp18702864" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Use <fo:inline font-family="Liberation Mono,monospace">secure_getenv</fo:inline> to obtain the value of the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">TMPDIR</fo:inline> environment variable. If it is set, convert the path to a fully-resolved absolute path, using <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">realpath(path, NULL)</fo:inline>. Check if the new path refers to a directory and is writeable. In this case, use it as the temporary directory.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp29957344" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Fall back to <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">/tmp</fo:inline>.
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			In Python, you can use the <fo:inline font-family="Liberation Mono,monospace">tempfile.tempdir</fo:inline> variable.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Java does not support SUID/SGID programs, so you can use the <fo:inline font-family="Liberation Mono,monospace">java.lang.System.getenv(String)</fo:inline> method to obtain the value of the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">TMPDIR</fo:inline> environment variable, and follow the two steps described above. (Java's default directory selection does not honor <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">TMPDIR</fo:inline>.)
		</fo:block></fo:block><fo:block id="idp24251408"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Named temporary files</fo:marker><fo:block color="#3c6eb4" font-size="16pt">7.2. Named temporary files</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The <fo:inline font-family="Liberation Mono,monospace">mkostemp</fo:inline> function creates a named temporary file. You should specify the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">O_CLOEXEC</fo:inline> flag to avoid file descriptor leaks to subprocesses. (Applications which do not use multiple threads can also use <fo:inline font-family="Liberation Mono,monospace">mkstemp</fo:inline>, but libraries should use <fo:inline font-family="Liberation Mono,monospace">mkostemp</fo:inline>.) For determining the directory part of the file name pattern, see <fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Temporary_Files-Location"><fo:inline font-style="italic" color="#0066cc">Section 7.1, “Obtaining the location of temporary directory”</fo:inline></fo:basic-link>.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The file is not removed automatically. It is not safe to rename or delete the file before processing, or transform the name in any way (for example, by adding a file extension). If you need multiple temporary files, call <fo:inline font-family="Liberation Mono,monospace">mkostemp</fo:inline> multiple times. Do not create additional file names derived from the name provided by a previous <fo:inline font-family="Liberation Mono,monospace">mkostemp</fo:inline> call. However, it is safe to close the descriptor returned by <fo:inline font-family="Liberation Mono,monospace">mkostemp</fo:inline> and reopen the file using the generated name.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The Python class <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">tempfile.NamedTemporaryFile</fo:inline> provides similar functionality, except that the file is deleted automatically by default. Note that you may have to use the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">file</fo:inline> attribute to obtain the actual file object because some programming interfaces cannot deal with file-like objects. The C function <fo:inline font-family="Liberation Mono,monospace">mkostemp</fo:inline> is also available as <fo:inline font-family="Liberation Mono,monospace">tempfile.mkstemp</fo:inline>.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			In Java, you can use the <fo:inline font-family="Liberation Mono,monospace">java.io.File.createTempFile(String, String, File)</fo:inline> function, using the temporary file location determined according to <fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Temporary_Files-Location"><fo:inline font-style="italic" color="#0066cc">Section 7.1, “Obtaining the location of temporary directory”</fo:inline></fo:basic-link>. Do not use <fo:inline font-family="Liberation Mono,monospace">java.io.File.deleteOnExit()</fo:inline> to delete temporary files, and do not register a shutdown hook for each temporary file you create. In both cases, the deletion hint cannot be removed from the system if you delete the temporary file prior to termination of the VM, causing a memory leak.
		</fo:block></fo:block><fo:block id="idp18102560"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Temporary files without names</fo:marker><fo:block color="#3c6eb4" font-size="16pt">7.3. Temporary files without names</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The <fo:inline font-family="Liberation Mono,monospace">tmpfile</fo:inline> function creates a temporary file and immediately deletes it, while keeping the file open. As a result, the file lacks a name and its space is deallocated as soon as the file descriptor is closed (including the implicit close when the process terminates). This avoids cluttering the temporary directory with orphaned files.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Alternatively, if the maximum size of the temporary file is known beforehand, the <fo:inline font-family="Liberation Mono,monospace">fmemopen</fo:inline> function can be used to create a <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">FILE *</fo:inline> object which is backed by memory.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			In Python, unnamed temporary files are provided by the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">tempfile.TemporaryFile</fo:inline> class, and the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">tempfile.SpooledTemporaryFile</fo:inline> class provides a way to avoid creation of small temporary files.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Java does not support unnamed temporary files.
		</fo:block></fo:block><fo:block id="chap-Defensive_Coding-Tasks-Temporary_Directory"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Temporary directories</fo:marker><fo:block color="#3c6eb4" font-size="16pt">7.4. Temporary directories</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The <fo:inline font-family="Liberation Mono,monospace">mkdtemp</fo:inline> function can be used to create a temporary directory. (For determining the directory part of the file name pattern, see <fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Temporary_Files-Location"><fo:inline font-style="italic" color="#0066cc">Section 7.1, “Obtaining the location of temporary directory”</fo:inline></fo:basic-link>.) The directory is not automatically removed. In Python, this function is available as <fo:inline font-family="Liberation Mono,monospace">tempfile.mkdtemp</fo:inline>. In Java 7, temporary directories can be created using the <fo:inline font-family="Liberation Mono,monospace">java.nio.file.Files.createTempDirectory(Path, String, FileAttribute...)</fo:inline> function.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			When creating files in the temporary directory, use automatically generated names, e.g., derived from a sequential counter. Files with externally provided names could be picked up in unexpected contexts, and crafted names could actually point outside of the tempoary directory (due to <fo:inline font-style="italic">directory traversal</fo:inline>).
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Removing a directory tree in a completely safe manner is complicated. Unless there are overriding performance concerns, the <fo:inline font-weight="bold">rm</fo:inline> program should be used, with the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-rf</fo:inline> and <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">--</fo:inline> options.
		</fo:block></fo:block><fo:block id="idm5554976"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Compensating for unsafe file creation</fo:marker><fo:block color="#3c6eb4" font-size="16pt">7.5. Compensating for unsafe file creation</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			There are two ways to make a function or program which excepts a file name safe for use with temporary files. See <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-Creation"><fo:inline font-style="italic" color="#0066cc">Section 8.1, “Safe process creation”</fo:inline></fo:basic-link>, for details on subprocess creation.
		</fo:block><fo:list-block id="idm5553184" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idm5552864" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Create a temporary directory and place the file there. If possible, run the program in a subprocess which uses the temporary directory as its current directory, with a restricted environment. Use generated names for all files in that temporary directory. (See <fo:basic-link internal-destination="chap-Defensive_Coding-Tasks-Temporary_Directory"><fo:inline font-style="italic" color="#0066cc">Section 7.4, “Temporary directories”</fo:inline></fo:basic-link>.)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp17220480" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Create the temporary file and pass the generated file name to the function or program. This only works if the function or program can cope with a zero-length existing file. It is safe only under additional assumptions:
				</fo:block><fo:list-block id="idp17221488" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp17221808" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
							The function or program must not create additional files whose name is derived from the specified file name or are otherwise predictable.
						</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp17222912" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
							The function or program must not delete the file before processing it.
						</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp17223840" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
							It must not access any existing files in the same directory.
						</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					It is often difficult to check whether these additional assumptions are matched, therefore this approach is not recommended.
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 8.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 8. Processes</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="sect-Defensive_Coding-Tasks-Processes"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#3c6eb4" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Processes</fo:block></fo:block></fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-Processes-Creation"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Safe process creation</fo:marker><fo:block color="#3c6eb4" font-size="16pt">8.1. Safe process creation</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			This section describes how to create new child processes in a safe manner. In addition to the concerns addressed below, there is the possibility of file descriptor leaks, see <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Descriptors-Child_Processes"><fo:inline font-style="italic" color="#0066cc">Section 5.2, “Preventing file descriptor leaks to child processes”</fo:inline></fo:basic-link>.
		</fo:block><fo:block id="idp21791008"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Obtaining the program path and the command line template</fo:marker><fo:block color="#3c6eb4" font-size="14pt">8.1.1. Obtaining the program path and the command line template</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The name and path to the program being invoked should be hard-coded or controlled by a static configuration file stored at a fixed location (at an file system absolute path). The same applies to the template for generating the command line.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The configured program name should be an absolute path. If it is a relative path, the contents of the <fo:inline font-family="Liberation Mono,monospace">PATH</fo:inline> must be obtained in s secure manner (see <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-secure_getenv"><fo:inline font-style="italic" color="#0066cc">Section 8.3.1, “Accessing environment variables”</fo:inline></fo:basic-link>). If the <fo:inline font-family="Liberation Mono,monospace">PATH</fo:inline> variable is not set or untrusted, the safe default <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">/bin:/usr/bin</fo:inline> must be used.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				If too much flexibility is provided here, it may allow invocation of arbitrary programs without proper authorization.
			</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-Processes-execve"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Bypassing the shell</fo:marker><fo:block color="#3c6eb4" font-size="14pt">8.1.2. Bypassing the shell</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Child processes should be created without involving the system shell.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				For C/C++, <fo:inline font-family="Liberation Mono,monospace">system</fo:inline> should not be used. The <fo:inline font-family="Liberation Mono,monospace">posix_spawn</fo:inline> function can be used instead, or a combination <fo:inline font-family="Liberation Mono,monospace">fork</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">execve</fo:inline>. (In some cases, it may be preferable to use <fo:inline font-family="Liberation Mono,monospace">vfork</fo:inline> or the Linux-specific <fo:inline font-family="Liberation Mono,monospace">clone</fo:inline> system call instead of <fo:inline font-family="Liberation Mono,monospace">fork</fo:inline>.)
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				In Python, the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">subprocess</fo:inline> module bypasses the shell by default (when the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">shell</fo:inline> keyword argument is not set to true). <fo:inline font-family="Liberation Mono,monospace">os.system</fo:inline> should not be used.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The Java class java.lang.ProcessBuilder can be used to create subprocesses without interference from the system shell.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" id="idp30275072" keep-together.within-column="always" color="black" background-color="white" padding-bottom="-3em" padding-top="0pt" padding-left="0em" margin-left="0em" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" margin-top="1em" margin-bottom="4em"><fo:block-container><fo:block-container margin-left="0em"><fo:block padding-left="0em" padding-bottom="0em" margin-left="0em" margin-bottom="0em" text-indent="3em" font-size="13pt" color="#eeeeec" font-weight="bold" hyphenate="true" keep-with-next.within-column="always" background-color="#d08e13">Portability notice</fo:block></fo:block-container><fo:block-container margin-left="0em"><fo:block margin-right="0em" margin-left="0em" background-color="#eeeeec" border-left-width="1pt" border-left-style="solid" border-left-color="#aaaaaa" border-right-width="1pt" border-right-style="solid" border-right-color="#aaaaaa" border-bottom-width="1pt" border-bottom-style="solid" border-bottom-color="#aaaaaa" padding-top="1.5em" padding-left="1em" padding-right="1em" margin-top="0em" margin-bottom="0em"><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					On Windows, there is no argument vector, only a single argument string. Each application is responsible for parsing this string into an argument vector. There is considerable variance among the quoting style recognized by applications. Some of them expand shell wildcards, others do not. Extensive application-specific testing is required to make this secure.
				</fo:block></fo:block></fo:block-container><fo:block-container position="absolute" top="-12px" left="1px" margin-left="0em"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="url(Common_Content/images/important.svg)"/></fo:block></fo:block-container></fo:block-container></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Note that some common applications (notably <fo:inline font-weight="bold">ssh</fo:inline>) unconditionally introduce the use of a shell, even if invoked directly without a shell. It is difficult to use these applications in a secure manner. In this case, untrusted data should be supplied by other means. For example, standard input could be used, instead of the command line.
			</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-Processes-environ"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Specifying the process environment</fo:marker><fo:block color="#3c6eb4" font-size="14pt">8.1.3. Specifying the process environment</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Child processes should be created with a minimal set of environment variables. This is absolutely essential if there is a trust transition involved, either when the parent process was created, or during the creation of the child process.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				In C/C++, the environment should be constructed as an array of strings and passed as the <fo:inline font-family="Liberation Mono,monospace">envp</fo:inline> argument to <fo:inline font-family="Liberation Mono,monospace">posix_spawn</fo:inline> or <fo:inline font-family="Liberation Mono,monospace">execve</fo:inline>. The functions <fo:inline font-family="Liberation Mono,monospace">setenv</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">unsetenv</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">putenv</fo:inline> should not be used. They are not thread-safe and suffer from memory leaks.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Python programs need to specify a <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">dict</fo:inline> for the the <fo:inline font-family="Liberation Mono,monospace">env</fo:inline> argument of the <fo:inline font-family="Liberation Mono,monospace">subprocess.Popen</fo:inline> constructor. The Java class <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">java.lang.ProcessBuilder</fo:inline> provides a <fo:inline font-family="Liberation Mono,monospace">environment()</fo:inline> method, which returns a map that can be manipulated.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The following list provides guidelines for selecting the set of environment variables passed to the child process.
			</fo:block><fo:list-block id="idp24170928" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp24171248" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						<fo:inline font-family="Liberation Mono,monospace">PATH</fo:inline> should be initialized to <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">/bin:/usr/bin</fo:inline>.
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp24173136" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						<fo:inline font-family="Liberation Mono,monospace">USER</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">HOME</fo:inline> can be inhereted from the parent process environment, or they can be initialized from the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">pwent</fo:inline> structure for the user. 
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp18193840" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						The <fo:inline font-family="Liberation Mono,monospace">DISPLAY</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">XAUTHORITY</fo:inline> variables should be passed to the subprocess if it is an X program. Note that this will typically not work across trust boundaries because <fo:inline font-family="Liberation Mono,monospace">XAUTHORITY</fo:inline> refers to a file with <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">0600</fo:inline> permissions.
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp18196848" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						The location-related environment variables <fo:inline font-family="Liberation Mono,monospace">LANG</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">LANGUAGE</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">LC_ADDRESS</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">LC_ALL</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">LC_COLLATE</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">LC_CTYPE</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">LC_IDENTIFICATION</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">LC_MEASUREMENT</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">LC_MESSAGES</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">LC_MONETARY</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">LC_NAME</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">LC_NUMERIC</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">LC_PAPER</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">LC_TELEPHONE</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">LC_TIME</fo:inline> can be passed to the subprocess if present.
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp24857216" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						The called process may need application-specific environment variables, for example for passing passwords. (See <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-Command_Line_Visibility"><fo:inline font-style="italic" color="#0066cc">Section 8.1.5, “Passing secrets to subprocesses”</fo:inline></fo:basic-link>.)
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp24858832" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						All other environment variables should be dropped. Names for new environment variables should not be accepted from untrusted sources.
					</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block></fo:block><fo:block id="idp33850288"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Robust argument list processing</fo:marker><fo:block color="#3c6eb4" font-size="14pt">8.1.4. Robust argument list processing</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				When invoking a program, it is sometimes necessary to include data from untrusted sources. Such data should be check against embedded <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">NUL</fo:inline> characters because the system APIs will sliently truncate argument strings at the first <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">NUL</fo:inline> character.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The following recommendations assume that the program being invoked uses GNU-style option processing using <fo:inline font-family="Liberation Mono,monospace">getopt_long</fo:inline>. This convention is widely used, but it is just that, and individual programs might interpret a command line in a different way.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				If the untrusted data has to go into an option, use the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">--option-name=VALUE</fo:inline> syntax, placing the option and its value into the same command line argument. This avoids any potential confusion if the data starts with <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-</fo:inline>.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				For positional arguments, terminate the option list with a single <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">--</fo:inline> marker after the last option, and include the data at the right position. The <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">--</fo:inline> marker terminates option processing, and the data will not be treated as an option even if it starts with a dash.
			</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-Processes-Command_Line_Visibility"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Passing secrets to subprocesses</fo:marker><fo:block color="#3c6eb4" font-size="14pt">8.1.5. Passing secrets to subprocesses</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The command line (the name of the program and its argument) of a running process is traditionally available to all local users. The called program can overwrite this information, but only after it has run for a bit of time, during which the information may have been read by other processes. However, on Linux, the process environment is restricted to the user who runs the process. Therefore, if you need a convenient way to pass a password to a child process, use an environment variable, and not a command line argument. (See <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-environ"><fo:inline font-style="italic" color="#0066cc">Section 8.1.3, “Specifying the process environment”</fo:inline></fo:basic-link>.)
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" id="idp33859808" keep-together.within-column="always" color="black" background-color="white" padding-bottom="-3em" padding-top="0pt" padding-left="0em" margin-left="0em" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" margin-top="1em" margin-bottom="4em"><fo:block-container><fo:block-container margin-left="0em"><fo:block padding-left="0em" padding-bottom="0em" margin-left="0em" margin-bottom="0em" text-indent="3em" font-size="13pt" color="#eeeeec" font-weight="bold" hyphenate="true" keep-with-next.within-column="always" background-color="#d08e13">Portability notice</fo:block></fo:block-container><fo:block-container margin-left="0em"><fo:block margin-right="0em" margin-left="0em" background-color="#eeeeec" border-left-width="1pt" border-left-style="solid" border-left-color="#aaaaaa" border-right-width="1pt" border-right-style="solid" border-right-color="#aaaaaa" border-bottom-width="1pt" border-bottom-style="solid" border-bottom-color="#aaaaaa" padding-top="1.5em" padding-left="1em" padding-right="1em" margin-top="0em" margin-bottom="0em"><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					On some UNIX-like systems (notably Solaris), environment variables can be read by any system user, just like command lines.
				</fo:block></fo:block></fo:block-container><fo:block-container position="absolute" top="-12px" left="1px" margin-left="0em"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="url(Common_Content/images/important.svg)"/></fo:block></fo:block-container></fo:block-container></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				If the environment-based approach cannot be used due to portability concerns, the data can be passed on standard input. Some programs (notably <fo:inline font-weight="bold">gpg</fo:inline>) use special file descriptors whose numbers are specified on the command line. Temporary files are an option as well, but they might give digital forensics access to sensitive data (such as passphrases) because it is difficult to safely delete them in all cases.
			</fo:block></fo:block></fo:block><fo:block id="idp33863024"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Handling child process termination</fo:marker><fo:block color="#3c6eb4" font-size="16pt">8.2. Handling child process termination</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			When child processes terminate, the parent process is signalled. A stub of the terminated processes (a <fo:inline font-style="italic">zombie</fo:inline>, shown as <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">&lt;defunct&gt;</fo:inline> by <fo:inline font-weight="bold">ps</fo:inline>) is kept around until the status information is collected (<fo:inline font-style="italic">reaped</fo:inline>) by the parent process. Over the years, several interfaces for this have been invented:
		</fo:block><fo:list-block id="idp19337056" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp19337376" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					The parent process calls <fo:inline font-family="Liberation Mono,monospace">wait</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">waitpid</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">waitid</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">wait3</fo:inline> or <fo:inline font-family="Liberation Mono,monospace">wait4</fo:inline>, without specifying a process ID. This will deliver any matching process ID. This approach is typically used from within event loops.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp19340832" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					The parent process calls <fo:inline font-family="Liberation Mono,monospace">waitpid</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">waitid</fo:inline>, or <fo:inline font-family="Liberation Mono,monospace">wait4</fo:inline>, with a specific process ID. Only data for the specific process ID is returned. This is typically used in code which spawns a single subprocess in a synchronous manner.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp19343360" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					The parent process installs a handler for the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SIGCHLD</fo:inline> signal, using <fo:inline font-family="Liberation Mono,monospace">sigaction</fo:inline>, and specifies to the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SA_NOCLDWAIT</fo:inline> flag. This approach could be used by event loops as well.
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			None of these approaches can be used to wait for child process terminated in a completely thread-safe manner. The parent process might execute an event loop in another thread, which could pick up the termination signal. This means that libraries typically cannot make free use of child processes (for example, to run problematic code with reduced privileges in a separate address space).
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			At the moment, the parent process should explicitly wait for termination of the child process using <fo:inline font-family="Liberation Mono,monospace">waitpid</fo:inline> or <fo:inline font-family="Liberation Mono,monospace">waitpid</fo:inline>, and hope that the status is not collected by an event loop first.
		</fo:block></fo:block><fo:block id="idp19348544"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker"><fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SUID</fo:inline>/<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SGID</fo:inline> processes</fo:marker><fo:block color="#3c6eb4" font-size="16pt">8.3. <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SUID</fo:inline>/<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SGID</fo:inline> processes</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Programs can be marked in the file system to indicate to the kernel that a trust transition should happen if the program is run. The <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SUID</fo:inline> file permission bit indicates that an executable should run with the effective user ID equal to the owner of the executable file. Similarly, with the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SGID</fo:inline> bit, the effective group ID is set to the group of the executable file.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Linux supports <fo:inline font-style="italic">fscaps</fo:inline>, which can grant additional capabilities to a process in a finer-grained manner. Additional mechanisms can be provided by loadable security modules.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			When such a trust transition has happened, the process runs in a potentially hostile environment. Additional care is necessary not to rely on any untrusted information. These concerns also apply to libraries which can be linked into such processes.
		</fo:block><fo:block id="sect-Defensive_Coding-Tasks-secure_getenv"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Accessing environment variables</fo:marker><fo:block color="#3c6eb4" font-size="14pt">8.3.1. Accessing environment variables</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The following steps are required so that a program does not accidentally pick up untrusted data from environment variables.
			</fo:block><fo:list-block id="idp14524896" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp14525216" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						Compile your C/C++ sources with <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-D_GNU_SOURCE</fo:inline>. The Autoconf macro <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">AC_GNU_SOURCE</fo:inline> ensures this.
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp14527104" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						Check for the presence of the <fo:inline font-family="Liberation Mono,monospace">secure_getenv</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">__secure_getenv</fo:inline> function. The Autoconf directive <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">AC_CHECK_FUNCS([__secure_getenv secure_getenv])</fo:inline> performs these checks.
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp14529376" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						Arrange for a proper definition of the <fo:inline font-family="Liberation Mono,monospace">secure_getenv</fo:inline> function. See <fo:basic-link internal-destination="ex-Defensive_Coding-Tasks-secure_getenv"><fo:inline font-style="italic" color="#0066cc">Example 8.1, “Obtaining a definition for <fo:inline font-family="Liberation Mono,monospace">secure_getenv</fo:inline>”</fo:inline></fo:basic-link>.
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp14531264" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						Use <fo:inline font-family="Liberation Mono,monospace">secure_getenv</fo:inline> instead of <fo:inline font-family="Liberation Mono,monospace">getenv</fo:inline> to obtain the value of critical environment variables. <fo:inline font-family="Liberation Mono,monospace">secure_getenv</fo:inline> will pretend the variable has not bee set if the process environment is not trusted.
					</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Critical environment variables are debugging flags, configuration file locations, plug-in and log file locations, and anything else that might be used to bypass security restrictions or cause a privileged process to behave in an unexpected way.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Either the <fo:inline font-family="Liberation Mono,monospace">secure_getenv</fo:inline> function or the <fo:inline font-family="Liberation Mono,monospace">__secure_getenv</fo:inline> is available from GNU libc.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-Tasks-secure_getenv" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 8.1. Obtaining a definition for <fo:inline font-family="Liberation Mono,monospace">secure_getenv</fo:inline></fo:block><fo:block id="idp14537216" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">

<fo:inline color="#b03060">#include &lt;stdlib.h&gt;</fo:inline><fo:inline color="#b03060"/>
<fo:inline color="#b03060"/>
<fo:inline color="#b03060">#ifndef HAVE_SECURE_GETENV</fo:inline><fo:inline color="#b03060"/>
<fo:inline color="#b03060"/><fo:inline color="#b03060">#  ifdef HAVE__SECURE_GETENV</fo:inline><fo:inline color="#b03060"/>
<fo:inline color="#b03060"/><fo:inline color="#b03060">#    define secure_getenv __secure_getenv</fo:inline><fo:inline color="#b03060"/>
<fo:inline color="#b03060"/><fo:inline color="#b03060">#  else</fo:inline><fo:inline color="#b03060"/>
<fo:inline color="#b03060"/><fo:inline color="#b03060">#    error neither secure_getenv nor __secure_getenv are available</fo:inline><fo:inline color="#b03060"/>
<fo:inline color="#b03060"/><fo:inline color="#b03060">#  endif</fo:inline><fo:inline color="#b03060"/>
<fo:inline color="#b03060"/><fo:inline color="#b03060">#endif</fo:inline><fo:inline color="#b03060"/>
<fo:inline color="#b03060"/>
</fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-Processes-Daemons"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Daemons</fo:marker><fo:block color="#3c6eb4" font-size="16pt">8.4. Daemons</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Background processes providing system services (<fo:inline font-style="italic">daemons</fo:inline>) need to decouple themselves from the controlling terminal and the parent process environment:
		</fo:block><fo:list-block id="idp14540416" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp14540736" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Fork.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp14541696" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					In the child process, call <fo:inline font-family="Liberation Mono,monospace">setsid</fo:inline>. The parent process can simply exit (using <fo:inline font-family="Liberation Mono,monospace">_exit</fo:inline>, to avoid running clean-up actions twice).
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp14543520" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					In the child process, fork again. Processing continues in the child process. Again, the parent process should just exit.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp14544592" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Replace the descriptors 0, 1, 2 with a descriptor for <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">/dev/null</fo:inline>. Logging should be redirected to <fo:inline font-weight="bold">syslog</fo:inline>.
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Older instructions for creating daemon processes recommended a call to <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">umask(0)</fo:inline>. This is risky because it often leads to world-writable files and directories, resulting in security vulnerabilities such as arbitrary process termination by untrusted local users, or log file truncation. If the <fo:inline font-style="italic">umask</fo:inline> needs setting, a restrictive value such as <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">027</fo:inline> or <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">077</fo:inline> is recommended.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Other aspects of the process environment may have to changed as well (environment variables, signal handler disposition).
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			It is increasingly common that server processes do not run as background processes, but as regular foreground process under a supervising master process (such as <fo:inline font-weight="bold">systemd</fo:inline>). Server processes should offer a command line option which disables forking and replacement of the standard output and standard error streams. Such an option is also useful for debugging.
		</fo:block></fo:block><fo:block id="idp14551248"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Semantics of command line arguments</fo:marker><fo:block color="#3c6eb4" font-size="16pt">8.5. Semantics of command line arguments</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			After process creation and option processing, it is up to the child process to interpret the arguments. Arguments can be file names, host names, or URLs, and many other things. URLs can refer to the local network, some server on the Internet, or to the local file system. Some applications even accept arbitrary code in arguments (for example, <fo:inline font-weight="bold">python</fo:inline> with the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-c</fo:inline> option).
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Similar concerns apply to environment variables, the contents of the current directory and its subdirectories. 
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Consequently, careful analysis is required if it is safe to pass untrusted data to another program.
		</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-Processes-Fork-Parallel"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker"><fo:inline font-family="Liberation Mono,monospace">fork</fo:inline> as a primitive for parallelism</fo:marker><fo:block color="#3c6eb4" font-size="16pt">8.6. <fo:inline font-family="Liberation Mono,monospace">fork</fo:inline> as a primitive for parallelism</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			A call to <fo:inline font-family="Liberation Mono,monospace">fork</fo:inline> which is not immediately followed by a call to <fo:inline font-family="Liberation Mono,monospace">execve</fo:inline> (perhaps after rearranging and closing file descriptors) is typically unsafe, especially from a library which does not control the state of the entire process. Such use of <fo:inline font-family="Liberation Mono,monospace">fork</fo:inline> should be replaced with proper child processes or threads.
		</fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 9.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 9. Serialization and Deserialization</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="chap-Defensive_Coding-Tasks-Serialization"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#3c6eb4" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Serialization and Deserialization</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Protocol decoders and file format parsers are often the most-exposed part of an application because they are exposed with little or no user interaction and before any authentication and security checks are made. They are also difficult to write robustly in languages which are not memory-safe.
	</fo:block><fo:block id="sect-Defensive_Coding-Tasks-Serialization-Decoders"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Recommendations for manually written decoders</fo:marker><fo:block color="#3c6eb4" font-size="16pt">9.1. Recommendations for manually written decoders</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			For C and C++, the advice in <fo:basic-link internal-destination="sect-Defensive_Coding-C-Pointers"><fo:inline font-style="italic" color="#0066cc">Section 1.1.2, “Recommendations for pointers and array handling”</fo:inline></fo:basic-link> applies. In addition, avoid non-character pointers directly into input buffers. Pointer misalignment causes crashes on some architectures.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			When reading variable-sized objects, do not allocate large amounts of data solely based on the value of a size field. If possible, grow the data structure as more data is read from the source, and stop when no data is available. This helps to avoid denial-of-service attacks where little amounts of input data results in enormous memory allocations during decoding. Alternatively, you can impose reasonable bounds on memory allocations, but some protocols do not permit this.
		</fo:block></fo:block><fo:block id="idp22532960"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Protocol design</fo:marker><fo:block color="#3c6eb4" font-size="16pt">9.2. Protocol design</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Binary formats with explicit length fields are more difficult to parse robustly than those where the length of dynamically-sized elements is derived from sentinel values. A protocol which does not use length fields and can be written in printable ASCII characters simplifies testing and debugging. However, binary protocols with length fields may be more efficient to parse.
		</fo:block></fo:block><fo:block id="idp18687152"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Library support for deserialization</fo:marker><fo:block color="#3c6eb4" font-size="16pt">9.3. Library support for deserialization</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			For some languages, generic libraries are available which allow to serialize and deserialize user-defined objects. The deserialization part comes in one of two flavors, depending on the library. The first kind uses type information in the data stream to control which objects are instantiated. The second kind uses type definitions supplied by the programmer. The first one allows arbitrary object instantiation, the second one generally does not.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The following serialization frameworks are in the first category, are known to be unsafe, and must not be used for untrusted data:
		</fo:block><fo:list-block id="idp21472752" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp18188336" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Python's <fo:inline font-style="italic">pickle</fo:inline> and <fo:inline font-style="italic">cPickle</fo:inline> modules
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp17852192" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Perl's <fo:inline font-style="italic">Storable</fo:inline> package
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp29461280" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Java serialization (java.io.ObjectInputStream)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp30758240" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					PHP serialization (<fo:inline font-family="Liberation Mono,monospace">unserialize</fo:inline>)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp15173568" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Most implementations of YAML
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			When using a type-directed deserialization format where the types of the deserialized objects are specified by the programmer, make sure that the objects which can be instantiated cannot perform any destructive actions in their destructors, even when the data members have been manipulated.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			JSON decoders do not suffer from this problem. But you must not use the <fo:inline font-family="Liberation Mono,monospace">eval</fo:inline> function to parse JSON objects in Javascript; even with the regular expression filter from RFC 4627, there are still information leaks remaining.
		</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-Serialization-XML"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">XML serialization</fo:marker><fo:block color="#3c6eb4" font-size="16pt">9.4. XML serialization</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">

		</fo:block><fo:block id="sect-Defensive_Coding-Tasks-Serialization-XML-External"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">External references</fo:marker><fo:block color="#3c6eb4" font-size="14pt">9.4.1. External references</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				XML documents can contain external references. They can occur in various places.
			</fo:block><fo:list-block id="idp14362752" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp14363072" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						In the DTD declaration in the header of an XML document:
					</fo:block><fo:block id="idp14363840" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block id="idp14364160" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#0000ff">&lt;!DOCTYPE </fo:inline>html PUBLIC
  "-//W3C//DTD XHTML 1.0 Transitional//EN"
  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"<fo:inline color="#0000ff">&gt;</fo:inline>
</fo:block></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp30760288" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						In a namespace declaration:
					</fo:block><fo:block id="idp30761056" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block id="idp30761376" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#002F5D">&lt;xsd:schema</fo:inline><fo:inline color="#b03060"> xmlns:xsd=</fo:inline><fo:inline color="#5C3566">"http://www.w3.org/2001/XMLSchema"</fo:inline><fo:inline color="#002F5D">&gt;</fo:inline>
</fo:block></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp38258736" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						In an entity defintion:
					</fo:block><fo:block id="idp38259504" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block id="idp38259824" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#ff0000">&lt;</fo:inline>!ENTITY sys SYSTEM "http://www.example.com/ent.xml"&gt;
<fo:inline color="#ff0000">&lt;</fo:inline>!ENTITY pub PUBLIC "-//Example//Public Entity//EN"
  "http://www.example.com/pub-ent.xml"&gt;
</fo:block></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp34228416" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						In a notation:
					</fo:block><fo:block id="idp34229184" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block id="idp34229504" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#ff0000">&lt;</fo:inline>!NOTATION not SYSTEM "../not.xml"&gt;
</fo:block></fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Originally, these external references were intended as unique identifiers, but by many XML implementations, they are used for locating the data for the referenced element. This causes unwanted network traffic, and may disclose file system contents or otherwise unreachable network resources, so this functionality should be disabled.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Depending on the XML library, external referenced might be processed not just when parsing XML, but also when generating it.
			</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-Serialization-XML-Entities"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Entity expansion</fo:marker><fo:block color="#3c6eb4" font-size="14pt">9.4.2. Entity expansion</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				When external DTD processing is disabled, an internal DTD subset can still contain entity definitions. Entity declarations can reference other entities. Some XML libraries expand entities automatically, and this processing cannot be switched off in some places (such as attribute values or content models). Without limits on the entity nesting level, this expansion results in data which can grow exponentially in length with size of the input. (If there is a limit on the nesting level, the growth is still polynomial, unless further limits are imposed.)
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Consequently, the processing internal DTD subsets should be disabled if possible, and only trusted DTDs should be processed. If a particular XML application does not permit such restrictions, then application-specific limits are called for.
			</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-Serialization-XML-XInclude"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">XInclude processing</fo:marker><fo:block color="#3c6eb4" font-size="14pt">9.4.3. XInclude processing</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				XInclude processing can reference file and network resources and include them into the document, much like external entity references. When parsing untrusted XML documents, XInclude processing should be truned off.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				XInclude processing is also fairly complex and may pull in support for the XPointer and XPath specifications, considerably increasing the amount of code required for XML processing.
			</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-Serialization-XML-Validation"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Algorithmic complexity of XML validation</fo:marker><fo:block color="#3c6eb4" font-size="14pt">9.4.4. Algorithmic complexity of XML validation</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				DTD-based XML validation uses regular expressions for content models. The XML specification requires that content models are deterministic, which means that efficient validation is possible. However, some implementations do not enforce determinism, and require exponential (or just polynomial) amount of space or time for validating some DTD/document combinations.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				XML schemas and RELAX NG (via the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xsd:</fo:inline> prefix) directly support textual regular expressions which are not required to be deterministic.
			</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-Serialization-XML-Expat"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using Expat for XML parsing</fo:marker><fo:block color="#3c6eb4" font-size="14pt">9.4.5. Using Expat for XML parsing</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				By default, Expat does not try to resolve external IDs, so no steps are required to block them. However, internal entity declarations are processed. Installing a callback which stops parsing as soon as such entities are encountered disables them, see <fo:basic-link internal-destination="ex-Defensive_Coding-Tasks-Serialization-XML-Expat-EntityDeclHandler"><fo:inline font-style="italic" color="#0066cc">Example 9.1, “Disabling XML entity processing with Expat”</fo:inline></fo:basic-link>. Expat does not perform any validation, so there are no problems related to that.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-Tasks-Serialization-XML-Expat-EntityDeclHandler" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 9.1. Disabling XML entity processing with Expat</fo:block><fo:block id="idp22123712" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#FF00FF">// Stop the parser when an entity declaration is encountered.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#0000ff">static</fo:inline> <fo:inline color="#0000ff">void</fo:inline>
EntityDeclHandler(<fo:inline color="#0000ff">void</fo:inline> *userData,
		  <fo:inline color="#0000ff">const</fo:inline> XML_Char *entityName, <fo:inline color="#0000ff">int</fo:inline> is_parameter_entity,
		  <fo:inline color="#0000ff">const</fo:inline> XML_Char *value, <fo:inline color="#0000ff">int</fo:inline> value_length,
		  <fo:inline color="#0000ff">const</fo:inline> XML_Char *base, <fo:inline color="#0000ff">const</fo:inline> XML_Char *systemId,
		  <fo:inline color="#0000ff">const</fo:inline> XML_Char *publicId, <fo:inline color="#0000ff">const</fo:inline> XML_Char *notationName)
{
  XML_StopParser((XML_Parser)userData, XML_FALSE);
}
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				This handler must be installed when the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">XML_Parser</fo:inline> object is created (<fo:basic-link internal-destination="ex-Defensive_Coding-Tasks-Serialization-XML-Expat-Create"><fo:inline font-style="italic" color="#0066cc">Example 9.2, “Creating an Expat XML parser”</fo:inline></fo:basic-link>).
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-Tasks-Serialization-XML-Expat-Create" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 9.2. Creating an Expat XML parser</fo:block><fo:block id="idp26945712" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
XML_Parser parser = XML_ParserCreate(<fo:inline color="#5C3566">"UTF-8"</fo:inline>);
<fo:inline color="#002F5D">if</fo:inline> (parser == NULL) {
  fprintf(stderr, <fo:inline color="#5C3566">"XML_ParserCreate failed</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>);
  close(fd);
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
<fo:inline color="#FF00FF">// EntityDeclHandler needs a reference to the parser to stop</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// parsing.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>XML_SetUserData(parser, parser);
<fo:inline color="#FF00FF">// Disable entity processing, to inhibit entity expansion.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>XML_SetEntityDeclHandler(parser, EntityDeclHandler);
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				It is also possible to reject internal DTD subsets altogeher, using a suitable <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">XML_StartDoctypeDeclHandler</fo:inline> handler installed with <fo:inline font-family="Liberation Mono,monospace">XML_SetDoctypeDeclHandler</fo:inline>.
			</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Using OpenJDK for XML parsing and validation</fo:marker><fo:block color="#3c6eb4" font-size="14pt">9.4.6. Using OpenJDK for XML parsing and validation</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				OpenJDK contains facilities for DOM-based, SAX-based, and StAX-based document parsing. Documents can be validated against DTDs or XML schemas.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The approach taken to deal with entity expansion differs from the general recommendation in <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Serialization-XML-Entities"><fo:inline font-style="italic" color="#0066cc">Section 9.4.2, “Entity expansion”</fo:inline></fo:basic-link>. We enable the the feature flag <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">javax.xml.XMLConstants.FEATURE_SECURE_PROCESSING</fo:inline>, which enforces heuristic restrictions on the number of entity expansions. Note that this flag alone does not prevent resolution of external references (system IDs or public IDs), so it is slightly misnamed.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				In the following sections, we use helper classes to prevent external ID resolution.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-Tasks-Serialization-XML-OpenJDK-NoEntityResolver" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 9.3. Helper class to prevent DTD external entity resolution in OpenJDK</fo:block><fo:block id="idp28148448" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#002F5D">class</fo:inline> NoEntityResolver <fo:inline color="#002F5D">implements</fo:inline> EntityResolver {
    @Override
    <fo:inline color="#002F5D">public</fo:inline> InputSource <fo:inline color="#007f00">resolveEntity</fo:inline>(String publicId, String systemId)
            <fo:inline color="#002F5D">throws</fo:inline> SAXException, IOException {
        <fo:inline color="#FF00FF">// Throwing an exception stops validation.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>        <fo:inline color="#002F5D">throw</fo:inline> <fo:inline color="#002F5D">new</fo:inline> IOException(String<fo:inline color="#007f00">.format(</fo:inline><fo:inline color="#007f00"/>
<fo:inline color="#007f00"/>                <fo:inline color="#5C3566">"attempt to resolve </fo:inline><fo:inline color="#ff00ff">\"</fo:inline><fo:inline color="#5C3566">%s</fo:inline><fo:inline color="#ff00ff">\"</fo:inline><fo:inline color="#5C3566"> </fo:inline><fo:inline color="#ff00ff">\"</fo:inline><fo:inline color="#5C3566">%s</fo:inline><fo:inline color="#ff00ff">\"</fo:inline><fo:inline color="#5C3566">"</fo:inline>, publicId, systemId));
    }
}
</fo:block></fo:block></fo:block><fo:block><fo:block id="ex-Defensive_Coding-Tasks-Serialization-XML-OpenJDK-NoResourceResolver" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 9.4. Helper class to prevent schema resolution in OpenJDK</fo:block><fo:block id="idp28151712" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#002F5D">class</fo:inline> NoResourceResolver <fo:inline color="#002F5D">implements</fo:inline> LSResourceResolver {
    @Override
    <fo:inline color="#002F5D">public</fo:inline> LSInput <fo:inline color="#007f00">resolveResource</fo:inline>(String type, String namespaceURI,
            String publicId, String systemId, String baseURI) {
        <fo:inline color="#FF00FF">// Throwing an exception stops validation.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>        <fo:inline color="#002F5D">throw</fo:inline> <fo:inline color="#002F5D">new</fo:inline> RuntimeException(String<fo:inline color="#007f00">.format(</fo:inline><fo:inline color="#007f00"/>
<fo:inline color="#007f00"/>                <fo:inline color="#5C3566">"resolution attempt: type=%s namespace=%s "</fo:inline> +
                <fo:inline color="#5C3566">"publicId=%s systemId=%s baseURI=%s"</fo:inline>,
                type, namespaceURI, publicId, systemId, baseURI));
    }
}
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				<fo:basic-link internal-destination="ex-Defensive_Coding-Tasks-Serialization-XML-OpenJDK-Imports"><fo:inline font-style="italic" color="#0066cc">Example 9.5, “Java imports for OpenJDK XML parsing”</fo:inline></fo:basic-link> shows the imports used by the examples.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-Tasks-Serialization-XML-OpenJDK-Imports" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 9.5. Java imports for OpenJDK XML parsing</fo:block><fo:block id="idp15323088" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#002F5D">import</fo:inline> javax.xml.XMLConstants;
<fo:inline color="#002F5D">import</fo:inline> javax.xml.parsers.DocumentBuilder;
<fo:inline color="#002F5D">import</fo:inline> javax.xml.parsers.DocumentBuilderFactory;
<fo:inline color="#002F5D">import</fo:inline> javax.xml.parsers.ParserConfigurationException;
<fo:inline color="#002F5D">import</fo:inline> javax.xml.parsers.SAXParser;
<fo:inline color="#002F5D">import</fo:inline> javax.xml.parsers.SAXParserFactory;
<fo:inline color="#002F5D">import</fo:inline> javax.xml.transform.dom.DOMSource;
<fo:inline color="#002F5D">import</fo:inline> javax.xml.transform.sax.SAXSource;
<fo:inline color="#002F5D">import</fo:inline> javax.xml.validation.Schema;
<fo:inline color="#002F5D">import</fo:inline> javax.xml.validation.SchemaFactory;
<fo:inline color="#002F5D">import</fo:inline> javax.xml.validation.Validator;

<fo:inline color="#002F5D">import</fo:inline> org.w3c.dom.Document;
<fo:inline color="#002F5D">import</fo:inline> org.w3c.dom.ls.LSInput;
<fo:inline color="#002F5D">import</fo:inline> org.w3c.dom.ls.LSResourceResolver;
<fo:inline color="#002F5D">import</fo:inline> org.xml.sax.EntityResolver;
<fo:inline color="#002F5D">import</fo:inline> org.xml.sax.ErrorHandler;
<fo:inline color="#002F5D">import</fo:inline> org.xml.sax.InputSource;
<fo:inline color="#002F5D">import</fo:inline> org.xml.sax.SAXException;
<fo:inline color="#002F5D">import</fo:inline> org.xml.sax.SAXParseException;
<fo:inline color="#002F5D">import org.xml.sax.XMLReader;</fo:inline>
</fo:block></fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse-DOM"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:block color="#3c6eb4" font-size="13pt">9.4.6.1. DOM-based XML parsing and DTD validation in OpenJDK</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					This approach produces a <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">org.w3c.dom.Document</fo:inline> object from an input stream. <fo:basic-link internal-destination="ex-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse-DOM"><fo:inline font-style="italic" color="#0066cc">Example 9.6, “DOM-based XML parsing in OpenJDK”</fo:inline></fo:basic-link> use the data from the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">java.io.InputStream</fo:inline> instance in the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">inputStream</fo:inline> variable.
				</fo:block><fo:block><fo:block id="ex-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse-DOM" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 9.6. DOM-based XML parsing in OpenJDK</fo:block><fo:block id="idp30766896" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
DocumentBuilderFactory factory = DocumentBuilderFactory.<fo:inline color="#007f00">newInstance</fo:inline>();
<fo:inline color="#FF00FF">// Impose restrictions on the complexity of the DTD.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>factory.<fo:inline color="#007f00">setFeature</fo:inline>(XMLConstants.<fo:inline color="#007f00">FEATURE_SECURE_PROCESSING</fo:inline>, <fo:inline color="#002F5D">true</fo:inline>);

<fo:inline color="#FF00FF">// Turn on validation.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// This step can be omitted if validation is not desired.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>factory.<fo:inline color="#007f00">setValidating</fo:inline>(<fo:inline color="#002F5D">true</fo:inline>);

<fo:inline color="#FF00FF">// Parse the document.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>DocumentBuilder builder = factory.<fo:inline color="#007f00">newDocumentBuilder</fo:inline>();
builder.<fo:inline color="#007f00">setEntityResolver</fo:inline>(<fo:inline color="#002F5D">new</fo:inline> <fo:inline color="#007f00">NoEntityResolver</fo:inline>());
builder.<fo:inline color="#007f00">setErrorHandler</fo:inline>(<fo:inline color="#002F5D">new</fo:inline> <fo:inline color="#007f00">Errors</fo:inline>());
Document document = builder.<fo:inline color="#007f00">parse</fo:inline>(inputStream);
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					External entity references are prohibited using the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">NoEntityResolver</fo:inline> class in <fo:basic-link internal-destination="ex-Defensive_Coding-Tasks-Serialization-XML-OpenJDK-NoEntityResolver"><fo:inline font-style="italic" color="#0066cc">Example 9.3, “Helper class to prevent DTD external entity resolution in OpenJDK”</fo:inline></fo:basic-link>. Because external DTD references are prohibited, DTD validation (if enabled) will only happen against the internal DTD subset embedded in the XML document.
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					To validate the document against an external DTD, use a <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">javax.xml.transform.Transformer</fo:inline> class to add the DTD reference to the document, and an entity resolver which whitelists this external reference.
				</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse-SAX"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:block color="#3c6eb4" font-size="13pt">9.4.6.2. XML Schema validation in OpenJDK</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					<fo:basic-link internal-destination="ex-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse-XMLSchema_SAX"><fo:inline font-style="italic" color="#0066cc">Example 9.7, “SAX-based validation against an XML schema in OpenJDK”</fo:inline></fo:basic-link> shows how to validate a document against an XML Schema, using a SAX-based approach. The XML data is read from an <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">java.io.InputStream</fo:inline> in the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">inputStream</fo:inline> variable.
				</fo:block><fo:block><fo:block id="ex-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse-XMLSchema_SAX" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 9.7. SAX-based validation against an XML schema in OpenJDK</fo:block><fo:block id="idp17988928" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
SchemaFactory factory = SchemaFactory.<fo:inline color="#007f00">newInstance</fo:inline>(
        XMLConstants.<fo:inline color="#007f00">W3C_XML_SCHEMA_NS_URI</fo:inline>);

<fo:inline color="#FF00FF">// This enables restrictions on the schema and document</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// complexity.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>factory.<fo:inline color="#007f00">setFeature</fo:inline>(XMLConstants.<fo:inline color="#007f00">FEATURE_SECURE_PROCESSING</fo:inline>, <fo:inline color="#002F5D">true</fo:inline>);

<fo:inline color="#FF00FF">// This prevents resource resolution by the schema itself.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// If the schema is trusted and references additional files,</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// this line must be omitted, otherwise loading these files</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// will fail.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>factory.<fo:inline color="#007f00">setResourceResolver</fo:inline>(<fo:inline color="#002F5D">new</fo:inline> <fo:inline color="#007f00">NoResourceResolver</fo:inline>());

Schema schema = factory.<fo:inline color="#007f00">newSchema</fo:inline>(schemaFile);
Validator validator = schema.<fo:inline color="#007f00">newValidator</fo:inline>();

<fo:inline color="#FF00FF">// This prevents external resource resolution.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>validator.<fo:inline color="#007f00">setResourceResolver</fo:inline>(<fo:inline color="#002F5D">new</fo:inline> <fo:inline color="#007f00">NoResourceResolver</fo:inline>());

validator.<fo:inline color="#007f00">validate</fo:inline>(<fo:inline color="#002F5D">new</fo:inline> SAXSource(<fo:inline color="#002F5D">new</fo:inline> InputSource(inputStream)));
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					The <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">NoResourceResolver</fo:inline> class is defined in <fo:basic-link internal-destination="ex-Defensive_Coding-Tasks-Serialization-XML-OpenJDK-NoResourceResolver"><fo:inline font-style="italic" color="#0066cc">Example 9.4, “Helper class to prevent schema resolution in OpenJDK”</fo:inline></fo:basic-link>.
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					If you need to validate a document against an XML schema, use the code in <fo:basic-link internal-destination="ex-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse-DOM"><fo:inline font-style="italic" color="#0066cc">Example 9.6, “DOM-based XML parsing in OpenJDK”</fo:inline></fo:basic-link> to create the document, but do not enable validation at this point. Then use <fo:basic-link internal-destination="ex-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse-XMLSchema_DOM"><fo:inline font-style="italic" color="#0066cc">Example 9.8, “Validation of a DOM document against an XML schema in OpenJDK”</fo:inline></fo:basic-link> to perform the schema-based validation on the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">org.w3c.dom.Document</fo:inline> instance <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">document</fo:inline>.
				</fo:block><fo:block><fo:block id="ex-Defensive_Coding-Tasks-Serialization-XML-OpenJDK_Parse-XMLSchema_DOM" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 9.8. Validation of a DOM document against an XML schema in OpenJDK</fo:block><fo:block id="idp15311504" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
SchemaFactory factory = SchemaFactory.<fo:inline color="#007f00">newInstance</fo:inline>(
        XMLConstants.<fo:inline color="#007f00">W3C_XML_SCHEMA_NS_URI</fo:inline>);

<fo:inline color="#FF00FF">// This enables restrictions on schema complexity.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>factory.<fo:inline color="#007f00">setFeature</fo:inline>(XMLConstants.<fo:inline color="#007f00">FEATURE_SECURE_PROCESSING</fo:inline>, <fo:inline color="#002F5D">true</fo:inline>);

<fo:inline color="#FF00FF">// The following line prevents resource resolution</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// by the schema itself.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>factory.<fo:inline color="#007f00">setResourceResolver</fo:inline>(<fo:inline color="#002F5D">new</fo:inline> <fo:inline color="#007f00">NoResourceResolver</fo:inline>());

Schema schema = factory.<fo:inline color="#007f00">newSchema</fo:inline>(schemaFile);

Validator validator = schema.<fo:inline color="#007f00">newValidator</fo:inline>();

<fo:inline color="#FF00FF">// This prevents external resource resolution.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>validator.<fo:inline color="#007f00">setResourceResolver</fo:inline>(<fo:inline color="#002F5D">new</fo:inline> <fo:inline color="#007f00">NoResourceResolver</fo:inline>());
validator.<fo:inline color="#007f00">validate</fo:inline>(<fo:inline color="#002F5D">new</fo:inline> DOMSource(document));
</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block id="idp15314448"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Protocol Encoders</fo:marker><fo:block color="#3c6eb4" font-size="16pt">9.5. Protocol Encoders</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			For protocol encoders, you should write bytes to a buffer which grows as needed, using an exponential sizing policy. Explicit lengths can be patched in later, once they are known. Allocating the required number of bytes upfront typically requires separate code to compute the final size, which must be kept in sync with the actual encoding step, or vulnerabilities may result. In multi-threaded code, parts of the object being deserialized might change, so that the computed size is out of date.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			You should avoid copying data directly from a received packet during encoding, disregarding the format. Propagating malformed data could enable attacks on other recipients of that data.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			When using C or C++ and copying whole data structures directly into the output, make sure that you do not leak information in padding bytes between fields or at the end of the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">struct</fo:inline>.
		</fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 10.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 10. Cryptography</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="chap-Defensive_Coding-Tasks-Cryptography"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#3c6eb4" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Cryptography</fo:block></fo:block></fo:block></fo:block><fo:block id="idp29121120"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Primitives</fo:marker><fo:block color="#3c6eb4" font-size="16pt">10.1. Primitives</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Chosing from the following cryptographic primitives is recommended:
		</fo:block><fo:list-block id="idp29490544" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp24951552" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					RSA with 2048 bit keys and OAEP
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp17512800" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					AES-128 in CBC mode
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp18957824" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					SHA-256
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp15634944" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					HMAC-SHA-256
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp23864992" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					HMAC-SHA-1
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Other cryptographic algorithms can be used if they are required for interoperability with existing software:
		</fo:block><fo:list-block id="idp19237088" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp15973744" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					RSA with key sizes larger than 1024 and legacy padding
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp19809968" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					AES-192
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp19767168" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					AES-256
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp19095376" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					3DES (triple DES, with two or three 56 bit keys)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp19318592" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					RC4 (but very, very strongly discouraged)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp24765168" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					SHA-1
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp17272336" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					HMAC-MD5
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" id="idp17489392" keep-together.within-column="always" color="black" background-color="white" padding-bottom="-3em" padding-top="0pt" padding-left="0em" margin-left="0em" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" margin-top="1em" margin-bottom="4em"><fo:block-container><fo:block-container margin-left="0em"><fo:block padding-left="0em" padding-bottom="0em" margin-left="0em" margin-bottom="0em" text-indent="3em" font-size="13pt" color="#eeeeec" font-weight="bold" hyphenate="true" keep-with-next.within-column="always" background-color="#d08e13">Important</fo:block></fo:block-container><fo:block-container margin-left="0em"><fo:block margin-right="0em" margin-left="0em" background-color="#eeeeec" border-left-width="1pt" border-left-style="solid" border-left-color="#aaaaaa" border-right-width="1pt" border-right-style="solid" border-right-color="#aaaaaa" border-bottom-width="1pt" border-bottom-style="solid" border-bottom-color="#aaaaaa" padding-top="1.5em" padding-left="1em" padding-right="1em" margin-top="0em" margin-bottom="0em"><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				These primitives are difficult to use in a secure way. Custom implementation of security protocols should be avoided. For protecting confidentiality and integrity of network transmissions, TLS should be used (<fo:basic-link internal-destination="chap-Defensive_Coding-TLS"><fo:inline font-style="italic" color="#0066cc">Chapter 12, <fo:inline font-style="italic">Transport Layer Security</fo:inline></fo:inline></fo:basic-link>).
			</fo:block></fo:block></fo:block-container><fo:block-container position="absolute" top="-12px" left="1px" margin-left="0em"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="url(Common_Content/images/important.svg)"/></fo:block></fo:block-container></fo:block-container></fo:block></fo:block><fo:block id="idp24346144"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Randomness</fo:marker><fo:block color="#3c6eb4" font-size="16pt">10.2. Randomness</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The following facilities can be used to generate unpredictable and non-repeating values. When these functions are used without special safeguards, each individual rnadom value should be at least 12 bytes long.
		</fo:block><fo:list-block id="idp21712064" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp21712384" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">PK11_GenerateRandom</fo:inline> in the NSS library (usable for high data rates)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp21713792" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">RAND_bytes</fo:inline> in the OpenSSL library (usable for high data rates)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp30240352" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">gnutls_rnd</fo:inline> in GNUTLS, with <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">GNUTLS_RND_RANDOM</fo:inline> as the first argument (usable for high data rates)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp30242240" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					java.security.SecureRandom in Java (usable for high data rates)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp30243616" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					<fo:inline font-family="Liberation Mono,monospace">os.urandom</fo:inline> in Python
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp30245056" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Reading from the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">/dev/urandom</fo:inline> character device
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			All these functions should be non-blocking, and they should not wait until physical randomness becomes available. (Some cryptography providers for Java can cause java.security.SecureRandom to block, however.) Those functions which do not obtain all bits directly from <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">/dev/urandom</fo:inline> are suitable for high data rates because they do not deplete the system-wide entropy pool.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" id="idp19084688" keep-together.within-column="always" color="black" background-color="white" padding-bottom="-3em" padding-top="0pt" padding-left="0em" margin-left="0em" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" margin-top="1em" margin-bottom="4em"><fo:block-container><fo:block-container margin-left="0em"><fo:block padding-left="0em" padding-bottom="0em" margin-left="0em" margin-bottom="0em" text-indent="3em" font-size="13pt" color="#eeeeec" font-weight="bold" hyphenate="true" keep-with-next.within-column="always" background-color="#d08e13">Difficult to use API</fo:block></fo:block-container><fo:block-container margin-left="0em"><fo:block margin-right="0em" margin-left="0em" background-color="#eeeeec" border-left-width="1pt" border-left-style="solid" border-left-color="#aaaaaa" border-right-width="1pt" border-right-style="solid" border-right-color="#aaaaaa" border-bottom-width="1pt" border-bottom-style="solid" border-bottom-color="#aaaaaa" padding-top="1.5em" padding-left="1em" padding-right="1em" margin-top="0em" margin-bottom="0em"><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Both <fo:inline font-family="Liberation Mono,monospace">RAND_bytes</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">PK11_GenerateRandom</fo:inline> have three-state return values (with conflicting meanings). Careful error checking is required. Please review the documentation when using these functions.
			</fo:block></fo:block></fo:block-container><fo:block-container position="absolute" top="-12px" left="1px" margin-left="0em"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="url(Common_Content/images/important.svg)"/></fo:block></fo:block-container></fo:block-container></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Other sources of randomness should be considered predictable.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Generating randomness for cryptographic keys in long-term use may need different steps and is best left to cryptographic libraries.
		</fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="titlepage" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Part III. Implementing Security Features</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body"><fo:block id="idm5995376"><fo:block><fo:block><fo:block text-align="center" font-size="24.8832pt" space-before="18.6624pt" font-weight="bold" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" color="#3c6eb4"><fo:block keep-with-next.within-column="always" hyphenate="false">Part III. Implementing Security Features</fo:block></fo:block></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 11.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 11. Authentication and Authorization</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="chap-Defensive_Coding-Authentication"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#3c6eb4" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Authentication and Authorization</fo:block></fo:block></fo:block></fo:block><fo:block id="sect-Defensive_Coding-Authentication-Server"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Authenticating servers</fo:marker><fo:block color="#3c6eb4" font-size="16pt">11.1. Authenticating servers</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			When connecting to a server, a client has to make sure that it is actually talking to the server it expects. There are two different aspects, securing the network path, and making sure that the expected user runs the process on the target host. There are several ways to ensure that:
		</fo:block><fo:list-block id="idp15958768" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp18095792" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					The server uses a TLS certificate which is valid according to the web browser public key infrastructure, and the client verifies the certificate and the host name.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp18890288" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					The server uses a TLS certificate which is expectedby the client (perhaps it is stored in a configuration file read by the client). In this case, no host name checking is required.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp18174544" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					On Linux, UNIX domain sockets (of the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">PF_UNIX</fo:inline> protocol family, sometimes called <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">PF_LOCAL</fo:inline>) are restricted by file system permissions. If the server socket path is not world-writable, the server identity cannot be spoofed by local users.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp17854560" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Port numbers less than 1024 (<fo:inline font-style="italic">trusted ports</fo:inline>) can only be used by <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">root</fo:inline>, so if a UDP or TCP server is running on the local host and it uses a trusted port, its identity is assured. (Not all operating systems enforce the trusted ports concept, and the network might not be trusted, so it is only useful on the local system.)
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			TLS (<fo:basic-link internal-destination="chap-Defensive_Coding-TLS"><fo:inline font-style="italic" color="#0066cc">Chapter 12, <fo:inline font-style="italic">Transport Layer Security</fo:inline></fo:inline></fo:basic-link>) is the recommended way for securing connections over untrusted networks.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If the server port number is 1024 is higher, a local user can impersonate the process by binding to this socket, perhaps after crashing the real server by exploiting a denial-of-service vulnerability.
		</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Authentication-Host_based"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Host-based authentication</fo:marker><fo:block color="#3c6eb4" font-size="16pt">11.2. Host-based authentication</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Host-based authentication uses access control lists (ACLs) to accept or deny requests from clients. Thsis authentication method comes in two flavors: IP-based (or, more generally, address-based) and name-based (with the name coming from DNS or <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">/etc/hosts</fo:inline>). IP-based ACLs often use prefix notation to extend access to entire subnets. Name-based ACLs sometimes use wildcards for adding groups of hosts (from entire DNS subtrees). (In the SSH context, host-based authentication means something completely different and is not covered in this section.)
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Host-based authentication trust the network and may not offer sufficient granularity, so it has to be considered a weak form of authentication. On the other hand, IP-based authentication can be made extremely robust and can be applied very early in input processing, so it offers an opportunity for significantly reducing the number of potential attackers for many services.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			The names returned by <fo:inline font-family="Liberation Mono,monospace">gethostbyaddr</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">getnameinfo</fo:inline> functions cannot be trusted. (DNS PTR records can be set to arbitrary values, not just names belong to the address owner.) If these names are used for ACL matching, a forward lookup using <fo:inline font-family="Liberation Mono,monospace">gethostbyaddr</fo:inline> or <fo:inline font-family="Liberation Mono,monospace">getaddrinfo</fo:inline> has to be performed. The name is only valid if the original address is found among the results of the forward lookup (<fo:inline font-style="italic">double-reverse lookup</fo:inline>).
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			An empty ACL should deny all access (deny-by-default). If empty ACLs permits all access, configuring any access list must switch to deny-by-default for all unconfigured protocols, in both name-based and address-based variants.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Similarly, if an address or name is not matched by the list, it should be denied. However, many implementations behave differently, so the actual behavior must be documented properly.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			IPv6 addresses can embed IPv4 addresses. There is no universally correct way to deal with this ambiguity. The behavior of the ACL implementation should be documented.
		</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Authentication-UNIX_Domain"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">UNIX domain socket authentication</fo:marker><fo:block color="#3c6eb4" font-size="16pt">11.3. UNIX domain socket authentication</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			UNIX domain sockets (with address family <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">AF_UNIX</fo:inline> or <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">AF_LOCAL</fo:inline>) are restricted to the local host and offer a special authentication mechanism: credentials passing.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Nowadays, most systems support the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SO_PEERCRED</fo:inline> (Linux) or <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">LOCAL_PEERCRED</fo:inline> (FreeBSD) socket options, or the <fo:inline font-family="Liberation Mono,monospace">getpeereid</fo:inline> (other BSDs, MacOS X). These interfaces provide direct access to the (effective) user ID on the other end of a domain socket connect, without cooperation from the other end.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Historically, credentials passing was implemented using ancillary data in the <fo:inline font-family="Liberation Mono,monospace">sendmsg</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">recvmsg</fo:inline> functions. On some systems, only credentials data that the peer has explicitly sent can be received, and the kernel checks the data for correctness on the sending side. This means that both peers need to deal with ancillary data. Compared to that, the modern interfaces are easier to use. Both sets of interfaces vary considerably among UNIX-like systems, unfortunately.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			If you want to authenticate based on supplementary groups, you should obtain the user ID using one of these methods, and look up the list of supplementary groups using <fo:inline font-family="Liberation Mono,monospace">getpwuid</fo:inline> (or <fo:inline font-family="Liberation Mono,monospace">getpwuid_r</fo:inline>) and <fo:inline font-family="Liberation Mono,monospace">getgrouplist</fo:inline>. Using the PID and information from <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">/proc/PID/status</fo:inline> is prone to race conditions and insecure.
		</fo:block></fo:block><fo:block id="sect-Defensive_Coding-Authentication-Netlink"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker"><fo:inline font-weight="bold" font-family="Liberation Mono,monospace">AF_NETLINK</fo:inline> authentication of origin</fo:marker><fo:block color="#3c6eb4" font-size="16pt">11.4. <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">AF_NETLINK</fo:inline> authentication of origin</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Netlink messages are used as a high-performance data transfer mechanism between the kernel and the userspace. Traditionally, they are used to exchange information related to the network statck, such as routing table entries.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			When processing Netlink messages from the kernel, it is important to check that these messages actually originate from the kernel, by checking that the port ID (or PID) field <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">nl_pid</fo:inline> in the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">sockaddr_nl</fo:inline> structure is <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">0</fo:inline>. (This structure can be obtained using <fo:inline font-family="Liberation Mono,monospace">recvfrom</fo:inline> or <fo:inline font-family="Liberation Mono,monospace">recvmsg</fo:inline>, it is different from the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">nlmsghdr</fo:inline> structure.) The kernel does not prevent other processes from sending unicast Netlink messages, but the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">nl_pid</fo:inline> field in the sender's socket address will be non-zero in such cases.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Applications should not use <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">AF_NETLINK</fo:inline> sockets as an IPC mechanism among processes, but prefer UNIX domain sockets for this tasks.
		</fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="body" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 12.</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Chapter 12. Transport Layer Security</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="chap-Defensive_Coding-TLS"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats"><fo:block margin-left="0pc"><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#3c6eb4" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Transport Layer Security</fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		Transport Layer Security (TLS, formerly Secure Sockets Layer/SSL) is the recommended way to to protect integrity and confidentiality while data is transferred over an untrusted network connection, and to identify the endpoint.
	</fo:block><fo:block id="sect-Defensive_Coding-TLS-Pitfalls"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Common Pitfalls</fo:marker><fo:block color="#3c6eb4" font-size="16pt">12.1. Common Pitfalls</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			TLS implementations are difficult to use, and most of them lack a clean API design. The following sections contain implementation-specific advice, and some generic pitfalls are mentioned below.
		</fo:block><fo:list-block id="idp29433536" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp25985888" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Most TLS implementations have questionable default TLS cipher suites. Most of them enable anonymous Diffie-Hellman key exchange (but we generally want servers to authenticate themselves). Many do not disable ciphers which are subject to brute-force attacks because of restricted key lengths. Some even disable all variants of AES in the default configuration.
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					When overriding the cipher suite defaults, it is recommended to disable all cipher suites which are not present on a whitelist, instead of simply enabling a list of cipher suites. This way, if an algorithm is disabled by default in the TLS implementation in a future security update, the application will not re-enable it.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp30565072" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					The name which is used in certificate validation must match the name provided by the user or configuration file. No host name canonicalization or IP address lookup must be performed.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp21532528" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					The TLS handshake has very poor performance if the TCP Nagle algorithm is active. You should switch on the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">TCP_NODELAY</fo:inline> socket option (at least for the duration of the handshake), or use the Linux-specific <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">TCP_CORK</fo:inline> option.
				</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-Nagle" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.1. Deactivating the TCP Nagle algorithm</fo:block><fo:block id="idp30107344" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#0000ff">const</fo:inline> <fo:inline color="#0000ff">int</fo:inline> val = <fo:inline color="#00007f">1</fo:inline>;
<fo:inline color="#0000ff">int</fo:inline> ret = setsockopt(sockfd, IPPROTO_TCP, TCP_NODELAY, &amp;val, <fo:inline color="#002F5D">sizeof</fo:inline>(val));
<fo:inline color="#002F5D">if</fo:inline> (ret &lt; 0) {
  perror(<fo:inline color="#5C3566">"setsockopt(TCP_NODELAY)"</fo:inline>);
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
</fo:block></fo:block></fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp28116528" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Implementing proper session resumption decreases handshake overhead considerably. This is important if the upper-layer protocol uses short-lived connections (like most application of HTTPS).
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp33978752" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Both client and server should work towards an orderly connection shutdown, that is send <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">close_notify</fo:inline> alerts and respond to them. This is especially important if the upper-layer protocol does not provide means to detect connection truncation (like some uses of HTTP).
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idm377120" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					When implementing a server using event-driven programming, it is important to handle the TLS handshake properly because it includes multiple network round-trips which can block when an ordinary TCP <fo:inline font-family="Liberation Mono,monospace">accept</fo:inline> would not. Otherwise, a client which fails to complete the TLS handshake for some reason will prevent the server from handling input from other clients.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp26065504" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					Unlike regular file descriptors, TLS connections cannot be passed between processes. Some TLS implementations add additional restrictions, and TLS connections generally cannot be used across <fo:inline font-family="Liberation Mono,monospace">fork</fo:inline> function calls (see <fo:basic-link internal-destination="sect-Defensive_Coding-Tasks-Processes-Fork-Parallel"><fo:inline font-style="italic" color="#0066cc">Section 8.6, “<fo:inline font-family="Liberation Mono,monospace">fork</fo:inline> as a primitive for parallelism”</fo:inline></fo:basic-link>).
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block id="sect-Defensive_Coding-TLS-OpenSSL"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">OpenSSL Pitfalls</fo:marker><fo:block color="#3c6eb4" font-size="14pt">12.1.1. OpenSSL Pitfalls</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Some OpenSSL function use <fo:inline font-style="italic">tri-state return values</fo:inline>. Correct error checking is extremely important. Several functions return <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">int</fo:inline> values with the following meaning:
			</fo:block><fo:list-block id="idp20427248" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp21912512" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						The value <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">1</fo:inline> indicates success (for example, a successful signature verification).
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp27109600" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						The value <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">0</fo:inline> indicates semantic failure (for example, a signature verification which was unsuccessful because the signing certificate was self-signed).
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp34446864" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						The value <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-1</fo:inline> indicates a low-level error in the system, such as failure to allocate memory using <fo:inline font-family="Liberation Mono,monospace">malloc</fo:inline>.
					</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Treating such tri-state return values as booleans can lead to security vulnerabilities. Note that some OpenSSL functions return boolean results or yet another set of status indicators. Each function needs to be checked individually.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Recovering precise error information is difficult. <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-OpenSSL-Errors"><fo:inline font-style="italic" color="#0066cc">Example 12.2, “Obtaining OpenSSL error codes”</fo:inline></fo:basic-link> shows how to obtain a more precise error code after a function call on an <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SSL</fo:inline> object has failed. However, there are still cases where no detailed error information is available (e.g., if <fo:inline font-family="Liberation Mono,monospace">SSL_shutdown</fo:inline> fails due to a connection teardown by the other end).
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-OpenSSL-Errors" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.2. Obtaining OpenSSL error codes</fo:block><fo:block id="idp28759872" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#0000ff">static</fo:inline> <fo:inline color="#0000ff">void</fo:inline> __attribute__((noreturn))
ssl_print_error_and_exit(SSL *ssl, <fo:inline color="#0000ff">const</fo:inline> <fo:inline color="#0000ff">char</fo:inline> *op, <fo:inline color="#0000ff">int</fo:inline> ret)
{
  <fo:inline color="#0000ff">int</fo:inline> subcode = SSL_get_error(ssl, ret);
  <fo:inline color="#002F5D">switch</fo:inline> (subcode) {
  <fo:inline color="#002F5D">case</fo:inline> SSL_ERROR_NONE:
    fprintf(stderr, <fo:inline color="#5C3566">"error: %s: no error to report</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>, op);
    <fo:inline color="#002F5D">break</fo:inline>;
  <fo:inline color="#002F5D">case</fo:inline> SSL_ERROR_WANT_READ:
  <fo:inline color="#002F5D">case</fo:inline> SSL_ERROR_WANT_WRITE:
  <fo:inline color="#002F5D">case</fo:inline> SSL_ERROR_WANT_X509_LOOKUP:
  <fo:inline color="#002F5D">case</fo:inline> SSL_ERROR_WANT_CONNECT:
  <fo:inline color="#002F5D">case</fo:inline> SSL_ERROR_WANT_ACCEPT:
    fprintf(stderr, <fo:inline color="#5C3566">"error: %s: invalid blocking state %d</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>, op, subcode);
    <fo:inline color="#002F5D">break</fo:inline>;
  <fo:inline color="#002F5D">case</fo:inline> SSL_ERROR_SSL:
    fprintf(stderr, <fo:inline color="#5C3566">"error: %s: TLS layer problem</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>, op);
  <fo:inline color="#002F5D">case</fo:inline> SSL_ERROR_SYSCALL:
    fprintf(stderr, <fo:inline color="#5C3566">"error: %s: system call failed: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>, op, strerror(errno));
    <fo:inline color="#002F5D">break</fo:inline>;
  <fo:inline color="#002F5D">case</fo:inline> SSL_ERROR_ZERO_RETURN:
    fprintf(stderr, <fo:inline color="#5C3566">"error: %s: zero return</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>, op);
  }
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The <fo:inline font-family="Liberation Mono,monospace">OPENSSL_config</fo:inline> function is documented to never fail. In reality, it can terminate the entire process if there is a failure accessing the configuration file. An error message is written to standard error, but which might not be visible if the function is called from a daemon process.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				OpenSSL contains two separate ASN.1 DER decoders. One set of decoders operate on BIO handles (the input/output stream abstraction provided by OpenSSL); their decoder function names start with <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">d2i_</fo:inline> and end in <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">_fp</fo:inline> or <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">_bio</fo:inline> (e.g., <fo:inline font-family="Liberation Mono,monospace">d2i_X509_fp</fo:inline> or <fo:inline font-family="Liberation Mono,monospace">d2i_X509_bio</fo:inline>). These decoders must not be used for parsing data from untrusted sources; instead, the variants without the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">_fp</fo:inline> and <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">_bio</fo:inline> (e.g., <fo:inline font-family="Liberation Mono,monospace">d2i_X509</fo:inline>) shall be used. The BIO variants have received considerably less testing and are not very robust.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				For the same reason, the OpenSSL command line tools (such as <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">openssl x509</fo:inline>) are generally generally less robust than the actual library code. They use the BIO functions internally, and not the more robust variants.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The command line tools do not always indicate failure in the exit status of the <fo:inline font-weight="bold">openssl</fo:inline> process. For instance, a verification failure in <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">openssl verify</fo:inline> result in an exit status of zero.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The OpenSSL server and client applications (<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">openssl s_client</fo:inline> and <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">openssl s_server</fo:inline>) are debugging tools and should <fo:inline font-style="italic">never</fo:inline> be used as generic clients. For instance, the <fo:inline font-weight="bold">s_client</fo:inline> tool reacts in a surprisign way to lines starting with <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">R</fo:inline> and <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">Q</fo:inline>.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				OpenSSL allows application code to access private key material over documented interfaces. This can significantly increase the part of the code base which has to undergo security certification.
			</fo:block></fo:block><fo:block id="sect-Defensive_Coding-TLS-Pitfalls-GNUTLS"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">GNUTLS Pitfalls</fo:marker><fo:block color="#3c6eb4" font-size="14pt">12.1.2. GNUTLS Pitfalls</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">libgnutls.so.26</fo:inline> links to <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">libpthread.so.0</fo:inline>. Loading the threading library too late causes problems, so the main program should be linked with <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">-lpthread</fo:inline> as well. As a result, it can be difficult to use GNUTLS in a plugin which is loaded with the <fo:inline font-family="Liberation Mono,monospace">dlopen</fo:inline> function. Another side effect is that applications which merely link against GNUTLS (even without actually using it) may incur a substantial overhead because other libraries automatically switch to thread-safe algorithms.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The <fo:inline font-family="Liberation Mono,monospace">gnutls_global_init</fo:inline> function must be called before using any functionality provided by the library. This function is not thread-safe, so external locking is required, but it is not clear which lock should be used. Omitting the synchronization does not just lead to a memory leak, as it is suggested in the GNUTLS documentation, but to undefined behavior because there is no barrier that would enforce memory ordering.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The <fo:inline font-family="Liberation Mono,monospace">gnutls_global_deinit</fo:inline> function does not actually deallocate all resources allocated by <fo:inline font-family="Liberation Mono,monospace">gnutls_global_init</fo:inline>. It is currently not thread-safe. Therefore, it is best to avoid calling it altogether.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The X.509 implementation in GNUTLS is rather lenient. For example, it is possible to create and process X.509 version 1 certificates which carry extensions. These certificates are (correctly) rejected by other implementations.
			</fo:block></fo:block><fo:block id="sect-Defensive_Coding-TLS-Pitfalls-OpenJDK"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">OpenJDK Pitfalls</fo:marker><fo:block color="#3c6eb4" font-size="14pt">12.1.3. OpenJDK Pitfalls</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The Java cryptographic framework is highly modular. As a result, when you request an object implementing some cryptographic functionality, you cannot be completely sure that you end up with the well-tested, reviewed implementation in OpenJDK.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				OpenJDK (in the source code as published by Oracle) and other implementations of the Java platform require that the system administrator has installed so-called <fo:inline font-style="italic">unlimited strength jurisdiction policy files</fo:inline>. Without this step, it is not possible to use the secure algorithms which offer sufficient cryptographic strength. Most downstream redistributors of OpenJDK remove this requirement.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Some versions of OpenJDK use <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">/dev/random</fo:inline> as the randomness source for nonces and other random data which is needed for TLS operation, but does not actually require physical randomness. As a result, TLS applications can block, waiting for more bits to become available in <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">/dev/random</fo:inline>.
			</fo:block></fo:block><fo:block id="sect-Defensive_Coding-TLS-Pitfalls-NSS"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">NSS Pitfalls</fo:marker><fo:block color="#3c6eb4" font-size="14pt">12.1.4. NSS Pitfalls</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				NSS was not designed to be used by other libraries which can be linked into applications without modifying them. There is a lot of global state. There does not seem to be a way to perform required NSS initialization without race conditions.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				If the NSPR descriptor is in an unexpected state, the <fo:inline font-family="Liberation Mono,monospace">SSL_ForceHandshake</fo:inline> function can succeed, but no TLS handshake takes place, the peer is not authenticated, and subsequent data is exchanged in the clear.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				NSS disables itself if it detects that the process underwent a <fo:inline font-family="Liberation Mono,monospace">fork</fo:inline> after the library has been initialized. This behavior is required by the PKCS#11 API specification.
			</fo:block></fo:block></fo:block><fo:block id="sect-Defensive_Coding-TLS-Client"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">TLS Clients</fo:marker><fo:block color="#3c6eb4" font-size="16pt">12.2. TLS Clients</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			Secure use of TLS in a client generally involves all of the following steps. (Individual instructions for specific TLS implementations follow in the next sections.)
		</fo:block><fo:list-block id="idp30727888" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp30728208" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					The client must configure the TLS library to use a set of trusted root certificates. These certificates are provided by the system in <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">/etc/ssl/certs</fo:inline> or files derived from it.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp34510480" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					The client selects sufficiently strong cryptographic primitives and disables insecure ones (such as no-op encryption). Compression and SSL version 2 support must be disabled (including the SSLv2-compatible handshake).
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp27281280" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					The client initiates the TLS connection. The Server Name Indication extension should be used if supported by the TLS implementation. Before switching to the encrypted connection state, the contents of all input and output buffers must be discarded.
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp14787344" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					The client needs to validate the peer certificate provided by the server, that is, the client must check that there is a cryptographically protected chain from a trusted root certificate to the peer certificate. (Depending on the TLS implementation, a TLS handshake can succeed even if the certificate cannot be validated.)
				</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp14788624" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
					The client must check that the configured or user-provided server name matches the peer certificate provided by the server.
				</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
			It is safe to provide users detailed diagnostics on certificate validation failures. Other causes of handshake failures and, generally speaking, any details on other errors reported by the TLS implementation (particularly exception tracebacks), must not be divulged in ways that make them accessible to potential attackers. Otherwise, it is possible to create decryption oracles.
		</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" id="idp26941552" keep-together.within-column="always" color="black" background-color="white" padding-bottom="-3em" padding-top="0pt" padding-left="0em" margin-left="0em" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" margin-top="1em" margin-bottom="4em"><fo:block-container><fo:block-container margin-left="0em"><fo:block padding-left="0em" padding-bottom="0em" margin-left="0em" margin-bottom="0em" text-indent="3em" font-size="13pt" color="#eeeeec" font-weight="bold" hyphenate="true" keep-with-next.within-column="always" background-color="#d08e13">Important</fo:block></fo:block-container><fo:block-container margin-left="0em"><fo:block margin-right="0em" margin-left="0em" background-color="#eeeeec" border-left-width="1pt" border-left-style="solid" border-left-color="#aaaaaa" border-right-width="1pt" border-right-style="solid" border-right-color="#aaaaaa" border-bottom-width="1pt" border-bottom-style="solid" border-bottom-color="#aaaaaa" padding-top="1.5em" padding-left="1em" padding-right="1em" margin-top="0em" margin-bottom="0em"><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Depending on the application, revocation checking (against certificate revocations lists or via OCSP) and session resumption are important aspects of production-quality client. These aspects are not yet covered.
			</fo:block></fo:block></fo:block-container><fo:block-container position="absolute" top="-12px" left="1px" margin-left="0em"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="url(Common_Content/images/important.svg)"/></fo:block></fo:block-container></fo:block-container></fo:block><fo:block id="idp26942720"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Implementation TLS Clients With OpenSSL</fo:marker><fo:block color="#3c6eb4" font-size="14pt">12.2.1. Implementation TLS Clients With OpenSSL</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				In the following code, the error handling is only exploratory. Proper error handling is required for production use, especially in libraries. 
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The OpenSSL library needs explicit initialization (see <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-OpenSSL-Init"><fo:inline font-style="italic" color="#0066cc">Example 12.3, “OpenSSL library initialization”</fo:inline></fo:basic-link>).
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-OpenSSL-Init" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.3. OpenSSL library initialization</fo:block><fo:block id="idp34205568" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#FF00FF">// The following call prints an error message and calls exit() if</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// the OpenSSL configuration file is unreadable.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>OPENSSL_config(NULL);
<fo:inline color="#FF00FF">// Provide human-readable error messages.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>SSL_load_error_strings();
<fo:inline color="#FF00FF">// Register ciphers.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>SSL_library_init();
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				After that, a context object has to be created, which acts as a factory for connection objects (<fo:basic-link internal-destination="ex-Defensive_Coding-TLS-Client-OpenSSL-CTX"><fo:inline font-style="italic" color="#0066cc">Example 12.4, “OpenSSL client context creation”</fo:inline></fo:basic-link>). We use an explicit cipher list so that we do not pick up any strange ciphers when OpenSSL is upgraded. The actual version requested in the client hello depends on additional restrictions in the OpenSSL library. If possible, you should follow the example code and use the default list of trusted root certificate authorities provided by the system because you would have to maintain your own set otherwise, which can be cumbersome.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-Client-OpenSSL-CTX" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.4. OpenSSL client context creation</fo:block><fo:block id="idp20134288" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#FF00FF">// Configure a client connection context.  Send a hendshake for the</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// highest supported TLS version, and disable compression.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#0000ff">const</fo:inline> SSL_METHOD *<fo:inline color="#0000ff">const</fo:inline> req_method = SSLv23_client_method();
SSL_CTX *<fo:inline color="#0000ff">const</fo:inline> ctx = SSL_CTX_new(req_method);
<fo:inline color="#002F5D">if</fo:inline> (ctx == NULL) {
  ERR_print_errors(bio_err);
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
SSL_CTX_set_options(ctx, SSL_OP_NO_SSLv2 | SSL_OP_NO_COMPRESSION);

<fo:inline color="#FF00FF">// Adjust the ciphers list based on a whitelist.  First enable all</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// ciphers of at least medium strength, to get the list which is</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// compiled into OpenSSL.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#002F5D">if</fo:inline> (SSL_CTX_set_cipher_list(ctx, <fo:inline color="#5C3566">"HIGH:MEDIUM"</fo:inline>) != <fo:inline color="#00007f">1</fo:inline>) {
  ERR_print_errors(bio_err);
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
{
  <fo:inline color="#FF00FF">// Create a dummy SSL session to obtain the cipher list.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>  SSL *ssl = SSL_new(ctx);
  <fo:inline color="#002F5D">if</fo:inline> (ssl == NULL) {
    ERR_print_errors(bio_err);
    exit(<fo:inline color="#00007f">1</fo:inline>);
  }
  STACK_OF(SSL_CIPHER) *active_ciphers = SSL_get_ciphers(ssl);
  <fo:inline color="#002F5D">if</fo:inline> (active_ciphers == NULL) {
    ERR_print_errors(bio_err);
    exit(<fo:inline color="#00007f">1</fo:inline>);
  }
  <fo:inline color="#FF00FF">// Whitelist of candidate ciphers.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>  <fo:inline color="#0000ff">static</fo:inline> <fo:inline color="#0000ff">const</fo:inline> <fo:inline color="#0000ff">char</fo:inline> *<fo:inline color="#0000ff">const</fo:inline> candidates[] =  {
    <fo:inline color="#5C3566">"AES128-GCM-SHA256"</fo:inline>, <fo:inline color="#5C3566">"AES128-SHA256"</fo:inline>, <fo:inline color="#5C3566">"AES256-SHA256"</fo:inline>, <fo:inline color="#FF00FF">// strong ciphers</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>    <fo:inline color="#5C3566">"AES128-SHA"</fo:inline>, <fo:inline color="#5C3566">"AES256-SHA"</fo:inline>, <fo:inline color="#FF00FF">// strong ciphers, also in older versions</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>    <fo:inline color="#5C3566">"RC4-SHA"</fo:inline>, <fo:inline color="#5C3566">"RC4-MD5"</fo:inline>, <fo:inline color="#FF00FF">// backwards compatibility, supposed to be weak</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>    <fo:inline color="#5C3566">"DES-CBC3-SHA"</fo:inline>, <fo:inline color="#5C3566">"DES-CBC3-MD5"</fo:inline>, <fo:inline color="#FF00FF">// more backwards compatibility</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>    NULL
  };
  <fo:inline color="#FF00FF">// Actually selected ciphers.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>  <fo:inline color="#0000ff">char</fo:inline> ciphers[<fo:inline color="#00007f">300</fo:inline>];
  ciphers[0] = '\0';
  <fo:inline color="#002F5D">for</fo:inline> (<fo:inline color="#0000ff">const</fo:inline> <fo:inline color="#0000ff">char</fo:inline> *<fo:inline color="#0000ff">const</fo:inline> *c = candidates; *c; ++c) {
    <fo:inline color="#002F5D">for</fo:inline> (<fo:inline color="#0000ff">int</fo:inline> i = 0; i &lt; sk_SSL_CIPHER_num(active_ciphers); ++i) {
	<fo:inline color="#002F5D">if</fo:inline> (strcmp(SSL_CIPHER_get_name(sk_SSL_CIPHER_value(active_ciphers, i)),
		   *c) == 0) {
	  <fo:inline color="#002F5D">if</fo:inline> (*ciphers) {
	    strcat(ciphers, <fo:inline color="#5C3566">":"</fo:inline>);
	  }
	  strcat(ciphers, *c);
	  <fo:inline color="#002F5D">break</fo:inline>;
	}
    }
  }
  SSL_free(ssl);
  <fo:inline color="#FF00FF">// Apply final cipher list.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>  <fo:inline color="#002F5D">if</fo:inline> (SSL_CTX_set_cipher_list(ctx, ciphers) != <fo:inline color="#00007f">1</fo:inline>) {
    ERR_print_errors(bio_err);
    exit(<fo:inline color="#00007f">1</fo:inline>);
  }
}

<fo:inline color="#FF00FF">// Load the set of trusted root certificates.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#002F5D">if</fo:inline> (!SSL_CTX_set_default_verify_paths(ctx)) {
  ERR_print_errors(bio_err);
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				A single context object can be used to create multiple connection objects. It is safe to use the same <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SSL_CTX</fo:inline> object for creating connections concurrently from multiple threads, provided that the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SSL_CTX</fo:inline> object is not modified (e.g., callbacks must not be changed).
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				After creating the TCP socket and disabling the Nagle algorithm (per <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-Nagle"><fo:inline font-style="italic" color="#0066cc">Example 12.1, “Deactivating the TCP Nagle algorithm”</fo:inline></fo:basic-link>), the actual connection object needs to be created, as show in <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-Client-OpenSSL-CTX"><fo:inline font-style="italic" color="#0066cc">Example 12.4, “OpenSSL client context creation”</fo:inline></fo:basic-link>. If the handshake started by <fo:inline font-family="Liberation Mono,monospace">SSL_connect</fo:inline> fails, the <fo:inline font-family="Liberation Mono,monospace">ssl_print_error_and_exit</fo:inline> function from <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-OpenSSL-Errors"><fo:inline font-style="italic" color="#0066cc">Example 12.2, “Obtaining OpenSSL error codes”</fo:inline></fo:basic-link> is called.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The <fo:inline font-family="Liberation Mono,monospace">certificate_validity_override</fo:inline> function provides an opportunity to override the validity of the certificate in case the OpenSSL check fails. If such functionality is not required, the call can be removed, otherwise, the application developer has to implement it.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The host name passed to the functions <fo:inline font-family="Liberation Mono,monospace">SSL_set_tlsext_host_name</fo:inline> and <fo:inline font-family="Liberation Mono,monospace">X509_check_host</fo:inline> must be the name that was passed to <fo:inline font-family="Liberation Mono,monospace">getaddrinfo</fo:inline> or a similar name resolution function. No host name canonicalization must be performed. The <fo:inline font-family="Liberation Mono,monospace">X509_check_host</fo:inline> function used in the final step for host name matching is currently only implemented in OpenSSL 1.1, which is not released yet. In case host name matching fails, the function <fo:inline font-family="Liberation Mono,monospace">certificate_host_name_override</fo:inline> is called. This function should check user-specific certificate store, to allow a connection even if the host name does not match the certificate. This function has to be provided by the application developer. Note that the override must be keyed by both the certificate <fo:inline font-style="italic">and</fo:inline> the host name.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-Client-OpenSSL-Connect" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.5. Creating a client connection using OpenSSL</fo:block><fo:block id="idp15658960" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#FF00FF">// Create the connection object.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>SSL *ssl = SSL_new(ctx);
<fo:inline color="#002F5D">if</fo:inline> (ssl == NULL) {
  ERR_print_errors(bio_err);
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
SSL_set_fd(ssl, sockfd);

<fo:inline color="#FF00FF">// Enable the ServerNameIndication extension</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#002F5D">if</fo:inline> (!SSL_set_tlsext_host_name(ssl, host)) {
  ERR_print_errors(bio_err);
  exit(<fo:inline color="#00007f">1</fo:inline>);
}

<fo:inline color="#FF00FF">// Perform the TLS handshake with the server.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>ret = SSL_connect(ssl);
<fo:inline color="#002F5D">if</fo:inline> (ret != <fo:inline color="#00007f">1</fo:inline>) {
  <fo:inline color="#FF00FF">// Error status can be 0 or negative.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>  ssl_print_error_and_exit(ssl, <fo:inline color="#5C3566">"SSL_connect"</fo:inline>, ret);
}

<fo:inline color="#FF00FF">// Obtain the server certificate.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>X509 *peercert = SSL_get_peer_certificate(ssl);
<fo:inline color="#002F5D">if</fo:inline> (peercert == NULL) {
  fprintf(stderr, <fo:inline color="#5C3566">"peer certificate missing"</fo:inline>);
  exit(<fo:inline color="#00007f">1</fo:inline>);
}

<fo:inline color="#FF00FF">// Check the certificate verification result.  Allow an explicit</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// certificate validation override in case verification fails.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#0000ff">int</fo:inline> verifystatus = SSL_get_verify_result(ssl);
<fo:inline color="#002F5D">if</fo:inline> (verifystatus != X509_V_OK &amp;&amp; !certificate_validity_override(peercert)) {
  fprintf(stderr, <fo:inline color="#5C3566">"SSL_connect: verify result: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	    X509_verify_cert_error_string(verifystatus));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}

<fo:inline color="#FF00FF">// Check if the server certificate matches the host name used to</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// establish the connection.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// </fo:inline><fo:inline color="#0000ff">FIXME</fo:inline><fo:inline color="#FF00FF">: Currently needs OpenSSL 1.1.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#002F5D">if</fo:inline> (X509_check_host(peercert, (<fo:inline color="#0000ff">const</fo:inline> <fo:inline color="#0000ff">unsigned</fo:inline> <fo:inline color="#0000ff">char</fo:inline> *)host, strlen(host),
		      0) != <fo:inline color="#00007f">1</fo:inline>
    &amp;&amp; !certificate_host_name_override(peercert, host)) {
  fprintf(stderr, <fo:inline color="#5C3566">"SSL certificate does not match host name</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>);
  exit(<fo:inline color="#00007f">1</fo:inline>);
}

X509_free(peercert);

</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The connection object can be used for sending and receiving data, as in <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-OpenSSL-Connection-Use"><fo:inline font-style="italic" color="#0066cc">Example 12.6, “Using an OpenSSL connection to send and receive data”</fo:inline></fo:basic-link>. It is also possible to create a <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">BIO</fo:inline> object and use the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SSL</fo:inline> object as the underlying transport, using <fo:inline font-family="Liberation Mono,monospace">BIO_set_ssl</fo:inline>.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-OpenSSL-Connection-Use" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.6. Using an OpenSSL connection to send and receive data</fo:block><fo:block id="idp26518256" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#0000ff">const</fo:inline> <fo:inline color="#0000ff">char</fo:inline> *<fo:inline color="#0000ff">const</fo:inline> req = <fo:inline color="#5C3566">"GET / HTTP/1.0</fo:inline><fo:inline color="#ff00ff">\r\n\r\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>;
<fo:inline color="#002F5D">if</fo:inline> (SSL_write(ssl, req, strlen(req)) &lt; 0) {
  ssl_print_error_and_exit(ssl, <fo:inline color="#5C3566">"SSL_write"</fo:inline>, ret);
}
<fo:inline color="#0000ff">char</fo:inline> buf[4096];
ret = SSL_read(ssl, buf, <fo:inline color="#002F5D">sizeof</fo:inline>(buf));
<fo:inline color="#002F5D">if</fo:inline> (ret &lt; 0) {
  ssl_print_error_and_exit(ssl, <fo:inline color="#5C3566">"SSL_read"</fo:inline>, ret);
}
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				When it is time to close the connection, the <fo:inline font-family="Liberation Mono,monospace">SSL_shutdown</fo:inline> function needs to be called twice for an orderly, synchronous connection termination (<fo:basic-link internal-destination="ex-Defensive_Coding-TLS-OpenSSL-Connection-Close"><fo:inline font-style="italic" color="#0066cc">Example 12.7, “Closing an OpenSSL connection in an orderly fashion”</fo:inline></fo:basic-link>). This exchanges <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">close_notify</fo:inline> alerts with the server. The additional logic is required to deal with an unexpected <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">close_notify</fo:inline> from the server. Note that is necessary to explicitly close the underlying socket after the connection object has been freed.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-OpenSSL-Connection-Close" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.7. Closing an OpenSSL connection in an orderly fashion</fo:block><fo:block id="idp12984352" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#FF00FF">// Send the close_notify alert.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>ret = SSL_shutdown(ssl);
<fo:inline color="#002F5D">switch</fo:inline> (ret) {
<fo:inline color="#002F5D">case</fo:inline> <fo:inline color="#00007f">1</fo:inline>:
  <fo:inline color="#FF00FF">// A close_notify alert has already been received.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>  <fo:inline color="#002F5D">break</fo:inline>;
<fo:inline color="#002F5D">case</fo:inline> 0:
  <fo:inline color="#FF00FF">// Wait for the close_notify alert from the peer.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>  ret = SSL_shutdown(ssl);
  <fo:inline color="#002F5D">switch</fo:inline> (ret) {
  <fo:inline color="#002F5D">case</fo:inline> 0:
    fprintf(stderr, <fo:inline color="#5C3566">"info: second SSL_shutdown returned zero</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>);
    <fo:inline color="#002F5D">break</fo:inline>;
  <fo:inline color="#002F5D">case</fo:inline> <fo:inline color="#00007f">1</fo:inline>:
    <fo:inline color="#002F5D">break</fo:inline>;
  <fo:inline color="#002F5D">default</fo:inline>:
    ssl_print_error_and_exit(ssl, <fo:inline color="#5C3566">"SSL_shutdown 2"</fo:inline>, ret);
  }
  <fo:inline color="#002F5D">break</fo:inline>;
<fo:inline color="#002F5D">default</fo:inline>:
  ssl_print_error_and_exit(ssl, <fo:inline color="#5C3566">"SSL_shutdown 1"</fo:inline>, ret);
}
SSL_free(ssl);
close(sockfd);
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				<fo:basic-link internal-destination="ex-Defensive_Coding-TLS-OpenSSL-Context-Close"><fo:inline font-style="italic" color="#0066cc">Example 12.8, “Closing an OpenSSL connection in an orderly fashion”</fo:inline></fo:basic-link> shows how to deallocate the context object when it is no longer needed because no further TLS connections will be established.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-OpenSSL-Context-Close" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.8. Closing an OpenSSL connection in an orderly fashion</fo:block><fo:block id="idp38360080" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
SSL_CTX_free(ctx);
</fo:block></fo:block></fo:block></fo:block><fo:block id="sect-Defensive_Coding-TLS-Client-GNUTLS"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Implementation TLS Clients With GNUTLS</fo:marker><fo:block color="#3c6eb4" font-size="14pt">12.2.2. Implementation TLS Clients With GNUTLS</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				This section describes how to implement a TLS client with full certificate validation (but without certificate revocation checking). Note that the error handling in is only exploratory and needs to be replaced before production use.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The GNUTLS library needs explicit initialization:
			</fo:block><fo:block id="ex-Defensive_Coding-TLS-GNUTLS-Init" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block id="idp34650784" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
gnutls_global_init();
</fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Failing to do so can result in obscure failures in Base64 decoding. See <fo:basic-link internal-destination="sect-Defensive_Coding-TLS-Pitfalls-GNUTLS"><fo:inline font-style="italic" color="#0066cc">Section 12.1.2, “GNUTLS Pitfalls”</fo:inline></fo:basic-link> for additional aspects of initialization.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Before setting up TLS connections, a credentials objects has to be allocated and initialized with the set of trusted root CAs (<fo:basic-link internal-destination="ex-Defensive_Coding-TLS-Client-GNUTLS-Credentials"><fo:inline font-style="italic" color="#0066cc">Example 12.9, “Initializing a GNUTLS credentials structure”</fo:inline></fo:basic-link>).
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-Client-GNUTLS-Credentials" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.9. Initializing a GNUTLS credentials structure</fo:block><fo:block id="idp29261936" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#FF00FF">// Load the trusted CA certificates.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>gnutls_certificate_credentials_t cred = NULL;
<fo:inline color="#0000ff">int</fo:inline> ret = gnutls_certificate_allocate_credentials (&amp;cred);
<fo:inline color="#002F5D">if</fo:inline> (ret != GNUTLS_E_SUCCESS) {
  fprintf(stderr, <fo:inline color="#5C3566">"error: gnutls_certificate_allocate_credentials: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	    gnutls_strerror(ret));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
<fo:inline color="#FF00FF">// gnutls_certificate_set_x509_system_trust needs GNUTLS version 3.0</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// or newer, so we hard-code the path to the certificate store</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// instead.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#0000ff">static</fo:inline> <fo:inline color="#0000ff">const</fo:inline> <fo:inline color="#0000ff">char</fo:inline> ca_bundle[] = <fo:inline color="#5C3566">"/etc/ssl/certs/ca-bundle.crt"</fo:inline>;
ret = gnutls_certificate_set_x509_trust_file
  (cred, ca_bundle, GNUTLS_X509_FMT_PEM);
<fo:inline color="#002F5D">if</fo:inline> (ret == 0) {
  fprintf(stderr, <fo:inline color="#5C3566">"error: no certificates found in: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>, ca_bundle);
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
<fo:inline color="#002F5D">if</fo:inline> (ret &lt; 0) {
  fprintf(stderr, <fo:inline color="#5C3566">"error: gnutls_certificate_set_x509_trust_files(%s): %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	    ca_bundle, gnutls_strerror(ret));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				After the last TLS connection has been closed, this credentials object should be freed:
			</fo:block><fo:block id="idp13034864" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block id="idp13035376" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
gnutls_certificate_free_credentials(cred);
</fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				During its lifetime, the credentials object can be used to initialize TLS session objects from multiple threads, provided that it is not changed.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Once the TCP connection has been established, the Nagle algorithm should be disabled (see <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-Nagle"><fo:inline font-style="italic" color="#0066cc">Example 12.1, “Deactivating the TCP Nagle algorithm”</fo:inline></fo:basic-link>). After that, the socket can be associated with a new GNUTLS session object. The previously allocated credentials object provides the set of root CAs. The <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">NORMAL</fo:inline> set of cipher suites and protocols provides a reasonable default. Then the TLS handshake must be initiated. This is shown in <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-Client-GNUTLS-Connect"><fo:inline font-style="italic" color="#0066cc">Example 12.10, “Establishing a TLS client connection using GNUTLS”</fo:inline></fo:basic-link>.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-Client-GNUTLS-Connect" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.10. Establishing a TLS client connection using GNUTLS</fo:block><fo:block id="idp26069008" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#FF00FF">// Create the session object.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>gnutls_session_t session;
ret = gnutls_init(&amp;session, GNUTLS_CLIENT);
<fo:inline color="#002F5D">if</fo:inline> (ret != GNUTLS_E_SUCCESS) {
  fprintf(stderr, <fo:inline color="#5C3566">"error: gnutls_init: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	    gnutls_strerror(ret));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}

<fo:inline color="#FF00FF">// Configure the cipher preferences.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#0000ff">const</fo:inline> <fo:inline color="#0000ff">char</fo:inline> *errptr = NULL;
ret = gnutls_priority_set_direct(session, <fo:inline color="#5C3566">"NORMAL"</fo:inline>, &amp;errptr);
<fo:inline color="#002F5D">if</fo:inline> (ret != GNUTLS_E_SUCCESS) {
  fprintf(stderr, <fo:inline color="#5C3566">"error: gnutls_priority_set_direct: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>
	    <fo:inline color="#5C3566">"error: at: </fo:inline><fo:inline color="#ff00ff">\"</fo:inline><fo:inline color="#5C3566">%s</fo:inline><fo:inline color="#ff00ff">\"\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>, gnutls_strerror(ret), errptr);
  exit(<fo:inline color="#00007f">1</fo:inline>);
}

<fo:inline color="#FF00FF">// Install the trusted certificates.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>ret = gnutls_credentials_set(session, GNUTLS_CRD_CERTIFICATE, cred);
<fo:inline color="#002F5D">if</fo:inline> (ret != GNUTLS_E_SUCCESS) {
  fprintf(stderr, <fo:inline color="#5C3566">"error: gnutls_credentials_set: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	    gnutls_strerror(ret));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}

<fo:inline color="#FF00FF">// Associate the socket with the session object and set the server</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// name.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>gnutls_transport_set_ptr(session, (gnutls_transport_ptr_t)(uintptr_t)sockfd);
ret = gnutls_server_name_set(session, GNUTLS_NAME_DNS,
			       host, strlen(host));
<fo:inline color="#002F5D">if</fo:inline> (ret != GNUTLS_E_SUCCESS) {
  fprintf(stderr, <fo:inline color="#5C3566">"error: gnutls_server_name_set: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	    gnutls_strerror(ret));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}

<fo:inline color="#FF00FF">// Establish the session.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>ret = gnutls_handshake(session);
<fo:inline color="#002F5D">if</fo:inline> (ret != GNUTLS_E_SUCCESS) {
  fprintf(stderr, <fo:inline color="#5C3566">"error: gnutls_handshake: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	    gnutls_strerror(ret));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				After the handshake has been completed, the server certificate needs to be verified (<fo:basic-link internal-destination="ex-Defensive_Coding-TLS-Client-GNUTLS-Verify"><fo:inline font-style="italic" color="#0066cc">Example 12.11, “Verifying a server certificate using GNUTLS”</fo:inline></fo:basic-link>). In the example, the user-defined <fo:inline font-family="Liberation Mono,monospace">certificate_validity_override</fo:inline> function is called if the verification fails, so that a separate, user-specific trust store can be checked. This function call can be omitted if the functionality is not needed.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-Client-GNUTLS-Verify" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.11. Verifying a server certificate using GNUTLS</fo:block><fo:block id="idp38264784" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#FF00FF">// Obtain the server certificate chain.  The server certificate</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// itself is stored in the first element of the array.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#0000ff">unsigned</fo:inline> certslen = 0;
<fo:inline color="#0000ff">const</fo:inline> gnutls_datum_t *<fo:inline color="#0000ff">const</fo:inline> certs =
  gnutls_certificate_get_peers(session, &amp;certslen);
<fo:inline color="#002F5D">if</fo:inline> (certs == NULL || certslen == 0) {
  fprintf(stderr, <fo:inline color="#5C3566">"error: could not obtain peer certificate</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>);
  exit(<fo:inline color="#00007f">1</fo:inline>);
}

<fo:inline color="#FF00FF">// Validate the certificate chain.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#0000ff">unsigned</fo:inline> status = (<fo:inline color="#0000ff">unsigned</fo:inline>)<fo:inline color="#00007f">-1</fo:inline>;
ret = gnutls_certificate_verify_peers2(session, &amp;status);
<fo:inline color="#002F5D">if</fo:inline> (ret != GNUTLS_E_SUCCESS) {
  fprintf(stderr, <fo:inline color="#5C3566">"error: gnutls_certificate_verify_peers2: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	    gnutls_strerror(ret));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
<fo:inline color="#002F5D">if</fo:inline> (status != 0 &amp;&amp; !certificate_validity_override(certs[0])) {
  gnutls_datum_t msg;
<fo:inline color="#b03060">#if GNUTLS_VERSION_AT_LEAST_3_1_4</fo:inline><fo:inline color="#b03060"/>
<fo:inline color="#b03060"/>  <fo:inline color="#0000ff">int</fo:inline> type = gnutls_certificate_type_get (session);
  ret = gnutls_certificate_verification_status_print(status, type, &amp;out, 0);
<fo:inline color="#b03060">#else</fo:inline><fo:inline color="#b03060"/>
<fo:inline color="#b03060"/>  ret = <fo:inline color="#00007f">-1</fo:inline>;
<fo:inline color="#b03060">#endif</fo:inline><fo:inline color="#b03060"/>
<fo:inline color="#b03060"/>  <fo:inline color="#002F5D">if</fo:inline> (ret == 0) {
    fprintf(stderr, <fo:inline color="#5C3566">"error: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>, msg.data);
    gnutls_free(msg.data);
    exit(<fo:inline color="#00007f">1</fo:inline>);
  } <fo:inline color="#002F5D">else</fo:inline> {
    fprintf(stderr, <fo:inline color="#5C3566">"error: certificate validation failed with code 0x%x</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	      status);
    exit(<fo:inline color="#00007f">1</fo:inline>);
  }
}
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				In the next step (<fo:basic-link internal-destination="ex-Defensive_Coding-TLS-Client-GNUTLS-Match"><fo:inline font-style="italic" color="#0066cc">Example 12.12, “Matching the server host name and certificate in a GNUTLS client”</fo:inline></fo:basic-link>, the certificate must be matched against the host name (note the unusual return value from <fo:inline font-family="Liberation Mono,monospace">gnutls_x509_crt_check_hostname</fo:inline>). Again, an override function <fo:inline font-family="Liberation Mono,monospace">certificate_host_name_override</fo:inline> is called. Note that the override must be keyed to the certificate <fo:inline font-style="italic">and</fo:inline> the host name. The function call can be omitted if the override is not needed.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-Client-GNUTLS-Match" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.12. Matching the server host name and certificate in a GNUTLS client</fo:block><fo:block id="idp12981760" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#FF00FF">// Match the peer certificate against the host name.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// We can only obtain a set of DER-encoded certificates from the</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// session object, so we have to re-parse the peer certificate into</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// a certificate object.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>gnutls_x509_crt_t cert;
ret = gnutls_x509_crt_init(&amp;cert);
<fo:inline color="#002F5D">if</fo:inline> (ret != GNUTLS_E_SUCCESS) {
  fprintf(stderr, <fo:inline color="#5C3566">"error: gnutls_x509_crt_init: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	    gnutls_strerror(ret));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
<fo:inline color="#FF00FF">// The peer certificate is the first certificate in the list.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>ret = gnutls_x509_crt_import(cert, certs, GNUTLS_X509_FMT_DER);
<fo:inline color="#002F5D">if</fo:inline> (ret != GNUTLS_E_SUCCESS) {
  fprintf(stderr, <fo:inline color="#5C3566">"error: gnutls_x509_crt_import: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	    gnutls_strerror(ret));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
ret = gnutls_x509_crt_check_hostname(cert, host);
<fo:inline color="#002F5D">if</fo:inline> (ret == 0 &amp;&amp; !certificate_host_name_override(certs[0], host)) {
  fprintf(stderr, <fo:inline color="#5C3566">"error: host name does not match certificate</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>);
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
gnutls_x509_crt_deinit(cert);
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				In newer GNUTLS versions, certificate checking and host name validation can be combined using the <fo:inline font-family="Liberation Mono,monospace">gnutls_certificate_verify_peers3</fo:inline> function.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				An established TLS session can be used for sending and receiving data, as in <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-GNUTLS-Use"><fo:inline font-style="italic" color="#0066cc">Example 12.13, “Using a GNUTLS session”</fo:inline></fo:basic-link>.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-GNUTLS-Use" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.13. Using a GNUTLS session</fo:block><fo:block id="idp13745936" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#0000ff">char</fo:inline> buf[4096];
snprintf(buf, <fo:inline color="#002F5D">sizeof</fo:inline>(buf), <fo:inline color="#5C3566">"GET / HTTP/1.0</fo:inline><fo:inline color="#ff00ff">\r\n</fo:inline><fo:inline color="#5C3566">Host: %s</fo:inline><fo:inline color="#ff00ff">\r\n\r\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>, host);
ret = gnutls_record_send(session, buf, strlen(buf));
<fo:inline color="#002F5D">if</fo:inline> (ret &lt; 0) {
  fprintf(stderr, <fo:inline color="#5C3566">"error: gnutls_record_send: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>, gnutls_strerror(ret));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
ret = gnutls_record_recv(session, buf, <fo:inline color="#002F5D">sizeof</fo:inline>(buf));
<fo:inline color="#002F5D">if</fo:inline> (ret &lt; 0) {
  fprintf(stderr, <fo:inline color="#5C3566">"error: gnutls_record_recv: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>, gnutls_strerror(ret));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				In order to shut down a connection in an orderly manner, you should call the <fo:inline font-family="Liberation Mono,monospace">gnutls_bye</fo:inline> function. Finally, the session object can be deallocated using <fo:inline font-family="Liberation Mono,monospace">gnutls_deinit</fo:inline> (see <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-GNUTLS-Disconnect"><fo:inline font-style="italic" color="#0066cc">Example 12.14, “Using a GNUTLS session”</fo:inline></fo:basic-link>).
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-GNUTLS-Disconnect" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.14. Using a GNUTLS session</fo:block><fo:block id="idp25103728" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#FF00FF">// Initiate an orderly connection shutdown.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>ret = gnutls_bye(session, GNUTLS_SHUT_RDWR);
<fo:inline color="#002F5D">if</fo:inline> (ret &lt; 0) {
  fprintf(stderr, <fo:inline color="#5C3566">"error: gnutls_bye: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>, gnutls_strerror(ret));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
<fo:inline color="#FF00FF">// Free the session object.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>gnutls_deinit(session);
</fo:block></fo:block></fo:block></fo:block><fo:block id="sect-Defensive_Coding-TLS-Client-OpenJDK"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Implementing TLS Clients With OpenJDK</fo:marker><fo:block color="#3c6eb4" font-size="14pt">12.2.3. Implementing TLS Clients With OpenJDK</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The examples below use the following cryptographic-related classes:
			</fo:block><fo:block id="idp19994016" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block id="idp15446640" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#002F5D">import</fo:inline> java.security.NoSuchAlgorithmException;
<fo:inline color="#002F5D">import</fo:inline> java.security.NoSuchProviderException;
<fo:inline color="#002F5D">import</fo:inline> java.security.cert.CertificateEncodingException;
<fo:inline color="#002F5D">import</fo:inline> java.security.cert.CertificateException;
<fo:inline color="#002F5D">import</fo:inline> java.security.cert.X509Certificate;
<fo:inline color="#002F5D">import</fo:inline> javax.net.ssl.SSLContext;
<fo:inline color="#002F5D">import</fo:inline> javax.net.ssl.SSLParameters;
<fo:inline color="#002F5D">import</fo:inline> javax.net.ssl.SSLSocket;
<fo:inline color="#002F5D">import</fo:inline> javax.net.ssl.TrustManager;
<fo:inline color="#002F5D">import</fo:inline> javax.net.ssl.X509TrustManager;

<fo:inline color="#002F5D">import sun.security.util.HostnameChecker;</fo:inline>
</fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				If compatibility with OpenJDK 6 is required, it is necessary to use the internal class <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">sun.security.util.HostnameChecker</fo:inline>. (The public OpenJDK API does not provide any support for dissecting the subject distinguished name of an X.509 certificate, so a custom-written DER parser is needed—or we have to use an internal class, which we do below.) In OpenJDK 7, the <fo:inline font-family="Liberation Mono,monospace">setEndpointIdentificationAlgorithm</fo:inline> method was added to the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">javax.net.ssl.SSLParameters</fo:inline> class, providing an official way to implement host name checking.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				TLS connections are established using an <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SSLContext</fo:inline> instance. With a properly configured OpenJDK installation, the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SunJSSE</fo:inline> provider uses the system-wide set of trusted root certificate authorities, so no further configuration is necessary. For backwards compatibility with OpenJDK 6, the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">TLSv1</fo:inline> provider has to be supported as a fall-back option. This is shown in <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-Client-OpenJDK-Context"><fo:inline font-style="italic" color="#0066cc">Example 12.15, “Setting up an <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SSLContext</fo:inline> for OpenJDK TLS clients”</fo:inline></fo:basic-link>.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-Client-OpenJDK-Context" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.15. Setting up an <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SSLContext</fo:inline> for OpenJDK TLS clients</fo:block><fo:block id="idp26675296" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#FF00FF">// Create the context.  Specify the SunJSSE provider to avoid</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// picking up third-party providers.  Try the TLS 1.2 provider</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// first, then fall back to TLS 1.0.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>SSLContext ctx;
<fo:inline color="#002F5D">try</fo:inline> {
    ctx = SSLContext.<fo:inline color="#007f00">getInstance</fo:inline>(<fo:inline color="#5C3566">"TLSv1.2"</fo:inline>, <fo:inline color="#5C3566">"SunJSSE"</fo:inline>);
} <fo:inline color="#002F5D">catch</fo:inline> (NoSuchAlgorithmException e) {
    <fo:inline color="#002F5D">try</fo:inline> {
        ctx = SSLContext.<fo:inline color="#007f00">getInstance</fo:inline>(<fo:inline color="#5C3566">"TLSv1"</fo:inline>, <fo:inline color="#5C3566">"SunJSSE"</fo:inline>);
    } <fo:inline color="#002F5D">catch</fo:inline> (NoSuchAlgorithmException e1) {
        <fo:inline color="#FF00FF">// The TLS 1.0 provider should always be available.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>        <fo:inline color="#002F5D">throw</fo:inline> <fo:inline color="#002F5D">new</fo:inline> AssertionError(e1);
    } <fo:inline color="#002F5D">catch</fo:inline> (NoSuchProviderException e1) {
        <fo:inline color="#002F5D">throw</fo:inline> <fo:inline color="#002F5D">new</fo:inline> AssertionError(e1);
    } 
} <fo:inline color="#002F5D">catch</fo:inline> (NoSuchProviderException e) {
    <fo:inline color="#FF00FF">// The SunJSSE provider should always be available.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>    <fo:inline color="#002F5D">throw</fo:inline> <fo:inline color="#002F5D">new</fo:inline> AssertionError(e);
}
ctx.<fo:inline color="#007f00">init</fo:inline>(<fo:inline color="#002F5D">null</fo:inline>, <fo:inline color="#002F5D">null</fo:inline>, <fo:inline color="#002F5D">null</fo:inline>);
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				In addition to the context, a TLS parameter object will be needed which adjusts the cipher suites and protocols (<fo:basic-link internal-destination="ex-Defensive_Coding-TLS-OpenJDK-Parameters"><fo:inline font-style="italic" color="#0066cc">Example 12.16, “Setting up <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SSLParameters</fo:inline> for TLS use with OpenJDK”</fo:inline></fo:basic-link>). Like the context, these parameters can be reused for multiple TLS connections.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-OpenJDK-Parameters" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.16. Setting up <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SSLParameters</fo:inline> for TLS use with OpenJDK</fo:block><fo:block id="idp21876608" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#FF00FF">// Prepare TLS parameters.  These have to applied to every TLS</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// socket before the handshake is triggered.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>SSLParameters params = ctx.<fo:inline color="#007f00">getDefaultSSLParameters</fo:inline>();
<fo:inline color="#FF00FF">// Do not send an SSL-2.0-compatible Client Hello.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>ArrayList&lt;String&gt; protocols = <fo:inline color="#002F5D">new</fo:inline> ArrayList&lt;String&gt;(
    Arrays.<fo:inline color="#007f00">asList</fo:inline>(params.<fo:inline color="#007f00">getProtocols</fo:inline>()));
protocols.<fo:inline color="#007f00">remove</fo:inline>(<fo:inline color="#5C3566">"SSLv2Hello"</fo:inline>);
params.<fo:inline color="#007f00">setProtocols</fo:inline>(protocols.<fo:inline color="#007f00">toArray</fo:inline>(<fo:inline color="#002F5D">new</fo:inline> String[protocols.<fo:inline color="#007f00">size</fo:inline>()]));
<fo:inline color="#FF00FF">// Adjust the supported ciphers.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>ArrayList&lt;String&gt; ciphers = <fo:inline color="#002F5D">new</fo:inline> ArrayList&lt;String&gt;(
    Arrays.<fo:inline color="#007f00">asList</fo:inline>(params.<fo:inline color="#007f00">getCipherSuites</fo:inline>()));
ciphers.<fo:inline color="#007f00">retainAll</fo:inline>(Arrays.<fo:inline color="#007f00">asList</fo:inline>(
    <fo:inline color="#5C3566">"TLS_RSA_WITH_AES_128_CBC_SHA256"</fo:inline>,
    <fo:inline color="#5C3566">"TLS_RSA_WITH_AES_256_CBC_SHA256"</fo:inline>,
    <fo:inline color="#5C3566">"TLS_RSA_WITH_AES_256_CBC_SHA"</fo:inline>,
    <fo:inline color="#5C3566">"TLS_RSA_WITH_AES_128_CBC_SHA"</fo:inline>,
    <fo:inline color="#5C3566">"SSL_RSA_WITH_3DES_EDE_CBC_SHA"</fo:inline>,
    <fo:inline color="#5C3566">"SSL_RSA_WITH_RC4_128_SHA1"</fo:inline>,
    <fo:inline color="#5C3566">"SSL_RSA_WITH_RC4_128_MD5"</fo:inline>,
    <fo:inline color="#5C3566">"TLS_EMPTY_RENEGOTIATION_INFO_SCSV"</fo:inline>));
params.<fo:inline color="#007f00">setCipherSuites</fo:inline>(ciphers.<fo:inline color="#007f00">toArray</fo:inline>(<fo:inline color="#002F5D">new</fo:inline> String[ciphers.<fo:inline color="#007f00">size</fo:inline>()]));
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				As initialized above, the parameter object does not yet require host name checking. This has to be enabled separately, and this is only supported by OpenJDK 7 and later:
			</fo:block><fo:block id="idp28020912" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block id="idp28021424" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
params.<fo:inline color="#007f00">setEndpointIdentificationAlgorithm</fo:inline>(<fo:inline color="#5C3566">"HTTPS"</fo:inline>);
</fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				All application protocols can use the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">"HTTPS"</fo:inline> algorithm. (The algorithms have minor differences with regard to wildcard handling, which should not matter in practice.)
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				<fo:basic-link internal-destination="ex-Defensive_Coding-TLS-Client-OpenJDK-Connect"><fo:inline font-style="italic" color="#0066cc">Example 12.17, “Establishing a TLS connection with OpenJDK”</fo:inline></fo:basic-link> shows how to establish the connection. Before the handshake is initialized, the protocol and cipher configuration has to be performed, by applying the parameter object <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">params</fo:inline>. (After this point, changes to <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">params</fo:inline> will not affect this TLS socket.) As mentioned initially, host name checking requires using an internal API on OpenJDK 6.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-Client-OpenJDK-Connect" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.17. Establishing a TLS connection with OpenJDK</fo:block><fo:block id="idp18828624" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#FF00FF">// Create the socket and connect it at the TCP layer.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>SSLSocket socket = (SSLSocket) ctx.<fo:inline color="#007f00">getSocketFactory</fo:inline>()
    .<fo:inline color="#007f00">createSocket</fo:inline>(host, port);

<fo:inline color="#FF00FF">// Disable the Nagle algorithm.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>socket.<fo:inline color="#007f00">setTcpNoDelay</fo:inline>(<fo:inline color="#002F5D">true</fo:inline>);

<fo:inline color="#FF00FF">// Adjust ciphers and protocols.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>socket.<fo:inline color="#007f00">setSSLParameters</fo:inline>(params);

<fo:inline color="#FF00FF">// Perform the handshake.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>socket.<fo:inline color="#007f00">startHandshake</fo:inline>();

<fo:inline color="#FF00FF">// Validate the host name.  The match() method throws</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// CertificateException on failure.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>X509Certificate peer = (X509Certificate)
    socket.<fo:inline color="#007f00">getSession</fo:inline>().<fo:inline color="#007f00">getPeerCertificates</fo:inline>()[<fo:inline color="#00007f">0</fo:inline>];
<fo:inline color="#FF00FF">// This is the only way to perform host name checking on OpenJDK 6.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>HostnameChecker.<fo:inline color="#007f00">getInstance</fo:inline>(HostnameChecker.<fo:inline color="#007f00">TYPE_TLS</fo:inline>).<fo:inline color="#007f00">match</fo:inline>(
    host, peer);
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Starting with OpenJDK 7, the last lines can be omitted, provided that host name verification has been enabled by calling the <fo:inline font-family="Liberation Mono,monospace">setEndpointIdentificationAlgorithm</fo:inline> method on the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">params</fo:inline> object (before it was applied to the socket).
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The TLS socket can be used as a regular socket, as shown in <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-Client-OpenJDK-Use"><fo:inline font-style="italic" color="#0066cc">Example 12.18, “Using a TLS client socket in OpenJDK”</fo:inline></fo:basic-link>.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-Client-OpenJDK-Use" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.18. Using a TLS client socket in OpenJDK</fo:block><fo:block id="idp38165680" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
socket.<fo:inline color="#007f00">getOutputStream</fo:inline>().<fo:inline color="#007f00">write</fo:inline>(<fo:inline color="#5C3566">"GET / HTTP/1.0</fo:inline><fo:inline color="#ff00ff">\r\n\r\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>
    .<fo:inline color="#007f00">getBytes</fo:inline>(Charset.<fo:inline color="#007f00">forName</fo:inline>(<fo:inline color="#5C3566">"UTF-8"</fo:inline>)));
<fo:inline color="#0000ff">byte</fo:inline>[] buffer = <fo:inline color="#002F5D">new</fo:inline> <fo:inline color="#0000ff">byte</fo:inline>[<fo:inline color="#00007f">4096</fo:inline>];
<fo:inline color="#0000ff">int</fo:inline> count = socket.<fo:inline color="#007f00">getInputStream</fo:inline>().<fo:inline color="#007f00">read</fo:inline>(buffer);
System.<fo:inline color="#007f00">out</fo:inline>.<fo:inline color="#007f00">write</fo:inline>(buffer, <fo:inline color="#00007f">0</fo:inline>, count);
</fo:block></fo:block></fo:block><fo:block id="idp14191104"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:block color="#3c6eb4" font-size="13pt">12.2.3.1. Overriding server certificate validation with OpenJDK 6</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					Overriding certificate validation requires a custom trust manager. With OpenJDK 6, the trust manager lacks information about the TLS session, and to which server the connection is made. Certificate overrides have to be tied to specific servers (host names). Consequently, different <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">TrustManager</fo:inline> and <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SSLContext</fo:inline> objects have to be used for different servers.
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					In the trust manager shown in <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-Client-MyTrustManager"><fo:inline font-style="italic" color="#0066cc">Example 12.19, “A customer trust manager for OpenJDK TLS clients”</fo:inline></fo:basic-link>, the server certificate is identified by its SHA-256 hash.
				</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-Client-MyTrustManager" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.19. A customer trust manager for OpenJDK TLS clients</fo:block><fo:block id="idp33981248" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#002F5D">public</fo:inline> <fo:inline color="#002F5D">class</fo:inline> MyTrustManager <fo:inline color="#002F5D">implements</fo:inline> X509TrustManager {
    <fo:inline color="#002F5D">private</fo:inline> <fo:inline color="#0000ff">final</fo:inline> <fo:inline color="#0000ff">byte</fo:inline>[] certHash;

    <fo:inline color="#002F5D">public</fo:inline> <fo:inline color="#007f00">MyTrustManager</fo:inline>(<fo:inline color="#0000ff">byte</fo:inline>[] certHash) <fo:inline color="#002F5D">throws</fo:inline> Exception {
        <fo:inline color="#002F5D">this</fo:inline>.<fo:inline color="#007f00">certHash</fo:inline> = certHash;
    }

    @Override
    <fo:inline color="#002F5D">public</fo:inline> <fo:inline color="#0000ff">void</fo:inline> <fo:inline color="#007f00">checkClientTrusted</fo:inline>(X509Certificate[] chain, String authType)
            <fo:inline color="#002F5D">throws</fo:inline> CertificateException {
        <fo:inline color="#002F5D">throw</fo:inline> <fo:inline color="#002F5D">new</fo:inline> UnsupportedOperationException();
    }

    @Override
    <fo:inline color="#002F5D">public</fo:inline> <fo:inline color="#0000ff">void</fo:inline> <fo:inline color="#007f00">checkServerTrusted</fo:inline>(X509Certificate[] chain,
            String authType) <fo:inline color="#002F5D">throws</fo:inline> CertificateException {
        <fo:inline color="#0000ff">byte</fo:inline>[] digest = <fo:inline color="#007f00">getCertificateDigest</fo:inline>(chain[<fo:inline color="#00007f">0</fo:inline>]);
        String digestHex = <fo:inline color="#007f00">formatHex</fo:inline>(digest);

        <fo:inline color="#002F5D">if</fo:inline> (Arrays.<fo:inline color="#007f00">equals</fo:inline>(digest, certHash)) {
            System.<fo:inline color="#007f00">err</fo:inline>.<fo:inline color="#007f00">println</fo:inline>(<fo:inline color="#5C3566">"info: accepting certificate: "</fo:inline> + digestHex);
        } <fo:inline color="#002F5D">else</fo:inline> {
            <fo:inline color="#002F5D">throw</fo:inline> <fo:inline color="#002F5D">new</fo:inline> CertificateException(<fo:inline color="#5C3566">"certificate rejected: "</fo:inline>  +
                    digestHex);
        }
    }

    @Override
    <fo:inline color="#002F5D">public</fo:inline> X509Certificate[] <fo:inline color="#007f00">getAcceptedIssuers</fo:inline>() {
        <fo:inline color="#002F5D">return</fo:inline> <fo:inline color="#002F5D">new</fo:inline> X509Certificate[<fo:inline color="#00007f">0</fo:inline>];
    }
}
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					This trust manager has to be passed to the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">init</fo:inline> method of the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">SSLContext</fo:inline> object, as show in <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-Client-Context_For_Cert"><fo:inline font-style="italic" color="#0066cc">Example 12.20, “Using a custom TLS trust manager with OpenJDK”</fo:inline></fo:basic-link>.
				</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-Client-Context_For_Cert" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.20. Using a custom TLS trust manager with OpenJDK</fo:block><fo:block id="idp26291472" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
SSLContext ctx;
<fo:inline color="#002F5D">try</fo:inline> {
    ctx = SSLContext.<fo:inline color="#007f00">getInstance</fo:inline>(<fo:inline color="#5C3566">"TLSv1.2"</fo:inline>, <fo:inline color="#5C3566">"SunJSSE"</fo:inline>);
} <fo:inline color="#002F5D">catch</fo:inline> (NoSuchAlgorithmException e) {
    <fo:inline color="#002F5D">try</fo:inline> {
        ctx = SSLContext.<fo:inline color="#007f00">getInstance</fo:inline>(<fo:inline color="#5C3566">"TLSv1"</fo:inline>, <fo:inline color="#5C3566">"SunJSSE"</fo:inline>);
    } <fo:inline color="#002F5D">catch</fo:inline> (NoSuchAlgorithmException e1) {
        <fo:inline color="#002F5D">throw</fo:inline> <fo:inline color="#002F5D">new</fo:inline> AssertionError(e1);
    } <fo:inline color="#002F5D">catch</fo:inline> (NoSuchProviderException e1) {
        <fo:inline color="#002F5D">throw</fo:inline> <fo:inline color="#002F5D">new</fo:inline> AssertionError(e1);
    }
} <fo:inline color="#002F5D">catch</fo:inline> (NoSuchProviderException e) {
    <fo:inline color="#002F5D">throw</fo:inline> <fo:inline color="#002F5D">new</fo:inline> AssertionError(e);
}
MyTrustManager tm = <fo:inline color="#002F5D">new</fo:inline> <fo:inline color="#007f00">MyTrustManager</fo:inline>(certHash);
ctx.<fo:inline color="#007f00">init</fo:inline>(<fo:inline color="#002F5D">null</fo:inline>, <fo:inline color="#002F5D">new</fo:inline> TrustManager[] {tm}, <fo:inline color="#002F5D">null</fo:inline>);
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					When certificate overrides are in place, host name verification should not be performed because there is no security requirement that the host name in the certificate matches the host name used to establish the connection (and it often will not). However, without host name verification, it is not possible to perform transparent fallback to certification validation using the system certificate store.
				</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					The approach described above works with OpenJDK 6 and later versions. Starting with OpenJDK 7, it is possible to use a custom subclass of the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">javax.net.ssl.X509ExtendedTrustManager</fo:inline> class. The OpenJDK TLS implementation will call the new methods, passing along TLS session information. This can be used to implement certificate overrides as a fallback (if certificate or host name verification fails), and a trust manager object can be used for multiple servers because the server address is available to the trust manager.
				</fo:block></fo:block></fo:block><fo:block id="sect-Defensive_Coding-TLS-Client-NSS"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Implementing TLS Clients With NSS</fo:marker><fo:block color="#3c6eb4" font-size="14pt">12.2.4. Implementing TLS Clients With NSS</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The following code shows how to implement a simple TLS client using NSS. Note that the error handling needs replacing before production use.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Using NSS needs several header files, as shown in <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-NSS-Includes"><fo:inline font-style="italic" color="#0066cc">Example 12.21, “Include files for NSS”</fo:inline></fo:basic-link>.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-NSS-Includes" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.21. Include files for NSS</fo:block><fo:block id="idp38139040" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#FF00FF">// NSPR include files</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#b03060">#include &lt;prerror.h&gt;</fo:inline><fo:inline color="#b03060"/>
<fo:inline color="#b03060"/><fo:inline color="#b03060">#include &lt;prinit.h&gt;</fo:inline><fo:inline color="#b03060"/>
<fo:inline color="#b03060"/>
<fo:inline color="#FF00FF">// NSS include files</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#b03060">#include &lt;nss.h&gt;</fo:inline><fo:inline color="#b03060"/>
<fo:inline color="#b03060"/><fo:inline color="#b03060">#include &lt;pk11pub.h&gt;</fo:inline><fo:inline color="#b03060"/>
<fo:inline color="#b03060"/><fo:inline color="#b03060">#include &lt;secmod.h&gt;</fo:inline><fo:inline color="#b03060"/>
<fo:inline color="#b03060"/><fo:inline color="#b03060">#include &lt;ssl.h&gt;</fo:inline><fo:inline color="#b03060"/>
<fo:inline color="#b03060"/><fo:inline color="#b03060">#include &lt;sslproto.h&gt;</fo:inline><fo:inline color="#b03060"/>
<fo:inline color="#b03060"/>
<fo:inline color="#FF00FF">// Private API, no other way to turn a POSIX file descriptor into an</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// NSPR handle.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>NSPR_API(PRFileDesc*) PR_ImportTCPSocket(<fo:inline color="#0000ff">int</fo:inline>);
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Initializing the NSS library is a complex task (<fo:basic-link internal-destination="ex-Defensive_Coding-TLS-NSS-Init"><fo:inline font-style="italic" color="#0066cc">Example 12.22, “Initializing the NSS library”</fo:inline></fo:basic-link>). It is not thread-safe. By default, the library is in export mode, and all strong ciphers are disabled. Therefore, after creating the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">NSSInitCContext</fo:inline> object, we probe all the strong ciphers we want to use, and check if at least one of them is available. If not, we call <fo:inline font-family="Liberation Mono,monospace">NSS_SetDomesticPolicy</fo:inline> to switch to unrestricted policy mode. This function replaces the existing global cipher suite policy, that is why we avoid calling it unless absolutely necessary.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The simplest way to configured the trusted root certificates involves loading the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">libnssckbi.so</fo:inline> NSS module with a call to the <fo:inline font-family="Liberation Mono,monospace">SECMOD_LoadUserModule</fo:inline> function. The root certificates are compiled into this module. (The PEM module for NSS, <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">libnsspem.so</fo:inline>, offers a way to load trusted CA certificates from a file.)
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-NSS-Init" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.22. Initializing the NSS library</fo:block><fo:block id="idp28118512" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
PR_Init(PR_USER_THREAD, PR_PRIORITY_NORMAL, 0);
NSSInitContext *<fo:inline color="#0000ff">const</fo:inline> ctx =
  NSS_InitContext(<fo:inline color="#5C3566">"sql:/etc/pki/nssdb"</fo:inline>, <fo:inline color="#5C3566">""</fo:inline>, <fo:inline color="#5C3566">""</fo:inline>, <fo:inline color="#5C3566">""</fo:inline>, NULL,
		    NSS_INIT_READONLY | NSS_INIT_PK11RELOAD);
<fo:inline color="#002F5D">if</fo:inline> (ctx == NULL) {
  <fo:inline color="#0000ff">const</fo:inline> PRErrorCode err = PR_GetError();
  fprintf(stderr, <fo:inline color="#5C3566">"error: NSPR error code %d: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	    err, PR_ErrorToName(err));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}

<fo:inline color="#FF00FF">// Ciphers to enable.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#0000ff">static</fo:inline> <fo:inline color="#0000ff">const</fo:inline> PRUint16 good_ciphers[] = {
  TLS_RSA_WITH_AES_128_CBC_SHA,
  TLS_RSA_WITH_AES_256_CBC_SHA,
  SSL_RSA_WITH_3DES_EDE_CBC_SHA,
  SSL_NULL_WITH_NULL_NULL <fo:inline color="#FF00FF">// sentinel</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>};

<fo:inline color="#FF00FF">// Check if the current policy allows any strong ciphers.  If it</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// doesn't, switch to the "domestic" (unrestricted) policy.  This is</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// not thread-safe and has global impact.  Consequently, we only do</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// it if absolutely necessary.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#0000ff">int</fo:inline> found_good_cipher = 0;
<fo:inline color="#002F5D">for</fo:inline> (<fo:inline color="#0000ff">const</fo:inline> PRUint16 *p = good_ciphers; *p != SSL_NULL_WITH_NULL_NULL;
     ++p) {
  PRInt32 policy;
  <fo:inline color="#002F5D">if</fo:inline> (SSL_CipherPolicyGet(*p, &amp;policy) != SECSuccess) {
    <fo:inline color="#0000ff">const</fo:inline> PRErrorCode err = PR_GetError();
    fprintf(stderr, <fo:inline color="#5C3566">"error: policy for cipher %u: error %d: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	      (<fo:inline color="#0000ff">unsigned</fo:inline>)*p, err, PR_ErrorToName(err));
    exit(<fo:inline color="#00007f">1</fo:inline>);
  }
  <fo:inline color="#002F5D">if</fo:inline> (policy == SSL_ALLOWED) {
    fprintf(stderr, <fo:inline color="#5C3566">"info: found cipher %x</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>, (<fo:inline color="#0000ff">unsigned</fo:inline>)*p);
    found_good_cipher = <fo:inline color="#00007f">1</fo:inline>;
    <fo:inline color="#002F5D">break</fo:inline>;
  }
}
<fo:inline color="#002F5D">if</fo:inline> (!found_good_cipher) {
  <fo:inline color="#002F5D">if</fo:inline> (NSS_SetDomesticPolicy() != SECSuccess) {
    <fo:inline color="#0000ff">const</fo:inline> PRErrorCode err = PR_GetError();
    fprintf(stderr, <fo:inline color="#5C3566">"error: NSS_SetDomesticPolicy: error %d: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	      err, PR_ErrorToName(err));
    exit(<fo:inline color="#00007f">1</fo:inline>);
  }
}

<fo:inline color="#FF00FF">// Initialize the trusted certificate store.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#0000ff">char</fo:inline> module_name[] = <fo:inline color="#5C3566">"library=libnssckbi.so name=</fo:inline><fo:inline color="#ff00ff">\"</fo:inline><fo:inline color="#5C3566">Root Certs</fo:inline><fo:inline color="#ff00ff">\"</fo:inline><fo:inline color="#5C3566">"</fo:inline>;
SECMODModule *module = SECMOD_LoadUserModule(module_name, NULL, PR_FALSE);
<fo:inline color="#002F5D">if</fo:inline> (module == NULL || !module-&gt;loaded) {
  <fo:inline color="#0000ff">const</fo:inline> PRErrorCode err = PR_GetError();
  fprintf(stderr, <fo:inline color="#5C3566">"error: NSPR error code %d: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	    err, PR_ErrorToName(err));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Some of the effects of the initialization can be reverted with the following function calls:
			</fo:block><fo:block id="ex-Defensive_Coding-TLS-NSS-Close" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block id="idp12777584" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
SECMOD_DestroyModule(module);
NSS_ShutdownContext(ctx);
</fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				After NSS has been initialized, the TLS connection can be created (<fo:basic-link internal-destination="ex-Defensive_Coding-TLS-Client-NSS-Connect"><fo:inline font-style="italic" color="#0066cc">Example 12.23, “Creating a TLS connection with NSS”</fo:inline></fo:basic-link>). The internal <fo:inline font-family="Liberation Mono,monospace">PR_ImportTCPSocket</fo:inline> function is used to turn the POSIX file descriptor <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">sockfd</fo:inline> into an NSPR file descriptor. (This function is de-facto part of the NSS public ABI, so it will not go away.) Creating the TLS-capable file descriptor requires a <fo:inline font-style="italic">model</fo:inline> descriptor, which is configured with the desired set of protocols and ciphers. (The <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">good_ciphers</fo:inline> variable is part of <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-NSS-Init"><fo:inline font-style="italic" color="#0066cc">Example 12.22, “Initializing the NSS library”</fo:inline></fo:basic-link>.) We cannot resort to disabling ciphers not on a whitelist because by default, the AES cipher suites are disabled. The model descriptor is not needed anymore after TLS support has been activated for the existing connection descriptor.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The call to <fo:inline font-family="Liberation Mono,monospace">SSL_BadCertHook</fo:inline> can be omitted if no mechanism to override certificate verification is needed. The <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">bad_certificate</fo:inline> function must check both the host name specified for the connection and the certificate before granting the override.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Triggering the actual handshake requires three function calls, <fo:inline font-family="Liberation Mono,monospace">SSL_ResetHandshake</fo:inline>, <fo:inline font-family="Liberation Mono,monospace">SSL_SetURL</fo:inline>, and <fo:inline font-family="Liberation Mono,monospace">SSL_ForceHandshake</fo:inline>. (If <fo:inline font-family="Liberation Mono,monospace">SSL_ResetHandshake</fo:inline> is omitted, <fo:inline font-family="Liberation Mono,monospace">SSL_ForceHandshake</fo:inline> will succeed, but the data will not be encrypted.) During the handshake, the certificate is verified and matched against the host name.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-Client-NSS-Connect" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.23. Creating a TLS connection with NSS</fo:block><fo:block id="idp19866336" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#FF00FF">// Wrap the POSIX file descriptor.  This is an internal NSPR</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">// function, but it is very unlikely to change.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>PRFileDesc* nspr = PR_ImportTCPSocket(sockfd);
sockfd = <fo:inline color="#00007f">-1</fo:inline>; <fo:inline color="#FF00FF">// Has been taken over by NSPR.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF">// Add the SSL layer.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>{
  PRFileDesc *model = PR_NewTCPSocket();
  PRFileDesc *newfd = SSL_ImportFD(NULL, model);
  <fo:inline color="#002F5D">if</fo:inline> (newfd == NULL) {
    <fo:inline color="#0000ff">const</fo:inline> PRErrorCode err = PR_GetError();
    fprintf(stderr, <fo:inline color="#5C3566">"error: NSPR error code %d: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	      err, PR_ErrorToName(err));
    exit(<fo:inline color="#00007f">1</fo:inline>);
  }
  model = newfd;
  newfd = NULL;
  <fo:inline color="#002F5D">if</fo:inline> (SSL_OptionSet(model, SSL_ENABLE_SSL2, PR_FALSE) != SECSuccess) {
    <fo:inline color="#0000ff">const</fo:inline> PRErrorCode err = PR_GetError();
    fprintf(stderr, <fo:inline color="#5C3566">"error: set SSL_ENABLE_SSL2 error %d: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	      err, PR_ErrorToName(err));
    exit(<fo:inline color="#00007f">1</fo:inline>);
  }
  <fo:inline color="#002F5D">if</fo:inline> (SSL_OptionSet(model, SSL_V2_COMPATIBLE_HELLO, PR_FALSE) != SECSuccess) {
    <fo:inline color="#0000ff">const</fo:inline> PRErrorCode err = PR_GetError();
    fprintf(stderr, <fo:inline color="#5C3566">"error: set SSL_V2_COMPATIBLE_HELLO error %d: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	      err, PR_ErrorToName(err));
    exit(<fo:inline color="#00007f">1</fo:inline>);
  }
  <fo:inline color="#002F5D">if</fo:inline> (SSL_OptionSet(model, SSL_ENABLE_DEFLATE, PR_FALSE) != SECSuccess) {
    <fo:inline color="#0000ff">const</fo:inline> PRErrorCode err = PR_GetError();
    fprintf(stderr, <fo:inline color="#5C3566">"error: set SSL_ENABLE_DEFLATE error %d: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	      err, PR_ErrorToName(err));
    exit(<fo:inline color="#00007f">1</fo:inline>);
  }

  <fo:inline color="#FF00FF">// Disable all ciphers (except RC4-based ciphers, for backwards</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>  <fo:inline color="#FF00FF">// compatibility).</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>  <fo:inline color="#0000ff">const</fo:inline> PRUint16 *<fo:inline color="#0000ff">const</fo:inline> ciphers = SSL_GetImplementedCiphers();
  <fo:inline color="#002F5D">for</fo:inline> (<fo:inline color="#0000ff">unsigned</fo:inline> i = 0; i &lt; SSL_GetNumImplementedCiphers(); i++) {
    <fo:inline color="#002F5D">if</fo:inline> (ciphers[i] != SSL_RSA_WITH_RC4_128_SHA
	  &amp;&amp; ciphers[i] != SSL_RSA_WITH_RC4_128_MD5) {
	<fo:inline color="#002F5D">if</fo:inline> (SSL_CipherPrefSet(model, ciphers[i], PR_FALSE) != SECSuccess) {
	  <fo:inline color="#0000ff">const</fo:inline> PRErrorCode err = PR_GetError();
	  fprintf(stderr, <fo:inline color="#5C3566">"error: disable cipher %u: error %d: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
		  (<fo:inline color="#0000ff">unsigned</fo:inline>)ciphers[i], err, PR_ErrorToName(err));
	  exit(<fo:inline color="#00007f">1</fo:inline>);
	}
    }
  }

  <fo:inline color="#FF00FF">// Enable the strong ciphers.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>  <fo:inline color="#002F5D">for</fo:inline> (<fo:inline color="#0000ff">const</fo:inline> PRUint16 *p = good_ciphers; *p != SSL_NULL_WITH_NULL_NULL;
	 ++p) {
    <fo:inline color="#002F5D">if</fo:inline> (SSL_CipherPrefSet(model, *p, PR_TRUE) != SECSuccess) {
	<fo:inline color="#0000ff">const</fo:inline> PRErrorCode err = PR_GetError();
	fprintf(stderr, <fo:inline color="#5C3566">"error: enable cipher %u: error %d: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
		(<fo:inline color="#0000ff">unsigned</fo:inline>)*p, err, PR_ErrorToName(err));
	exit(<fo:inline color="#00007f">1</fo:inline>);
    }
  }

  <fo:inline color="#FF00FF">// Allow overriding invalid certificate.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>  <fo:inline color="#002F5D">if</fo:inline> (SSL_BadCertHook(model, bad_certificate, (<fo:inline color="#0000ff">char</fo:inline> *)host) != SECSuccess) {
    <fo:inline color="#0000ff">const</fo:inline> PRErrorCode err = PR_GetError();
    fprintf(stderr, <fo:inline color="#5C3566">"error: SSL_BadCertHook error %d: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	      err, PR_ErrorToName(err));
    exit(<fo:inline color="#00007f">1</fo:inline>);
  }

  newfd = SSL_ImportFD(model, nspr);
  <fo:inline color="#002F5D">if</fo:inline> (newfd == NULL) {
    <fo:inline color="#0000ff">const</fo:inline> PRErrorCode err = PR_GetError();
    fprintf(stderr, <fo:inline color="#5C3566">"error: SSL_ImportFD error %d: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	      err, PR_ErrorToName(err));
    exit(<fo:inline color="#00007f">1</fo:inline>);
  }
  nspr = newfd;
  PR_Close(model);
}

<fo:inline color="#FF00FF">// Perform the handshake.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#002F5D">if</fo:inline> (SSL_ResetHandshake(nspr, PR_FALSE) != SECSuccess) {
  <fo:inline color="#0000ff">const</fo:inline> PRErrorCode err = PR_GetError();
  fprintf(stderr, <fo:inline color="#5C3566">"error: SSL_ResetHandshake error %d: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	    err, PR_ErrorToName(err));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
<fo:inline color="#002F5D">if</fo:inline> (SSL_SetURL(nspr, host) != SECSuccess) {
  <fo:inline color="#0000ff">const</fo:inline> PRErrorCode err = PR_GetError();
  fprintf(stderr, <fo:inline color="#5C3566">"error: SSL_SetURL error %d: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	    err, PR_ErrorToName(err));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
<fo:inline color="#002F5D">if</fo:inline> (SSL_ForceHandshake(nspr) != SECSuccess) {
  <fo:inline color="#0000ff">const</fo:inline> PRErrorCode err = PR_GetError();
  fprintf(stderr, <fo:inline color="#5C3566">"error: SSL_ForceHandshake error %d: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	    err, PR_ErrorToName(err));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				After the connection has been established, <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-NSS-Use"><fo:inline font-style="italic" color="#0066cc">Example 12.24, “Using NSS for sending and receiving data”</fo:inline></fo:basic-link> shows how to use the NSPR descriptor to communicate with the server.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-NSS-Use" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.24. Using NSS for sending and receiving data</fo:block><fo:block id="idp13425504" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#0000ff">char</fo:inline> buf[4096];
snprintf(buf, <fo:inline color="#002F5D">sizeof</fo:inline>(buf), <fo:inline color="#5C3566">"GET / HTTP/1.0</fo:inline><fo:inline color="#ff00ff">\r\n</fo:inline><fo:inline color="#5C3566">Host: %s</fo:inline><fo:inline color="#ff00ff">\r\n\r\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>, host);
PRInt32 ret = PR_Write(nspr, buf, strlen(buf));
<fo:inline color="#002F5D">if</fo:inline> (ret &lt; 0) {
  <fo:inline color="#0000ff">const</fo:inline> PRErrorCode err = PR_GetError();
  fprintf(stderr, <fo:inline color="#5C3566">"error: PR_Write error %d: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	    err, PR_ErrorToName(err));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
ret = PR_Read(nspr, buf, <fo:inline color="#002F5D">sizeof</fo:inline>(buf));
<fo:inline color="#002F5D">if</fo:inline> (ret &lt; 0) {
  <fo:inline color="#0000ff">const</fo:inline> PRErrorCode err = PR_GetError();
  fprintf(stderr, <fo:inline color="#5C3566">"error: PR_Read error %d: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	    err, PR_ErrorToName(err));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				<fo:basic-link internal-destination="ex-Defensive_Coding-TLS-Client-NSS-Close"><fo:inline font-style="italic" color="#0066cc">Example 12.25, “Closing NSS client connections”</fo:inline></fo:basic-link> shows how to close the connection.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-Client-NSS-Close" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.25. Closing NSS client connections</fo:block><fo:block id="idp28753184" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#FF00FF">// Send close_notify alert.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#002F5D">if</fo:inline> (PR_Shutdown(nspr, PR_SHUTDOWN_BOTH) != PR_SUCCESS) {
  <fo:inline color="#0000ff">const</fo:inline> PRErrorCode err = PR_GetError();
  fprintf(stderr, <fo:inline color="#5C3566">"error: PR_Read error %d: %s</fo:inline><fo:inline color="#ff00ff">\n</fo:inline><fo:inline color="#5C3566">"</fo:inline>,
	    err, PR_ErrorToName(err));
  exit(<fo:inline color="#00007f">1</fo:inline>);
}
<fo:inline color="#FF00FF">// Closes the underlying POSIX file descriptor, too.</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/>PR_Close(nspr);
</fo:block></fo:block></fo:block></fo:block><fo:block id="sect-Defensive_Coding-TLS-Client-Python"><fo:block><fo:block><fo:block margin-left="0pc" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" keep-together.within-column="always"><fo:block keep-with-next.within-column="always"><fo:block font-family="Liberation Sans,sans-serif" font-weight="bold" keep-with-next.within-column="always" space-before.minimum="1.8em" space-before.optimum="2.0em" space-before.maximum="2.2em" space-after.minimum="0.1em" space-after.optimum="0.1em" space-after.maximum="0.1em" text-align="left" start-indent="0pc"><fo:marker marker-class-name="section.head.marker">Implementing TLS Clients With Python</fo:marker><fo:block color="#3c6eb4" font-size="14pt">12.2.5. Implementing TLS Clients With Python</fo:block></fo:block></fo:block></fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The Python distribution provides a TLS implementation in the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">ssl</fo:inline> module (actually a wrapper around OpenSSL). The exported interface is somewhat restricted, so that the client code shown below does not fully implement the recommendations in <fo:basic-link internal-destination="sect-Defensive_Coding-TLS-OpenSSL"><fo:inline font-style="italic" color="#0066cc">Section 12.1.1, “OpenSSL Pitfalls”</fo:inline></fo:basic-link>.
			</fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" id="idp13207344" keep-together.within-column="always" color="black" background-color="white" padding-bottom="-3em" padding-top="0pt" padding-left="0em" margin-left="0em" space-before.optimum="1em" space-before.minimum="0.8em" space-before.maximum="1.2em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" margin-top="1em" margin-bottom="4em"><fo:block-container><fo:block-container margin-left="0em"><fo:block padding-left="0em" padding-bottom="0em" margin-left="0em" margin-bottom="0em" text-indent="3em" font-size="13pt" color="#eeeeec" font-weight="bold" hyphenate="true" keep-with-next.within-column="always" background-color="#d08e13">Important</fo:block></fo:block-container><fo:block-container margin-left="0em"><fo:block margin-right="0em" margin-left="0em" background-color="#eeeeec" border-left-width="1pt" border-left-style="solid" border-left-color="#aaaaaa" border-right-width="1pt" border-right-style="solid" border-right-color="#aaaaaa" border-bottom-width="1pt" border-bottom-style="solid" border-bottom-color="#aaaaaa" padding-top="1.5em" padding-left="1em" padding-right="1em" margin-top="0em" margin-bottom="0em"><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
					Currently, most Python function which accept <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">https://</fo:inline> URLs or otherwise implement HTTPS support do not perform certificate validation at all. (For example, this is true for the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">httplib</fo:inline> and <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">xmlrpclib</fo:inline> modules.) If you use HTTPS, you should not use the built-in HTTP clients. The <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">Curl</fo:inline> class in the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">curl</fo:inline> module, as provided by the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">python-pycurl</fo:inline> package implements proper certificate validation.
				</fo:block></fo:block></fo:block-container><fo:block-container position="absolute" top="-12px" left="1px" margin-left="0em"><fo:block><fo:external-graphic width="auto" height="auto" content-width="36pt" src="url(Common_Content/images/important.svg)"/></fo:block></fo:block-container></fo:block-container></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">ssl</fo:inline> module currently does not perform host name checking on the server certificate. <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-Client-Python-check_host_name"><fo:inline font-style="italic" color="#0066cc">Example 12.26, “Implementing TLS host name checking Python (without wildcard support)”</fo:inline></fo:basic-link> shows how to implement certificate matching, using the parsed certificate returned by <fo:inline font-family="Liberation Mono,monospace">getpeercert</fo:inline>.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-Client-Python-check_host_name" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.26. Implementing TLS host name checking Python (without wildcard support)</fo:block><fo:block id="idp13532688" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
<fo:inline color="#002F5D">def</fo:inline> check_host_name<fo:inline color="#ff00ff">(peercert</fo:inline>, name<fo:inline color="#ff00ff">):</fo:inline>
    <fo:inline color="#FF00FF">"""Simple certificate/host name checker.  Returns True if the</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">    certificate matches, False otherwise.  Does not support</fo:inline><fo:inline color="#FF00FF"/>
<fo:inline color="#FF00FF"/><fo:inline color="#FF00FF">    wildcards."""</fo:inline>
    # Check that the peer has supplied a certificate.
    # <fo:inline color="#b03060">None</fo:inline><fo:inline color="#ff00ff">/{}</fo:inline> <fo:inline color="#002F5D">is</fo:inline> <fo:inline color="#002F5D">not</fo:inline> acceptable.
    <fo:inline color="#002F5D">if</fo:inline> <fo:inline color="#002F5D">not</fo:inline> peercert<fo:inline color="#ff00ff">:</fo:inline>
        <fo:inline color="#002F5D">return</fo:inline> <fo:inline color="#b03060">False</fo:inline>
    <fo:inline color="#002F5D">if</fo:inline> peercert.has_key<fo:inline color="#ff00ff">(</fo:inline><fo:inline color="#5C3566">"subjectAltName"</fo:inline><fo:inline color="#ff00ff">):</fo:inline>
        <fo:inline color="#002F5D">for</fo:inline> typ, val <fo:inline color="#002F5D">in</fo:inline> peercert<fo:inline color="#ff00ff">[</fo:inline><fo:inline color="#5C3566">"subjectAltName"</fo:inline><fo:inline color="#ff00ff">]:</fo:inline>
            <fo:inline color="#002F5D">if</fo:inline> typ <fo:inline color="#ff00ff">==</fo:inline> <fo:inline color="#5C3566">"DNS"</fo:inline> <fo:inline color="#002F5D">and</fo:inline> val <fo:inline color="#ff00ff">==</fo:inline> name<fo:inline color="#ff00ff">:</fo:inline>
                <fo:inline color="#002F5D">return</fo:inline> <fo:inline color="#b03060">True</fo:inline>
    <fo:inline color="#002F5D">else</fo:inline><fo:inline color="#ff00ff">:</fo:inline>
        # Only check the subject DN <fo:inline color="#002F5D">if</fo:inline> there <fo:inline color="#002F5D">is</fo:inline> no subject alternative
        # name.
        cn <fo:inline color="#ff00ff">=</fo:inline> <fo:inline color="#b03060">None</fo:inline>
        <fo:inline color="#002F5D">for</fo:inline> attr, val <fo:inline color="#002F5D">in</fo:inline> peercert<fo:inline color="#ff00ff">[</fo:inline><fo:inline color="#5C3566">"subject"</fo:inline><fo:inline color="#ff00ff">]:</fo:inline>
            # Use most<fo:inline color="#ff00ff">-specific</fo:inline> <fo:inline color="#ff00ff">(last)</fo:inline> commonName attribute.
            <fo:inline color="#002F5D">if</fo:inline> attr <fo:inline color="#ff00ff">==</fo:inline> <fo:inline color="#5C3566">"commonName"</fo:inline><fo:inline color="#ff00ff">:</fo:inline>
                cn <fo:inline color="#ff00ff">=</fo:inline> val
        <fo:inline color="#002F5D">if</fo:inline> cn <fo:inline color="#002F5D">is</fo:inline> <fo:inline color="#002F5D">not</fo:inline> <fo:inline color="#b03060">None</fo:inline><fo:inline color="#ff00ff">:</fo:inline>
            <fo:inline color="#002F5D">return</fo:inline> cn <fo:inline color="#ff00ff">==</fo:inline> name
    <fo:inline color="#002F5D">return</fo:inline> <fo:inline color="#b03060">False</fo:inline>
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				To turn a regular, connected TCP socket into a TLS-enabled socket, use the <fo:inline font-family="Liberation Mono,monospace">ssl.wrap_socket</fo:inline> function. The function call in <fo:basic-link internal-destination="ex-Defensive_Coding-TLS-Client-Python-Connect"><fo:inline font-style="italic" color="#0066cc">Example 12.27, “Establishing a TLS client connection with Python”</fo:inline></fo:basic-link> provides additional arguments to override questionable defaults in OpenSSL and in the Python module.
			</fo:block><fo:list-block id="idp13536784" space-before.optimum="0.1pt" space-before.minimum="0.1pt" space-before.maximum="0.1pt" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em" provisional-label-separation="0.2em" provisional-distance-between-starts="1.0em"><fo:list-item id="idp13537104" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">ciphers="HIGH:-aNULL:-eNULL:-PSK:RC4-SHA:RC4-MD5"</fo:inline> selects relatively strong cipher suites with certificate-based authentication. (The call to <fo:inline font-family="Liberation Mono,monospace">check_host_name</fo:inline> function provides additional protection against anonymous cipher suites.)
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp28562768" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">ssl_version=ssl.PROTOCOL_TLSv1</fo:inline> disables SSL 2.0 support. By default, the <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">ssl</fo:inline> module sends an SSL 2.0 client hello, which is rejected by some servers. Ideally, we would request OpenSSL to negotiated the most recent TLS version supported by the server and the client, but the Python module does not allow this.
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp28564848" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">cert_reqs=ssl.CERT_REQUIRED</fo:inline> turns on certificate validation.
					</fo:block></fo:block></fo:list-item-body></fo:list-item><fo:list-item id="idp28566224" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em"><fo:list-item-label end-indent="label-end()"><fo:block>•</fo:block></fo:list-item-label><fo:list-item-body start-indent="body-start()"><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.optimum="0.1em" space-before.minimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="1em" space-after.maximum="1em">
						<fo:inline font-weight="bold" font-family="Liberation Mono,monospace">ca_certs='/etc/ssl/certs/ca-bundle.crt'</fo:inline> initializes the certificate store with a set of trusted root CAs. Unfortunately, it is necessary to hard-code this path into applications because the default path in OpenSSL is not available through the Python <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">ssl</fo:inline> module.
					</fo:block></fo:block></fo:list-item-body></fo:list-item></fo:list-block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				The <fo:inline font-weight="bold" font-family="Liberation Mono,monospace">ssl</fo:inline> module (and OpenSSL) perform certificate validation, but the certificate must be compared manually against the host name, by calling the <fo:inline font-family="Liberation Mono,monospace">check_host_name</fo:inline> defined above.
			</fo:block><fo:block><fo:block id="ex-Defensive_Coding-TLS-Client-Python-Connect" border-left-width="3pt" border-left-style="solid" border-left-color="#aaaaaa" keep-together.within-column="" margin-left="0em" padding-left="0.8em" padding-top="0em" margin-top="1.5em" space-after.minimum="2em" space-after.optimum="2em" space-after.maximum="2em" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em"><fo:block font-weight="normal" font-size="10pt" space-before.optimum="1em" space-before.minimum="0.5em" space-before.maximum="2em" space-after.optimum="0.1pt" space-after.minimum="0.1pt" space-after.maximum="0.1pt" color="#3c6eb4" background-color="white" hyphenate="false" keep-with-next.within-column="always">Example 12.27. Establishing a TLS client connection with Python</fo:block><fo:block id="idp28959008" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
sock <fo:inline color="#ff00ff">=</fo:inline> ssl.wrap_socket<fo:inline color="#ff00ff">(sock</fo:inline>,
                       ciphers<fo:inline color="#ff00ff">=</fo:inline><fo:inline color="#5C3566">"HIGH:-aNULL:-eNULL:-PSK:RC4-SHA:RC4-MD5"</fo:inline>,
                       ssl_version<fo:inline color="#ff00ff">=ssl</fo:inline>.PROTOCOL_TLSv1,
                       cert_reqs<fo:inline color="#ff00ff">=ssl</fo:inline>.CERT_REQUIRED,
                       ca_certs<fo:inline color="#ff00ff">=</fo:inline><fo:inline color="#5C3566">'/etc/ssl/certs/ca-bundle.crt'</fo:inline><fo:inline color="#ff00ff">)</fo:inline>
# getpeercert<fo:inline color="#ff00ff">()</fo:inline> triggers the handshake <fo:inline color="#ff00ff">as</fo:inline> a side effect.
<fo:inline color="#002F5D">if</fo:inline> <fo:inline color="#002F5D">not</fo:inline> check_host_name<fo:inline color="#ff00ff">(sock</fo:inline>.getpeercert<fo:inline color="#ff00ff">()</fo:inline>, host<fo:inline color="#ff00ff">):</fo:inline>
    <fo:inline color="#002F5D">raise</fo:inline> IOError<fo:inline color="#ff00ff">(</fo:inline><fo:inline color="#5C3566">"peer certificate does not match host name"</fo:inline><fo:inline color="#ff00ff">)</fo:inline>
</fo:block></fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				After the connection has been established, the TLS socket can be used like a regular socket:
			</fo:block><fo:block id="idp28142944" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block id="idp28143456" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
sock.write<fo:inline color="#ff00ff">(</fo:inline><fo:inline color="#5C3566">"GET / HTTP/1.1\r\nHost: "</fo:inline> <fo:inline color="#ff00ff">+</fo:inline> host <fo:inline color="#ff00ff">+</fo:inline> <fo:inline color="#5C3566">"\r\n\r\n"</fo:inline><fo:inline color="#ff00ff">)</fo:inline>
<fo:inline color="#002F5D">print</fo:inline> sock.read<fo:inline color="#ff00ff">()</fo:inline>
</fo:block></fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
				Closing the TLS socket is straightforward as well:
			</fo:block><fo:block id="idp28145680" space-before.minimum="0.5em" space-before.optimum="1em" space-before.maximum="2em" space-after.minimum="0.5em" space-after.optimum="1em" space-after.maximum="2em"><fo:block id="idp28146192" text-align="start" wrap-option="wrap" hyphenation-character="\" space-before.minimum="0.8em" space-before.optimum="1em" space-before.maximum="1.2em" space-after.minimum="0.8em" space-after.optimum="1em" space-after.maximum="1.2em" hyphenate="true" white-space-collapse="false" white-space-treatment="preserve" linefeed-treatment="preserve" font-family="Liberation Mono,monospace" background-color="#f5f5f5" color="black" padding-left="6pt" padding-top="6pt" padding-bottom="6pt" margin-left="0pc" font-size="8pt" border-width="1pt" border-style="solid" border-color="#aaaaaa">
sock.close<fo:inline color="#ff00ff">()</fo:inline>
</fo:block></fo:block></fo:block></fo:block></fo:flow></fo:page-sequence><fo:page-sequence xmlns:axf="http://www.antennahouse.com/names/XSL/Extensions" hyphenate="true" master-reference="back" language="en" format="1" initial-page-number="auto-odd" force-page-count="end-on-even" hyphenation-character="-" hyphenation-push-character-count="2" hyphenation-remain-character-count="2"><fo:static-content flow-name="xsl-region-before-first"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-odd"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always"><fo:retrieve-marker retrieve-class-name="section.head.marker" retrieve-position="first-including-carryover" retrieve-boundary="page-sequence"/></fo:inline></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-even"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block><fo:inline keep-together.within-line="always" font-weight="bold">Appendix A. Revision History</fo:inline></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-before-blank"><fo:block wrap-option="no-wrap" font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-bottom-width="0.5pt" border-bottom-style="solid" border-bottom-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(0)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="center" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell><fo:table-cell text-align="right" display-align="before" relative-align="baseline"><fo:block/></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" flow-name="xsl-footnote-separator"><fo:block margin-top="2em"><fo:leader color="black" leader-pattern="rule" leader-length="1in"/></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-inner-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-inner-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-first"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-odd"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-even"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-outer-blank"><fo:block/></fo:static-content><fo:static-content flow-name="xsl-region-after-first"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-odd"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-even"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:static-content flow-name="xsl-region-after-blank"><fo:block font-family="Liberation Sans,sans-serif,Symbol,ZapfDingbats" margin-left="0pc"><fo:table table-layout="fixed" width="100%" border-top-width="0.5pt" border-top-style="solid" border-top-color="black"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(1)"/><fo:table-column column-number="3" column-width="proportional-column-width(1)"/><fo:table-body><fo:table-row block-progression-dimension.minimum="14pt"><fo:table-cell text-align="start" display-align="after" relative-align="baseline"><fo:block><fo:block><fo:page-number/></fo:block></fo:block></fo:table-cell><fo:table-cell text-align="center" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell><fo:table-cell text-align="end" display-align="after" relative-align="baseline"><fo:block><fo:block/></fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table></fo:block></fo:static-content><fo:flow flow-name="xsl-region-body" start-indent="0pt" end-indent="0pt"><fo:block id="appe-UEFI_Secure_Boot_Guide-Revision_History"><fo:block><fo:block><fo:block xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" color="#3c6eb4" background-color="white" font-size="24pt" font-weight="bold" text-align="left" padding-left="1em" padding-right="1em">Appendix A. Revision History</fo:block></fo:block></fo:block></fo:block><fo:block space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em">
		<fo:table xmlns="http://www.w3.org/TR/xhtml1/transitional" xmlns:rx="http://www.renderx.com/XSL/Extensions" table-layout="fixed"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-column column-number="2" column-width="proportional-column-width(2)"/><fo:table-column column-number="3" column-width="proportional-column-width(3)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Revision 0-1</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Thu Mar 7 2013</fo:block></fo:table-cell><fo:table-cell font-weight="bold" padding-left="4pt" padding-right="4pt" padding-top="2pt" padding-bottom="2pt" padding-start="2pt" padding-end="2pt"><fo:block>Eric Christensen <fo:inline font-family="Liberation Mono,monospace"><fo:inline keep-together.within-line="always" hyphenate="false"><fo:basic-link external-destination="mailto:sparks@redhat.com" font-style="italic" color="#0066cc">sparks@redhat.com</fo:basic-link></fo:inline></fo:inline></fo:block></fo:table-cell></fo:table-row><fo:table-row><fo:table-cell number-columns-spanned="3" padding-bottom="25pt" font-weight="normal" padding-left="16pt"><fo:block>
					<fo:table id="idp30667344" space-before.minimum="0.1em" space-before.optimum="0.1em" space-before.maximum="0.1em" space-after.optimum="1em" space-after.minimum="0.8em" space-after.maximum="1.2em" table-layout="fixed" width="100%"><fo:table-column column-number="1" column-width="proportional-column-width(1)"/><fo:table-body start-indent="0pt" end-indent="0pt"><fo:table-row><fo:table-cell><fo:block>Initial publication.</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

				</fo:block></fo:table-cell></fo:table-row></fo:table-body></fo:table>

	</fo:block></fo:flow></fo:page-sequence></fo:root>